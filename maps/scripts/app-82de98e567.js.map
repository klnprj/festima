{"version":3,"sources":["scripts/app-82de98e567.js"],"names":["angular","module","webDevTec","getTec","data","title","url","description","logo","this","service","app","SearchController","vm","q","Object","defineProperty","get","_q","set","value","onSearchChanged","component","templateUrl","bindings","controllerAs","controller","$scope","$uibModalInstance","position","messages","onNewMessage","ok","close","cancel","dismiss","addNewMessage","newMessage","$uibModal","$log","moment","Message","messagesManager","session","openMessages","modalInstance","loadAllMessages","id","then","open","animation","size","resolve","addMessage","result","selectedItem","info","Date","_message","msg","extend","positionId","save","getMessage","message","push","acmeNavbar","NavbarController","profile","user","relativeDate","creationDate","fromNow","$inject","directive","restrict","scope","bindToController","acmeMalarkey","malarkey","linkFunc","el","attr","watcher","typist","typeSpeed","deleteSpeed","pauseDelay","loop","postfix","addClass","forEach","extraValues","type","pause","$watch","contributors","contributor","login","$on","MalarkeyController","githubContributor","activate","getContributors","template","link","$http","limit","getContributorsComplete","response","getContributorsFailed","error","toJson","apiHost","factory","DictionaryAutocompleteLink","element","attrs","key","name","DictionaryAutocompleteController","$sce","dictionaries","items","trustAsHtml","refreshItems","itemsByKey","undefined","selected","DictionaryComponentController","$q","newItem","currentPage","itemsPerPage","add","item","addItem","pageChanged","count","countItemsByKey","all","totalItems","addNewPosition","newPosition","copy","inputPosition","onAddPosition","dealerId","removePosition","onDeletePosition","dealer","activePosition","removed","positions","transclude","CommentsController","newComment","addNewComment","onAddComment","comment","text","comments","CommentController","BuildingsNearbyController","maps","addresses","toastr","findNearbyBuildings","address","latLng","centroidToLatlng","geometry","centroid","listWithinRadius","buildings","_","isEmpty","_address","newVal","BuildingFormController","building","dealers","buildingPositions","dealerList","_dealers","buildingDealersMap","dealersMap","loadPositions","buildingId","list1","i","length","console","log","savePositions","dealerMap","create1","resp","index","map","e","indexOf","splice","addDealerPosition","removeDealerPosition","loadDealers","list","refreshDealers","addDealer","keys","BuildingContactsController","removeContact","contact","onRemoveContact","contacts","setSelected","asyncSelected","latLng0","isDefined","DG","location","initMap","marker","getMarker","addTo","on","latlng","lat","lng","searchCoords","removeLayer","attributes","buildingname","bindPopup","locationFullName","full_name","number","latLngToWkt","onAddressSelected","searchAddress","addLayer","panTo","getLocation","suggestions","onSelect","itemData","model","label","search","hint","setZoom","detailedZoom","AddressInputController","AddContactController","appConfig","initNewContact","_contactType","newValue","getContacts","getContactTypes","apiUrl","contactTypes","addContact","newContact","typeName","find","contactType","contactName","contactId","onContactAdded","onCheckAdded","onAddDealer","findAllByQuery","User","cachedPromises","usersManager","_pool","_retrieveInstance","instance","setData","_search","getUser","isUndefined","loadAllUsers","deferred","defer","success","itemsArray","reject","promise","setUser","prototype","post","delete","update","put","_load","author","params","setMessage","self","dgis","overviewZoom","zoom","center","geoclicker","showPhotos","showBooklet","ajax","output","region_id","getById","fields","point","version","Wkt","toPoints","wkt","saveContact","MainController","$timeout","getWebDevTec","classAnimation","showToastr","awesomeThings","awesomeThing","rank","Math","random","$state","$rootScope","$cookies","OAuth","OAuthToken","loadCurrentUser","userId","currentUserPromise","credentials","options","getAccessToken","logout","remove","go","getUserId","isAuthenticated","checkLoggedIn","skipLoggedIn","spinnerService","username","email","password","loginForm","$setPristine","res","err","$setValidity","$stateParams","loadByKey","dictionary","listAll","offset","max","loadItem","listAllByBuilding","createPosition","positionData","filter","mapAll","listByIds","ids","createComment","commentData","Building","buildingsManager","getBuilding","loadAllBuildings","setBuilding","Buildings","BuildingDealer","buildingDealersManager","unsavedId","min","_unsaved","unsaved","Number","getBuildingDealer","loadAllBuildingDealers","setBuildingDealer","getDealersPositionsMap","dealerPositionsMap","mapOfDealers","saveDealerPositions","positionsList","savedPosition","loadComments","addComment","loadBuildings","total","filtersOpen","getBuildingDealers","d","join","require","ngModel","$parsers","val","parseInt","$formatters","$location","buildingDealersService","updateBuildingContacts","contactList","promises","when","mapOfDealersPositions","dealersPositionsMap","dealerPositions","isAddedDealer","String","saveChanges","path","onSelectAddress","addressObject","radius","buildingsPromise","positionBuildingsOnMap","$apply","target","mapPromise","results","runBlock","debug","run","$window","event","rejection","getRefreshToken","href","routerConfig","$stateProvider","$urlRouterProvider","state","abstract","views","loggedin","loggedout","container@private","container@public","otherwise","config","constant","window","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","authInterceptor","responseError","status","OAuthProvider","configure","grantPath","revokePath","baseUrl","clientId","secure","OAuthTokenProvider","$httpProvider","interceptors","$injector","$templateCache"],"mappings":"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","file":"scripts/app-82de98e567.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('festima', ['ngMessages', 'ngAnimate', 'ngRoute', 'ui.router', 'ngAnimate', 'ngSanitize', 'ui.bootstrap', 'toastr', 'ui.select',\r\n      'angular-oauth2', 'angularSpinners']);\r\n\r\n})();\r\n\n(function() {\n  'use strict';\n\n  angular\n      .module('festima')\n      .service('webDevTec', webDevTec);\n\n  /** @ngInject */\n  function webDevTec() {\n    var data = [\n      {\n        'title': 'AngularJS',\n        'url': 'https://angularjs.org/',\n        'description': 'HTML enhanced for web apps!',\n        'logo': 'angular.png'\n      },\n      {\n        'title': 'BrowserSync',\n        'url': 'http://browsersync.io/',\n        'description': 'Time-saving synchronised browser testing.',\n        'logo': 'browsersync.png'\n      },\n      {\n        'title': 'GulpJS',\n        'url': 'http://gulpjs.com/',\n        'description': 'The streaming build system.',\n        'logo': 'gulp.png'\n      },\n      {\n        'title': 'Jasmine',\n        'url': 'http://jasmine.github.io/',\n        'description': 'Behavior-Driven JavaScript.',\n        'logo': 'jasmine.png'\n      },\n      {\n        'title': 'Karma',\n        'url': 'http://karma-runner.github.io/',\n        'description': 'Spectacular Test Runner for JavaScript.',\n        'logo': 'karma.png'\n      },\n      {\n        'title': 'Protractor',\n        'url': 'https://github.com/angular/protractor',\n        'description': 'End to end test framework for AngularJS applications built on top of WebDriverJS.',\n        'logo': 'protractor.png'\n      },\n      {\n        'title': 'Bootstrap',\n        'url': 'http://getbootstrap.com/',\n        'description': 'Bootstrap is the most popular HTML, CSS, and JS framework for developing responsive, mobile first projects on the web.',\n        'logo': 'bootstrap.png'\n      },\n      {\n        'title': 'Angular UI Bootstrap',\n        'url': 'http://angular-ui.github.io/bootstrap/',\n        'description': 'Bootstrap components written in pure AngularJS by the AngularUI Team.',\n        'logo': 'ui-bootstrap.png'\n      }\n    ];\n\n    this.getTec = getTec;\n\n    function getTec() {\n      return data;\n    }\n  }\n\n})();\n\n(function(app) {\n  'use strict';\n\n  app.component('esSearch', {\n    templateUrl: 'app/components/search/search.html',\n    bindings: {\n      onSearchChanged: '&'\n    },\n    controllerAs: 'searchVm',\n    controller: SearchController\n  });\n\n  function SearchController() {\n    var vm = this;\n\n    var q = vm.q;\n    Object.defineProperty(this, 'q', {\n      get: function() {\n        return this._q;\n      },\n      set: function(value) {\n        this._q = value;\n        vm.onSearchChanged({q: value});\n      }\n    })\n  }\n\n}(angular.module('festima')));\n\nangular.module('festima')\n  .controller('MessagesModalController', function ($scope, $uibModalInstance, position, messages, onNewMessage) {\n    var vm = this;\n\n    vm.messages = messages;\n    vm.onNewMessage = onNewMessage;\n\n    vm.ok = function () {\n      // $uibModalInstance.close($scope.selected.item);\n      $uibModalInstance.close(position);\n    };\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss('cancel');\n    };\n\n    vm.addNewMessage = function() {\n      vm.onNewMessage(vm.newMessage);\n      vm.newMessage = {};\n    };\n  }\n);\n\nangular.module('festima')\r\n  .controller('MessagesButtonController', function($uibModal, $log, moment, Message, messagesManager, session) {\r\n    var vm = this;\r\n\r\n    vm.openMessages = function () {\r\n      // var _messages;\r\n      var modalInstance;\r\n\r\n      messagesManager.loadAllMessages(vm.position.id).then(function(data) {\r\n        vm.messages = data;\r\n\r\n        modalInstance = $uibModal.open({\r\n          animation: true,\r\n          templateUrl: 'app/components/messagesButton/messages-modal.html',\r\n          controller: 'MessagesModalController',\r\n          controllerAs: 'messagesModalVm',\r\n          size: 'lg',\r\n          resolve: {\r\n            position: function () {\r\n              return vm.position;\r\n            },\r\n            messages: function() {\r\n              return vm.messages;\r\n            },\r\n            onNewMessage: function() {\r\n              return vm.addMessage;\r\n            }\r\n          }\r\n        });\r\n\r\n        modalInstance.result.then(function (selectedItem) {\r\n          // $scope.selected = selectedItem;\r\n        }, function () {\r\n          $log.info('Modal dismissed at: ' + new Date());\r\n        });\r\n      });\r\n    };\r\n\r\n    vm.addMessage = function(_message) {\r\n      var msg = new Message(angular.extend(_message, {positionId: vm.position.id}));\r\n\r\n      msg.save().then(function(id) {\r\n        // messagesManager.loadAllMessages(vm.position.id).then(function(data) {\r\n        //   angular.copy(data, vm.messages);\r\n        // });\r\n        messagesManager.getMessage(id).then(function(message) {\r\n          vm.messages.push(message);\r\n        });\r\n      });\r\n    };\r\n  }\r\n);\r\n\nangular.module('festima').component('messagesButton', {\n  templateUrl: 'app/components/messagesButton/messages-button.html',\n  bindings: {\n    position: '<'\n  },\n  controller: 'MessagesButtonController',\n  controllerAs: 'messagesButtonVm'\n});\n\n(function() {\n  'use strict';\n\n  angular\n    .module('festima')\n    .directive('acmeNavbar', acmeNavbar);\n\n  /** @ngInject */\n  function acmeNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      scope: {\n          creationDate: '='\n      },\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController(moment, session) {\n      var vm = this;\n\n      session.profile().then(function(user) {\n        vm.user = user;\n      });\n\n      // \"vm.creation\" is avaible by directive option \"bindToController: true\"\n      vm.relativeDate = moment(vm.creationDate).fromNow();\n\n\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('festima')\n    .directive('acmeMalarkey', acmeMalarkey);\n\n  /** @ngInject */\n  function acmeMalarkey(malarkey) {\n    var directive = {\n      restrict: 'E',\n      scope: {\n        extraValues: '='\n      },\n      template: '&nbsp;',\n      link: linkFunc,\n      controller: MalarkeyController,\n      controllerAs: 'vm'\n    };\n\n    return directive;\n\n    function linkFunc(scope, el, attr, vm) {\n      var watcher;\n      var typist = malarkey(el[0], {\n        typeSpeed: 40,\n        deleteSpeed: 40,\n        pauseDelay: 800,\n        loop: true,\n        postfix: ' '\n      });\n\n      el.addClass('acme-malarkey');\n\n      angular.forEach(scope.extraValues, function(value) {\n        typist.type(value).pause().delete();\n      });\n\n      watcher = scope.$watch('vm.contributors', function() {\n        angular.forEach(vm.contributors, function(contributor) {\n          typist.type(contributor.login).pause().delete();\n        });\n      });\n\n      scope.$on('$destroy', function () {\n        watcher();\n      });\n    }\n\n    /** @ngInject */\n    function MalarkeyController($log, githubContributor) {\n      var vm = this;\n\n      vm.contributors = [];\n\n      activate();\n\n      function activate() {\n        return getContributors().then(function() {\n          $log.info('Activated Contributors View');\n        });\n      }\n\n      function getContributors() {\n        return githubContributor.getContributors(10).then(function(data) {\n          vm.contributors = data;\n\n          return vm.contributors;\n        });\n      }\n    }\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('festima')\n    .factory('githubContributor', githubContributor);\n\n  /** @ngInject */\n  function githubContributor($log, $http) {\n    var apiHost = 'https://api.github.com/repos/Swiip/generator-gulp-angular';\n\n    var service = {\n      apiHost: apiHost,\n      getContributors: getContributors\n    };\n\n    return service;\n\n    function getContributors(limit) {\n      if (!limit) {\n        limit = 30;\n      }\n\n      return $http.get(apiHost + '/contributors?per_page=' + limit)\n        .then(getContributorsComplete)\n        .catch(getContributorsFailed);\n\n      function getContributorsComplete(response) {\n        return response.data;\n      }\n\n      function getContributorsFailed(error) {\n        $log.error('XHR Failed for getContributors.\\n' + angular.toJson(error.data, true));\n      }\n    }\n  }\n})();\n\n(function(app) {\n  'use strict';\n\n  app.component('esDictionaryAutocomplete', {\n    templateUrl: 'app/components/dictionaryAutocomplete/dictionary-autocomplete.html',\n    bindings: {\n      key: '@',\n      selected: '='\n    },\n    controller: DictionaryAutocompleteController,\n    controllerAs: 'vm'\n  });\n\n  /** @ngInject */\n  function DictionaryAutocompleteLink(scope, element, attrs, controller) {\n    controller.key = attrs[this.name];\n  }\n\n  /** @ngInject */\n  function DictionaryAutocompleteController($sce, dictionaries) {\n    var vm = this;\n\n    vm.items = [];\n\n    vm.trustAsHtml = function(value) {\n      return $sce.trustAsHtml(value);\n    };\n\n    vm.refreshItems = function(q) {\n      dictionaries.itemsByKey(vm.key, undefined, undefined, q).then(function(items) {\n        vm.items = items;\n      });\n    };\n\n    vm.refreshItems();\n  }\n\n} (angular.module('festima')));\n\n(function(app) {\n\n  app.component('esDictionary', {\n    templateUrl: 'app/components/dictionary/dictionary.html',\n    bindings: {\n      // dictionary: '<',\n      key: '<'\n    },\n    controllerAs: 'dictionaryVm',\n    controller: DictionaryComponentController\n  });\n\n  function DictionaryComponentController($q, dictionaries) {\n    var vm = this;\n\n    vm.items = [];\n    vm.newItem = {};\n    vm.currentPage = 1;\n    vm.itemsPerPage = 10;\n\n    vm.add = function(item) {\n      dictionaries.addItem(vm.key, item).then(function(item) {\n        vm.newItem = {};\n        vm.pageChanged();  // update items\n      });\n    };\n\n    vm.pageChanged = function() {\n      var items = dictionaries.itemsByKey(vm.key, (vm.currentPage - 1) * vm.itemsPerPage, vm.itemsPerPage);\n      var count = dictionaries.countItemsByKey(vm.key);\n\n      $q.all({items: items, count: count}).then(function(result) {\n        vm.items = result.items;\n        vm.totalItems = result.count;\n      });\n    };\n\n    vm.pageChanged();\n  }\n\n} (angular.module('festima')));\n\nangular.module('festima')\n  .controller('DealerPositionsController', function() {\n    var vm = this;\n\n    angular.extend(vm, {\n\n      addNewPosition: function() {\n        var newPosition = angular.copy(vm.newPosition);\n        angular.extend(newPosition, vm.inputPosition);\n        vm.inputPosition = {};\n        vm.onAddPosition({dealerId: newPosition.dealerId, position: newPosition});\n      },\n\n      removePosition: function(position) {\n        vm.onDeletePosition({dealerId: position.dealer.id, position: position});\n      },\n\n      activePosition: function(item) {\n          return item.removed === undefined;\n      }\n\n    });\n  }\n);\n\nangular.module('festima').component('esDealerPositions', {\n  templateUrl: 'app/components/dealerPositions/dealer-positions.html',\n  bindings: {\n    positions: '<',\n    newPosition: '<',\n    onAddPosition: '&',\n    onDeletePosition: '&'\n  },\n  controller: 'DealerPositionsController',\n  controllerAs: 'positionsVm',\n  transclude: true\n});\n\n(function(app) {\n  'use strict';\n\n  app.component('esComments', {\n    templateUrl: 'app/components/comments/comments.html',\n    bindings: {\n      comments: '<',\n      onAddComment: '&'\n    },\n    controllerAs: 'commentsVm',\n    controller: CommentsController\n  });\n\n  function CommentsController() {\n    var vm = this;\n    vm.newComment = {};\n\n    vm.addNewComment = function() {\n      vm.onAddComment({comment: vm.newComment.text});\n      vm.newComment = {};\n    }\n  }\n\n}(angular.module('festima')));\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.component('esComment', {\r\n    templateUrl: 'app/components/comment/comment.html',\r\n    bindings: {\r\n      comment: '<'\r\n    },\r\n    controllerAs: 'commentVm',\r\n    controller: CommentController\r\n  });\r\n\r\n  function CommentController() {\r\n\r\n  }\r\n\r\n}(angular.module('festima')));\r\n\n(function(app){\r\n  'use strict';\r\n\r\n  app.component('esBuildingsNearby', {\r\n    templateUrl: 'app/components/buildingsNearby/buildings-nearby.html',\r\n    bindings: {\r\n      address: '<'\r\n    },\r\n    controllerAs: 'vm',\r\n    controller: BuildingsNearbyController\r\n  });\r\n\r\n  function BuildingsNearbyController(maps, addresses, toastr) {\r\n    var vm = this;\r\n\r\n    var findNearbyBuildings = function(address) {\r\n      var latLng;\r\n\r\n      if (address) {\r\n        latLng = maps.centroidToLatlng(address.geometry.centroid);\r\n        addresses.listWithinRadius(latLng, 1000).then(\r\n          function(buildings) {\r\n            if (!_.isEmpty(buildings)) {\r\n              toastr.error('Найдены объекты в радиусе 1 км!');\r\n            }\r\n            vm.buildings = buildings;\r\n          }\r\n        );\r\n      }\r\n    };\r\n\r\n    Object.defineProperty(vm, 'address', {\r\n      get: function() {\r\n        return vm._address;\r\n      },\r\n      set: function(newVal) {\r\n        vm._address = newVal;\r\n        findNearbyBuildings(newVal);\r\n      }\r\n    });\r\n  }\r\n\r\n}(angular.module('festima')));\r\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.component('esBuildingForm', {\r\n    templateUrl: 'app/components/buildingForm/building-form.html',\r\n    bindings: {\r\n      building: '<'\r\n    },\r\n    controller: BuildingFormController,\r\n    controllerAs: 'buildingFormVm',\r\n    transclude: true\r\n  });\r\n\r\n  function BuildingFormController() {\r\n    var vm = this;\r\n  }\r\n\r\n}(angular.module('festima')));\r\n\n'use strict';\n\nangular.module('festima')\n  .service('buildingDealersService1', function (dealers, positions) {\n      var buildingDealersMap = {};  // map dealer name and positions to their ids\n      var dealersMap = {};          // map dealers to their ids\n      var buildingPositions;\n      var dealerList;\n      var _dealers;\n\n      angular.extend(this, {\n        buildingDealersMap: buildingDealersMap,\n\n        loadPositions: function (buildingId) {\n          positions.list1(buildingId).then(function (response) {\n            buildingPositions = response.data;\n\n            var dealerId;\n            for (var i = 0; i < buildingPositions.length; i++) {\n              dealerId = buildingPositions[i].dealerId;\n\n              if (buildingDealersMap[dealerId] === undefined) {\n                buildingDealersMap[dealerId] = {name: dealersMap[dealerId].name, positions: []};\n              }\n\n              buildingDealersMap[dealerId].positions.push(buildingPositions[i]);\n            }\n          }, function (response) {\n            console.log(\"couldn't load positions\");\n          });\n        },\n\n        savePositions: function () {\n          var dealerMap;\n          var position;\n          // save changes in dealers positions\n          for (var dealerId in buildingDealersMap) {\n            dealerMap = buildingDealersMap[dealerId];\n\n            for (var i = 0; i < dealerMap.positions.length; i++) {\n              position = dealerMap.positions[i];\n\n              if (position.buildingId === undefined) {\n                position.buildingId = position.building.id;\n                delete position['building'];\n              }\n\n              if (position.id === undefined) {\n                positions.create1(position).then(function (resp) {\n                  position.id = resp.data.id;\n                  console.log('Saved position ' + position.id);\n                });\n              }\n\n              if (position.removed === true) {\n                positions.delete(position.id).then(function (resp) {\n                  var index = dealerMap.positions.map(function (e) {\n                    return e.id;\n                  }).indexOf(position.id);\n                  dealerMap.positions.splice(index, 1);\n                });\n              }\n            }\n          }\n        },\n\n        addDealerPosition: function (dealerId, position) {\n          buildingDealersMap[dealerId].positions.push(position);\n        },\n\n        removeDealerPosition: function (dealerId, position) {\n          var dealerMap = buildingDealersMap[dealerId];\n\n          if (position.id === undefined) {\n            var index = dealerMap.positions.indexOf(position);\n            if (index !== -1) {\n              dealerMap.positions.splice(index, 1);\n            }\n          } else {\n            position.removed = true;\n          }\n        },\n\n        dealers: _dealers,\n\n        loadDealers: function () {\n          dealers.list().then(function (resp) {\n            dealerList = resp.data;\n\n            var dealer;\n            // todo: If dealers not loaded yet?\n            for (var i = 0; i < dealerList.length; i++) {\n              dealer = dealerList[i];\n              if (dealersMap[dealer.id] === undefined) {\n                dealersMap[dealer.id] = dealer;\n              }\n            }\n          })\n        },\n\n        refreshDealers: function (q) {\n          dealers.list().then(function (resp) {\n            _dealers = resp.data;\n            // angular.copy(_dealers, resp.data);\n\n            var dealer;\n            for (var i = 0; i < _dealers.length; i++) {\n              dealer = _dealers[i];\n              if (dealersMap[dealer.id] === undefined) {\n                dealersMap[dealer.id] = dealer;\n              }\n            }\n          })\n        },\n        \n        addDealer: function(dealer) {\n          var index = Object.keys(buildingDealersMap).indexOf(dealer.id);\n\n          if (index === -1) {\n            buildingDealersMap[dealer.id] = {name: dealer.name, positions: []};\n          }\n        }\n      });\n    }\n  );\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.component('esBuildingContacts', {\r\n    templateUrl: 'app/components/buildingContacts/building-contacts.html',\r\n    bindings: {\r\n      contacts: '<',\r\n      onRemoveContact: '&'\r\n    },\r\n    controllerAs: 'buildingContactsVm',\r\n    controller: BuildingContactsController\r\n  });\r\n\r\n  function BuildingContactsController() {\r\n    var vm = this;\r\n\r\n    vm.removeContact = function(contact) {\r\n      vm.onRemoveContact({contact: contact});\r\n    };\r\n  }\r\n\r\n}(angular.module('festima')));\r\n\nangular.module('festima')\r\n  .controller('BuildingAddressController', function(maps) {\r\n    var vm = this;\r\n\r\n    var latLng0;\r\n\r\n    if (angular.isDefined(vm.building)) {\r\n      setSelected(vm.building.address);\r\n    }\r\n\r\n    function setSelected(address) {\r\n      vm.asyncSelected = address;\r\n    }\r\n\r\n    DG.then(function() {\r\n\r\n      if (angular.isDefined(vm.building) && angular.isDefined(vm.building.location)) {\r\n        latLng0 = maps.centroidToLatlng(vm.building.location);\r\n      }\r\n\r\n      maps.initMap(latLng0).then(function(map) {\r\n        vm.map = map;\r\n\r\n        if (angular.isDefined(latLng0)) {\r\n          vm.marker = maps.getMarker(latLng0);\r\n          vm.marker.addTo(vm.map);\r\n        }\r\n\r\n        vm.map.on('click', function (e) {\r\n          var latLng = [e.latlng.lat, e.latlng.lng];\r\n          console.log(latLng);\r\n\r\n          maps.searchCoords(latLng).then(function (location) {\r\n            vm.location = location;\r\n            vm.address = location.name;\r\n\r\n            if (typeof vm.marker !== 'undefined') {\r\n              vm.map.removeLayer(vm.marker);\r\n            }\r\n\r\n            vm.marker = maps.getMarker(latLng);\r\n            var text = location.name + '.<br />';\r\n\r\n            text += location.attributes.buildingname;\r\n            vm.marker.bindPopup(text);\r\n            vm.marker.addTo(vm.map);\r\n\r\n            var locationFullName = location.name;\r\n\r\n            var item = {geometry: {}};\r\n            item.full_name = locationFullName;\r\n            item.geometry.centroid = location.centroid;\r\n\r\n            if (_.isEmpty(location.attributes.number)) {\r\n              console.log('No building number!');\r\n              item.geometry.centroid = maps.latLngToWkt(latLng);\r\n            }\r\n\r\n            setSelected(locationFullName);\r\n            vm.onAddressSelected({address: item});\r\n          });\r\n        });\r\n      });\r\n    });\r\n\r\n    vm.searchAddress = function(q) {\r\n      maps.searchAddress(q).then(function(latLng){\r\n\r\n        if (typeof vm.marker !== 'undefined') {\r\n          vm.map.removeLayer(vm.marker);\r\n        }\r\n\r\n        // создаем и добавляем маркер на карту\r\n        vm.marker = maps.getMarker(latLng);\r\n        vm.map.addLayer(vm.marker);\r\n\r\n        // центрируем карту в координаты маркера\r\n        vm.map.panTo(latLng);\r\n      });\r\n    };\r\n\r\n    vm.getLocation = function(q) {\r\n      return maps.suggestions(q).then(function(items){\r\n        return items.map(function(item){\r\n          return item;\r\n        });\r\n      });\r\n    };\r\n\r\n    vm.onSelect = function(itemData, model, label) {\r\n      maps.search(itemData.hint.text).then(function(items) {\r\n        var item = items[0];\r\n\r\n        if (typeof vm.marker !== 'undefined') {\r\n          vm.map.removeLayer(vm.marker);\r\n        }\r\n\r\n        var latLng = maps.centroidToLatlng(item.geometry.centroid);\r\n\r\n        // создаем и добавляем маркер на карту\r\n        vm.marker = maps.getMarker(latLng);\r\n        vm.map.addLayer(vm.marker);\r\n\r\n        // центрируем карту в координаты маркера\r\n        vm.map.setZoom(maps.detailedZoom);\r\n        vm.map.panTo(latLng);\r\n\r\n        setSelected(item.full_name);\r\n        vm.onAddressSelected({address: item});\r\n      });\r\n    };\r\n  }\r\n);\r\n\nangular.module('festima')\n  .component('esBuildingAddress', {\n    templateUrl: 'app/components/buildingAddress/building-address.html',\n    bindings: {\n      building: '<',\n      onAddressSelected: '&'\n    },\n    controllerAs: 'addressVm',\n    controller: 'BuildingAddressController'\n  }\n);\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.component('esAddressInput', {\r\n    templateUrl: 'app/components/addressInput/address-input.html',\r\n    bindings: {\r\n      onAddressSelected: '&'\r\n    },\r\n    controllerAs: 'addressInputVm',\r\n    controller: AddressInputController\r\n  });\r\n\r\n  function AddressInputController(maps) {\r\n    var vm = this;\r\n\r\n    vm.getLocation = function(q) {\r\n      return maps.suggestions(q).then(function(items){\r\n        return items.map(function(item){\r\n          return item;\r\n        });\r\n      });\r\n    };\r\n\r\n    vm.onSelect = function(itemData, model, label) {\r\n      maps.search(itemData.hint.text).then(function(items) {\r\n        var item = items[0];\r\n\r\n        vm.onAddressSelected({address: item});\r\n      });\r\n    };\r\n  }\r\n\r\n}(angular.module('festima')));\r\n\n(function(app) {\n  'use strict';\n\n  app.component('esAddContact', {\n    templateUrl: 'app/components/addContact/add-contact.html',\n    bindings: {\n      onContactAdded: '&'\n    },\n    controllerAs: 'addContactVm',\n    controller: AddContactController\n  });\n\n  function AddContactController(appConfig, $http) {\n    var vm = this;\n\n    function initNewContact() {\n      vm.newItem = {};\n      vm.contacts = [];\n\n      Object.defineProperty(vm.newItem, 'contactType', {\n        get: function() {\n          return vm.newItem._contactType;\n        },\n        set: function(newValue) {\n          vm.newItem._contactType = newValue;\n          getContacts(newValue).then(function(contacts) {\n            vm.contacts = contacts;\n          });\n        }\n      });\n    }\n\n    function getContactTypes() {\n      return $http.get(appConfig.apiUrl + '/dictionaries').then(function(response) {\n        return response.data;\n      })\n    }\n\n    function getContacts(key) {\n      return $http.get(appConfig.apiUrl + '/dictionaries/' + key + '/items').then(function(response) {\n        return response.data;\n      });\n    }\n\n    initNewContact();\n\n    getContactTypes().then(function(contactTypes) {\n      vm.contactTypes = contactTypes;\n    });\n\n    vm.addContact = function(newContact) {\n      newContact.typeName = _.find(vm.contactTypes, function(type) { return type.key == newContact.contactType; }).name;\n      newContact.contactName = _.find(vm.contacts, function(contact) { return contact.id == newContact.contactId; }).title;\n      vm.onContactAdded({newContact: newContact});\n      initNewContact();\n    };\n  }\n\n}(angular.module('festima')));\n\nangular.module('festima')\n  .controller('AddDealerButtonController', function(dealers){\n    var vm = this;\n\n    vm.addDealer = function() {\n      if ( !vm.onCheckAdded({dealer: vm.dealer})) {\n        vm.onAddDealer({dealer: vm.dealer});\n      }\n\n      vm.dealer = undefined;\n    };\n\n    vm.refreshDealers = function (q) {\n      dealers.findAllByQuery().then(function (dealers) {\n        vm.dealers = dealers;\n      })\n    };\n\n  }\n);\n\nangular.module('festima').component('esAddDealerButton', {\n  templateUrl: 'app/components/addDealerButton/add-dealer-button.html',\n  bindings: {\n    onAddDealer: '&',\n    onCheckAdded: '&'\n  },\n  controller: 'AddDealerButtonController',\n  controllerAs: 'addDealerVm'\n});\n\nangular.module('festima')\n  .factory('usersManager', ['$http', '$q', 'appConfig', 'User', function ($http, $q, appConfig, User) {\n    var cachedPromises = {};\n    var usersManager = {\n      _pool: {},\n      _retrieveInstance: function (id, data) {\n        var instance = this._pool[id];\n\n        if (instance) {\n          instance.setData(data);\n        } else {\n          instance = new User(data);\n          this._pool[id] = instance;\n        }\n\n        return instance;\n      },\n\n      _search: function (id) {\n        return this._pool[id];\n      },\n\n      getUser: function (id) {\n        if (angular.isUndefined(cachedPromises[id])) {\n          cachedPromises[id] = $http.get(appConfig.apiUrl + '/users/' + id).then(function(response) {\n              return response.data;\n            })\n        }\n\n        return cachedPromises[id];\n      },\n\n      loadAllUsers: function () {\n        var deferred = $q.defer();\n        var scope = this;\n        $http.get(appConfig.apiUrl + '/users')\n          .success(function (itemsArray) {\n            var items = [];\n            itemsArray.forEach(function (itemData) {\n              var item = scope._retrieveInstance(itemData.id, itemData);\n              items.push(item);\n            });\n\n            deferred.resolve(items);\n          })\n          .error(function () {\n            deferred.reject();\n          });\n        return deferred.promise;\n      },\n\n      setUser: function (data) {\n        var scope = this;\n        var item = this._search(data.id);\n        if (item) {\n          item.setData(data);\n        } else {\n          item = scope._retrieveInstance(data);\n        }\n        return item;\n      }\n    };\n\n    return usersManager;\n  }]);\n\nangular.module('festima')\n  .factory('User', ['$http', 'appConfig', function ($http, appConfig) {\n      function User(data) {\n        if (data) {\n          this.setData(data);\n        }\n        // some init\n      };\n\n      User.prototype = {\n        setData: function (data) {\n          angular.extend(this, data);\n        },\n        save: function () {\n          return $http.post(appConfig.apiUrl + '/users', this);\n        },\n        delete: function () {\n          $http.delete(appConfig.apiUrl + '/users/' + this.id);\n        },\n        update: function () {\n          $http.put(appConfig.apiUrl + '/users/' + this.id, this);\n        },\n      };\n      return User;\n    }]\n  );\n\nangular.module('festima')\n  .factory('messagesManager', ['$http', '$q', 'Message', 'usersManager', 'appConfig', function ($http, $q, Message, usersManager, appConfig) {\n    var messagesManager = {\n      _pool: {},\n      _retrieveInstance: function (id, data) {\n        var instance = this._pool[id];\n\n        if (instance) {\n          instance.setData(data);\n        } else {\n          instance = new Message(data);\n          this._pool[id] = instance;\n        }\n\n        return instance;\n      },\n      _search: function (id) {\n        return this._pool[id];\n      },\n      _load: function (id, deferred) {\n        var scope = this;\n\n        $http.get(appConfig.apiUrl + '/messages/' + id)\n          .success(function (data) {\n            var itemData = data;\n            var item;\n\n            usersManager.getUser(itemData.author.id).then(function(data) {\n              // delete itemData.authorId;\n              itemData.author = data;\n              item = scope._retrieveInstance(itemData.id, itemData);\n              deferred.resolve(item);\n            });\n          })\n          .error(function () {\n            deferred.reject();\n          });\n      },\n\n      getMessage: function (id) {\n        var deferred = $q.defer();\n        var item = this._search(id);\n        if (item) {\n          deferred.resolve(item);\n        } else {\n          this._load(id, deferred);\n        }\n        return deferred.promise;\n      },\n\n      loadAllMessages: function (positionId) {\n        var deferred = $q.defer();\n        var scope = this;\n        $http.get(appConfig.apiUrl + '/messages', {params: {positionId: positionId}})\n          .success(function (itemsArray) {\n            var items = [];\n            var item;\n\n            if (itemsArray.length == 0) {\n              deferred.resolve([]);\n              return;\n            }\n\n            itemsArray.forEach(function (itemData) {\n              usersManager.getUser(itemData.author.id).then(function(data) {\n                // delete itemData.authorId;\n                itemData.author = data;\n                item = scope._retrieveInstance(itemData.id, itemData);\n                items.push(item);\n              }).then(function() {\n                deferred.resolve(items);\n              });\n            });\n          })\n          .error(function () {\n            deferred.reject();\n          });\n        return deferred.promise;\n      },\n\n      setMessage: function (data) {\n        var scope = this;\n        var item = this._search(data.id);\n        if (item) {\n          item.setData(data);\n        } else {\n          item = scope._retrieveInstance(data);\n        }\n        return item;\n      }\n    };\n\n    return messagesManager;\n  }]);\n\nangular.module('festima')\n  .service('messages', function($http) {\n    angular.extend(this, {\n      // list: function(positionId) {\n        // return $http.get('http://localhost:3000/api/messages', {params: {positionId: positionId}});\n      // }\n    });\n  }\n);\n\nangular.module('festima')\n  .factory('Message', ['$http', '$q', 'appConfig', function ($http, $q, appConfig) {\n      function Message(data) {\n        if (data) {\n          this.setData(data);\n        }\n        // some init\n      };\n\n      Message.prototype = {\n        setData: function (data) {\n          angular.extend(this, data);\n        },\n        save: function () {\n          var deferred = $q.defer();\n          var self = this;\n\n          if (this.id === undefined) {\n            $http.post(appConfig.apiUrl + '/messages', this).then(\n              function(response) {\n                angular.extend(self, response.data);\n                deferred.resolve(self.id)\n              },\n              function(response) {\n                deferred.reject();\n              }\n            );\n          } else {\n            this.update();\n            deferred.resolve(this.id);\n          }\n\n          return deferred.promise;\n        },\n        delete: function () {\n          $http.delete(appConfig.apiUrl + '/messages/' + this.id);\n        },\n        update: function () {\n          $http.put(appConfig.apiUrl + '/messages/' + this.id, this);\n        },\n      };\n      return Message;\n    }]\n  );\n\n'use strict';\r\n\r\n(function() {\r\n  angular.module('festima')\r\n    .service('maps', function($q) {\r\n      var dgis;\r\n\r\n      angular.extend(this, {\r\n        dgis: dgis,\r\n\r\n        detailedZoom: 16,\r\n        overviewZoom: 9,\r\n\r\n        initMap: function (latLng) {\r\n          var deferred = $q.defer();\r\n          var zoom = this.detailedZoom;\r\n\r\n          if (angular.isUndefined(latLng)) {\r\n            latLng = [55.752142, 37.617067];\r\n            zoom = this.overviewZoom;\r\n          }\r\n\r\n          DG.then(function () {\r\n            dgis = DG;\r\n            var map = dgis.map('map', {\r\n              center: latLng,\r\n              zoom: zoom,\r\n              geoclicker: true,\r\n              showPhotos: false,\r\n              showBooklet: false\r\n            });\r\n\r\n            deferred.resolve(map);\r\n          }, function() {\r\n            deferred.reject();\r\n          });\r\n\r\n          return deferred.promise;\r\n        },\r\n\r\n        suggestions: function(q) {\r\n          var deferred = $q.defer();\r\n\r\n          dgis.ajax({\r\n            url: 'http://catalog.api.2gis.ru/2.0/suggest/list',\r\n            data: {\r\n              key: 'ruczoy1743',\r\n              output: 'json',\r\n              region_id: 32,\r\n              q: q\r\n            },\r\n            type: 'GET',\r\n            success: function(data) {\r\n              deferred.resolve(data.result.items);\r\n            },\r\n            error: function(error) {\r\n              console.log(error);\r\n              deferred.reject();\r\n            }\r\n          });\r\n\r\n          return deferred.promise;\r\n        },\r\n\r\n        getById: function(id) {\r\n          var deferred = $q.defer();\r\n\r\n          dgis.ajax({\r\n            url: 'http://catalog.api.2gis.ru/2.0/geo/get',\r\n            data: {\r\n              key: 'ruczoy1743',\r\n              id: id,\r\n              fields: 'items.geometry.centroid'\r\n            },\r\n            type: 'GET',\r\n            success: function(data) {\r\n              deferred.resolve(data.result.items[0]);\r\n            },\r\n            error: function(error) {\r\n              console.log(error);\r\n              deferred.reject();\r\n            }\r\n          });\r\n\r\n          return deferred.promise;\r\n        },\r\n\r\n        searchAddress: function (q) {\r\n          var point, lng, lat;\r\n          var deferred = $q.defer();\r\n\r\n          dgis.ajax({\r\n            url: 'http://catalog.api.2gis.ru/geo/search',\r\n            data: {\r\n              key: 'ruczoy1743',\r\n              version: 1.3,\r\n              q: q\r\n            },\r\n            type: 'GET',\r\n            success: function (data) {\r\n              // считываем строку в WKT-формате и возвращаем объект Point\r\n              point = dgis.Wkt.toPoints(data.result[0].centroid);\r\n\r\n              // извлекаем координаты для маркера\r\n              lng = point[0];\r\n              lat = point[1];\r\n\r\n              deferred.resolve([lat, lng]);\r\n            },\r\n            error: function (error) {\r\n              console.log(error);\r\n              deferred.reject();\r\n            }\r\n          });\r\n\r\n          return deferred.promise;\r\n        },\r\n\r\n        searchCoords: function (latLng) {\r\n          var deferred = $q.defer();\r\n\r\n          dgis.ajax({\r\n            url: 'http://catalog.api.2gis.ru/geo/search',\r\n            data: {\r\n              key: 'ruczoy1743',\r\n              version: 1.3,\r\n              q: latLng[1] + ',' + latLng[0]\r\n            },\r\n            success: function (data) {\r\n\r\n              deferred.resolve(data.result[0]);\r\n            },\r\n            error: function (error) {\r\n              console.log(error);\r\n              deferred.reject();\r\n            }\r\n          });\r\n\r\n          return deferred.promise;\r\n        },\r\n\r\n        getMarker: function(latLng) {\r\n          return dgis.marker(latLng);\r\n        },\r\n\r\n        centroidToLatlng: function(wkt) {\r\n          var point = DG.Wkt.toPoints(wkt);\r\n\r\n          return [point[1], point[0]];\r\n        },\r\n\r\n        latLngToWkt: function(latLng) {\r\n          return \"POINT(\" + latLng[1] + \" \" + latLng[0] + \")\";\r\n        },\r\n\r\n        search: function(q) {\r\n          var deferred = $q.defer();\r\n\r\n          dgis.ajax({\r\n            url: 'http://catalog.api.2gis.ru/2.0/geo/search',\r\n\r\n            data: {\r\n              key: 'ruewin2963',\r\n              q: q,\r\n              region_id: 32,\r\n              fields: 'hash,search_attributes,items.address,items.adm_div,items.geometry.centroid,items.geometry.selection,items.geometry.style,items.floors,items.group'\r\n            },\r\n            success: function (data) {\r\n\r\n              deferred.resolve(data.result.items);\r\n            },\r\n            error: function (error) {\r\n              console.log(error);\r\n              deferred.reject();\r\n            }\r\n          });\r\n\r\n          return deferred.promise;\r\n        }\r\n      });\r\n    }\r\n  );\r\n})();\r\n\n(function (app) {\n  'use strict';\n\n  app.service('contacts', ['$http', 'appConfig', function ($http, appConfig) {\n\n    angular.extend(this, {\n      saveContact: function (contact) {\n        return $http.post(appConfig.apiUrl + '/buildings/' + contact.building.id + '/contacts', contact).then(function (resp) {\n          return resp.data;\n        });\n      },\n\n      delete: function(contact) {\n        return $http.delete(appConfig.apiUrl + '/buildings/' + contact.building.id + '/contacts/' + contact.id).then(function(resp) {\n          return resp.data;\n        });\n      }\n    })\n  }]);\n\n}(angular.module('festima')));\n\n(function() {\n  'use strict';\n\n  angular\n    .module('festima')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($timeout, webDevTec, toastr) {\n    var vm = this;\n\n    vm.awesomeThings = [];\n    vm.classAnimation = '';\n    vm.creationDate = 1457814815376;\n    vm.showToastr = showToastr;\n\n    activate();\n\n    function activate() {\n      getWebDevTec();\n      $timeout(function() {\n        vm.classAnimation = 'rubberBand';\n      }, 4000);\n    }\n\n    function showToastr() {\n      toastr.info('Уведомление...');\n      vm.classAnimation = '';\n    }\n\n    function getWebDevTec() {\n      vm.awesomeThings = webDevTec.getTec();\n\n      angular.forEach(vm.awesomeThings, function(awesomeThing) {\n        awesomeThing.rank = Math.random();\n      });\n    }\n  }\n})();\n\n'use strict';\n\n/**\n * @ngdoc function\n * @name festimaApp.controller:AboutController\n * @description\n * # AboutController\n * Controller of the festimaApp\n */\nangular.module('festima')\n  .controller('AboutController', function () {\n\n  });\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.service('session', function($http, $log, $q, $state, $rootScope, $timeout, $cookies, appConfig, OAuth, OAuthToken) {\r\n    var currentUserPromise;\r\n    var userId;\r\n\r\n    function loadCurrentUser() {\r\n      return $http.get(appConfig.apiUrl + '/users/profile').then(function(response) {\r\n        var user = response.data;\r\n\r\n        userId = user.id;\r\n        return user;\r\n      });\r\n    }\r\n\r\n    // $rootScope.$on('$stateChangeError', function () {\r\n    //   $state.go('public.login');\r\n    // });\r\n\r\n    angular.extend(this, {\r\n      login: function(credentials) {\r\n        var options = {};\r\n\r\n        angular.extend(credentials, {scope: 'read'});\r\n\r\n        return OAuth.getAccessToken(credentials, options).then(function(response) {\r\n          currentUserPromise = loadCurrentUser();\r\n        }).catch(function(e) {\r\n          $log.error('Auth error: ', e);\r\n          return $q.reject(e);\r\n        });\r\n      },\r\n\r\n      logout: function() {\r\n        // OAuth.revokeToken();\r\n        $cookies.remove('token');\r\n        return $timeout(function () {\r\n          $state.go('public.login');\r\n        });\r\n      },\r\n\r\n      getUserId: function() {\r\n        return userId;\r\n      },\r\n\r\n      profile: function() {\r\n        if (!currentUserPromise) {\r\n          currentUserPromise = loadCurrentUser();\r\n        }\r\n        return currentUserPromise;\r\n      },\r\n\r\n      isAuthenticated: function() {\r\n        return OAuth.isAuthenticated();\r\n      },\r\n\r\n      checkLoggedIn: function() {\r\n        var deferred = $q.defer();\r\n\r\n        if (this.isAuthenticated()) {\r\n          deferred.resolve();\r\n        } else {\r\n          $timeout(function () {\r\n            $state.go('public.login');\r\n          });\r\n          deferred.reject();\r\n        }\r\n\r\n        return deferred.promise;\r\n      },\r\n\r\n      skipLoggedIn: function() {\r\n        var deferred = $q.defer();\r\n\r\n        if (this.isAuthenticated()) {\r\n          deferred.reject();\r\n        } else {\r\n          deferred.resolve();\r\n        }\r\n\r\n        return deferred.promise;\r\n      }\r\n    });\r\n  });\r\n\r\n} (angular.module('festima')));\r\n\n(function(app) {\n  'use strict';\n\n  app.controller('LoginController', function($http, $state, toastr, appConfig, OAuth, OAuthToken, spinnerService, session) {\n    var vm = this;\n\n    vm.login = function() {\n      var credentials = {username: vm.email, password: vm.password};\n\n      vm.loginForm.$setPristine();\n      // spinnerService.show(\"authSpinner\");\n\n      session.login(credentials).then(function(res) {\n        $state.go('private.main');\n      }).catch(function(err) {\n        toastr.error(\"Неверная комбинация email/пароль!\");\n\n        vm.loginForm.password.$setValidity(\"required\", false);\n        vm.password = '';\n      }).finally(function() {\n        // spinnerService.hide('authSpinner');\n      });\n    };\n\n    vm.logout = function() {\n      session.logout();\n    };\n  });\n\n\n} (angular.module('festima')));\n\n(function(app) {\n  'use strict';\n\n  app.controller('DictionaryShowController', function($stateParams, dictionaries) {\n    var vm = this;\n\n    console.log(\"State params: \", $stateParams.key);\n    vm.key = $stateParams.key;\n    dictionaries.loadByKey($stateParams.key).then(function(dictionary) {\n      vm.dictionary = dictionary;\n    });\n  });\n\n} (angular.module('festima')));\n\n(function(app) {\n  'use strict';\n\n  app.service('dictionaries', function($q, $http, appConfig) {\n\n    angular.extend(this, {\n      listAll: function() {\n        return $http.get(appConfig.apiUrl + '/dictionaries').then(function(response) {\n          return response.data;\n        });\n      },\n\n      loadByKey: function(key) {\n        return $http.get(appConfig.apiUrl + '/dictionaries/' + key).then(function(response) {\n          return response.data;\n        });\n      },\n\n      itemsByKey: function(key, offset, max, q) {\n        return $http.get(appConfig.apiUrl + '/dictionaries/' + key + '/items', {params: {offset: offset, max: max, q: q}}).then(function(response) {\n          return response.data;\n        });\n      },\n\n      countItemsByKey: function(key) {\n        return $http.get(appConfig.apiUrl + '/dictionaries/' + key + '/count').then(function(response) {\n          return response.data;\n        });\n      },\n\n      addItem: function(key, item) {\n        return $http.post(appConfig.apiUrl + '/dictionaries/' + key + '/items', {data: item}).then(function(response) {\n          return response.data;\n        });\n      },\n\n      loadItem: function(id) {\n        return $http.get(appConfig.apiUrl + '/dictionaries/items/' + id).then(function(response) {\n          return response.data;\n        });\n      }\n    });\n  });\n\n} (angular.module('festima')));\n\n(function(app) {\n  'use strict';\n\n  app.controller('DictionaryListController', function(dictionaries) {\n    var vm = this;\n\n    dictionaries.listAll().then(function(dictionaries) {\n      vm.dictionaries = dictionaries;\n    });\n  });\n\n} (angular.module('festima')));\n\n'use strict';\n\nangular.module('festima')\n  .service('positions', function($http, appConfig) {\n    angular.extend(this, {\n      listAllByBuilding: function(buildingId) {\n        return $http.get(appConfig.apiUrl + '/positions', {params: {buildingId: buildingId}});\n      },\n      createPosition: function(positionData) {\n        return $http.post(appConfig.apiUrl + '/positions', positionData).then(function(resp) { return resp.data; });\n      },\n      delete: function(positionId) {\n        return $http.delete(appConfig.apiUrl + '/positions/' + positionId);\n      }\n    });\n  }\n);\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.filter('notRemoved', function () {\r\n    return function (items) {\r\n      return _.filter(items, function(item) { return item.removed === undefined; })\r\n    };\r\n  });\r\n\r\n}(angular.module('festima')));\r\n\n'use strict';\n\nangular.module('festima')\n  .service('dealers', function($http, appConfig) {\n    angular.extend(this, {\n\n      findAllByQuery: function(q) {\n        return $http.get(appConfig.apiUrl + '/dictionaries/dealers/items', {params: {q: q}}).then(function(resp) { return resp.data; });\n      },\n\n      listAll: function() {\n        return $http.get(appConfig.apiUrl + '/dictionaries/dealers/items', {params: {max: 500}}).then(function(response) { return response.data; });\n      },\n\n      mapAll: function() {\n        return this.listAll().then(function(dealerList) {\n          var dealersMap = {};\n          var dealer;\n\n          for (var i = 0; i < dealerList.length; i++) {\n            dealer = dealerList[i];\n            if (angular.isUndefined(dealersMap[dealer.id])) {\n              dealersMap[dealer.id] = dealer;\n            }\n          }\n\n          return dealersMap;\n        });\n      },\n\n      listByIds: function(ids) {\n        var params = '?';\n\n        for(var i=0; i<ids.length; i++) {\n          params += '&id=' + ids[i];\n        }\n\n        return $http.get(appConfig.apiUrl + '/dictionaries/dealers/items' + params);\n      }\n    });\n});\n\n(function(app) {\n  'use strict';\n\n  app.service('comments', ['$http', 'appConfig', function($http, appConfig) {\n    angular.extend(this, {\n      listAllByBuilding: function(buildingId) {\n        return $http.get(appConfig.apiUrl + '/buildings/' + buildingId + '/comments').then(function(response) {\n          return response.data;\n        });\n      },\n\n      createComment: function(buildingId, commentData) {\n        return $http.post(appConfig.apiUrl + '/buildings/' + buildingId + '/comments', commentData).then(function(response) {\n          return response.data;\n        });\n      }\n    });\n  }]);\n\n} (angular.module('festima')));\n\nangular.module('festima')\n  .factory('buildingsManager', ['$http', '$q', 'appConfig', 'Building', 'usersManager', 'dictionaries', function($http, $q, appConfig, Building, usersManager, dictionaries) {\n  var buildingsManager = {\n    _pool: {},\n    _retrieveInstance: function(id, data) {\n      var instance = this._pool[id];\n\n      if (instance) {\n        instance.setData(data);\n      } else {\n        instance = new Building(data);\n        this._pool[id] = instance;\n      }\n\n      return instance;\n    },\n    _search: function(id) {\n      return this._pool[id];\n    },\n    _load: function(id, deferred) {\n      var scope = this;\n\n      $http.get(appConfig.apiUrl + '/buildings/' + id)\n        .success(function(data) {\n          var itemData = data;\n          var item = scope._retrieveInstance(itemData.id, itemData);\n\n          deferred.resolve(item);\n        })\n        .error(function() {\n          deferred.reject();\n        });\n    },\n\n    getBuilding: function(id) {\n      var deferred = $q.defer();\n      var item = this._search(id);\n      if (item) {\n        deferred.resolve(item);\n      } else {\n        if (id === undefined) {\n          deferred.resolve(this._retrieveInstance(null));\n        } else {\n          this._load(id, deferred);\n        }\n      }\n      return deferred.promise;\n    },\n\n    loadAllBuildings: function() {\n      var deferred = $q.defer();\n      var scope = this;\n      $http.get(appConfig.apiUrl + '/buildings')\n        .success(function(itemsArray) {\n          var items = [];\n          var item;\n\n            if (itemsArray.length == 0) {\n              deferred.resolve([]);\n              return;\n            }\n\n            itemsArray.forEach(function (itemData) {\n              item = scope._retrieveInstance(itemData.id, itemData);\n              items.push(item);\n              deferred.resolve(items);\n            });\n        })\n        .error(function() {\n          deferred.reject();\n        });\n      return deferred.promise;\n    },\n\n    setBuilding: function(data) {\n      var scope = this;\n      var item = this._search(data.id);\n      if (item) {\n        item.setData(data);\n      } else {\n        item = scope._retrieveInstance(data);\n      }\n      return item;\n    }\n  };\n\n  return buildingsManager;\n}]);\n\n(function(app) {\n  'use strict';\n\n  app.service('buildings', ['$http', 'appConfig', function($http, appConfig) {\n    angular.extend(this, {\n      list: function(offset, limit, q) {\n        return $http.get(appConfig.apiUrl + '/buildings', {params: {offset: offset, max: limit, q: q}}).then(function(resp) {\n          return resp.data;\n        });\n      },\n\n      get: function(id) {\n        return $http.get(appConfig.apiUrl + '/buildings/' + id).then(function(response) {\n          return response.data;\n        });\n      },\n\n      update: function(building) {\n        building.contacts = []; // do not resave\n        return $http.put(appConfig.apiUrl + '/buildings/' + building.id, building).then(function(response) {\n          return response.data;\n        });\n      }\n    });\n  }]);\n\n}(angular.module('festima')));\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.factory('Buildings', ['$http', 'appConfig', function($http, appConfig) {\r\n    function Buildings(offset, limit) {\r\n      this.offset = offset;\r\n      this.limit = limit;\r\n    }\r\n\r\n    // Buildings.prototype = {\r\n    //   list: function() {\r\n    //     return $http.get(appConfig.apiUrl + '/buildings', {params: {offset: this.offset, limit: this.limit}}).then(function(resp) {\r\n    //       return resp.data;\r\n    //     });\r\n    //   }\r\n    // };\r\n\r\n    return Buildings;\r\n  }]);\r\n\r\n}(angular.module('festima')));\r\n\nangular.module('festima')\n  .factory('buildingDealersManager', ['$http', '$q', 'BuildingDealer', 'dealers', function ($http, $q, BuildingDealer, dealers) {\n\n    var buildingDealersManager = {\n      _pool: {},\n      _retrieveInstance: function (id, data) {\n        var instance = this._pool[id];\n\n        if (instance) {\n          instance.setData(data);\n        } else {\n          instance = new BuildingDealer(data);\n          if (id) {\n            this._pool[id] = instance;\n          } else {\n            var unsavedId = Math.min(-1, Math.min(Object.keys(this._pool)));\n            instance.id = unsavedId;\n            this._pool[unsavedId] = instance;\n          }\n\n        }\n\n        return instance;\n      },\n      _unsaved: function() {\n        var unsaved = [];\n        var scope = this;\n\n        Object.keys(this._pool).forEach(function(id) {\n          if (Number(id) < 0) {\n            unsaved.push(scope._pool[id]);\n          }\n        });\n\n        return unsaved;\n      },\n      _search: function (id) {\n        return this._pool[id];\n      },\n      _load: function (id, deferred) {\n        var scope = this;\n\n        $http.get('http://localhost:3000/api/buildingDealers/' + id)\n          .success(function (data) {\n            var item = scope._retrieveInstance(data.id, data);\n\n            $http.get('http://localhost:3000/api/dealers/' + data.dealerId).then(\n              function (response) {\n                item.dealer = response.data;\n              }\n            );\n\n            deferred.resolve(item);\n          })\n          .error(function () {\n            deferred.reject();\n          });\n      },\n\n      getBuildingDealer: function (id) {\n        var deferred = $q.defer();\n        var item = this._search(id);\n        if (item) {\n          deferred.resolve(item);\n        } else {\n          this._load(id, deferred);\n        }\n        return deferred.promise;\n      },\n      loadAllBuildingDealers: function (id) {\n        var deferred = $q.defer();\n        var scope = this;\n        $http.get('http://localhost:3000/api/buildingDealers', {params: {buildingId: id}})\n          .success(function (itemsArray) {\n            var items = [];\n            var map = {};\n            itemsArray.forEach(function (itemData) {\n              var item = scope._retrieveInstance(itemData.id, itemData);\n              items.push(item);\n              map[item.dealerId] = item;\n            });\n\n            return dealers.listByIds(Object.keys(map)).then(\n              function (response) {\n                var list = response.data;\n\n                list.forEach(function (item) {\n                  map[item.id].dealer = item;\n                });\n\n                deferred.resolve(items);\n              }\n            )\n          })\n          .error(function () {\n            deferred.reject();\n          });\n        return deferred.promise;\n      },\n      setBuildingDealer: function (data) {\n        var scope = this;\n        var item = this._search(data.id);\n        if (item) {\n          item.setData(data);\n        } else {\n          item = scope._retrieveInstance(null, data);\n        }\n        return item;\n      }\n    };\n\n    return buildingDealersManager;\n  }]);\n\n'use strict';\n\nangular.module('festima')\n  .service('buildingDealersService', function (dealers, positions) {\n\n      angular.extend(this, {\n\n        getDealersPositionsMap: function(buildingId) {\n          return positions.listAllByBuilding(buildingId).then(function(response) {\n            var dealerPositionsMap = {};\n            var buildingPositions = response.data;\n\n            return dealers.mapAll().then(function(mapOfDealers) {\n\n              var dealerId;\n              for (var i = 0; i < buildingPositions.length; i++) {\n                dealerId = buildingPositions[i].dealer.id;\n\n                if (angular.isUndefined(dealerPositionsMap[dealerId])) {\n                  dealerPositionsMap[dealerId] = {name: mapOfDealers[dealerId].title, positions: []};\n                }\n\n                dealerPositionsMap[dealerId].positions.push(buildingPositions[i]);\n              }\n\n              return dealerPositionsMap;\n            });\n          })\n        },\n\n        saveDealerPositions: function(dealerId, positionsList) {\n          var position;\n\n          for (var i = 0; i < positionsList.length; i++) {\n            position = positionsList[i];\n\n            if (position.removed === true) {\n              positions.delete(position.id).then(function () {\n                var index = positionsList.map(function (e) {\n                  return e.id;\n                }).indexOf(position.id);\n                positionsList.splice(index, 1);\n              });\n            }\n\n            if (angular.isUndefined(position.buildingId)) {\n              position.buildingId = position.building.id;\n              delete position['building'];\n            }\n\n            if (angular.isUndefined(position.id)) {\n              positions.createPosition(position).then(function (savedPosition) {\n                position.id = savedPosition.id;\n                console.log('Saved position ' + position.id);\n              });\n            }\n\n          }\n\n          // return changedPositions;\n        },\n\n      });\n    }\n  );\n\nangular.module('festima').factory('BuildingDealer', ['$http', function($http) {\n  function BuildingDealer(data) {\n    if (data) {\n      this.setData(data);\n    }\n    // Some other initializations related to book\n  };\n  BuildingDealer.prototype = {\n    setData: function(data) {\n      angular.extend(this, data);\n    },\n    save: function() {\n      if (this.id === undefined) {\n        $http.post('http://localhost:3000/api/buildingDealers', this);\n        $http.get('http://localhost:3000/api/buildingDealers').then(\n          function(response) {\n            angular.extend(this, response.data);\n          }\n        )\n      } else {\n        this.update();\n      }\n    },\n    delete: function() {\n      $http.delete('http://localhost:3000/api/buildingDealers/' + id);\n    },\n    update: function() {\n      $http.put('http://localhost:3000/api/buildingDealers/' + id, this);\n    },\n    // getImageUrl: function(width, height) {\n    //   return 'our/image/service/' + this.book.id + '/width/height';\n    // },\n    // isAvailable: function() {\n    //   if (!this.book.stores || this.book.stores.length === 0) {\n    //     return false;\n    //   }\n    //   return this.book.stores.some(function(store) {\n    //     return store.quantity > 0;\n    //   });\n    // }\n  };\n  return BuildingDealer;\n}]);\n\n'use strict';\n\nangular.module('festima')\n  .controller('BuildingShowController', function ($stateParams, toastr, buildingsManager, buildings, maps, comments, contacts) {\n    var id = $stateParams.buildingId;\n    var vm = this;\n\n    vm.contacts = [];\n    vm.comments = [];\n    loadComments();\n\n    function loadComments() {\n      comments.listAllByBuilding(id).then(function(comments) {\n        vm.comments = comments;\n      });\n    }\n\n    function addNewComment(text) {\n      comments.createComment(id, {text: text}).then(function(newComment) {\n        toastr.success('Комментарий добавлен.');\n        loadComments();\n      });\n    }\n\n    vm.addComment = addNewComment;\n\n    buildings.get(id).then(function (building) {\n      vm.building = building;\n      vm.contacts = vm.building.contacts;\n\n      DG.then(function () {\n          var map, point, lat, lng, marker;\n\n          var latLng = maps.centroidToLatlng(vm.building.location);\n          lat = latLng[0];\n          lng = latLng[1];\n\n          map = DG.map('map', {\n            center: latLng,\n            zoom: 16\n          });\n\n          DG.marker(latLng).addTo(map).bindPopup('Вы кликнули по мне!');\n\n\n\n          // DG.ajax({\n          //   url: 'http://catalog.api.2gis.ru/geo/search',\n          //   data: {\n          //     key: 'ruczoy1743',\n          //     version: 1.3,\n          //     q: 'Москва, Красная площадь, 2'\n          //   },\n          //   type: 'GET',\n          //   success: function(data) {\n          //     if (typeof marker !== 'undefined') {\n          //       map.removeLayer(marker);\n          //     }\n          //\n          //     // считываем строку в WKT-формате и возвращаем объект Point\n          //     point = DG.Wkt.toPoints(data.result[0].centroid);\n          //\n          //     // извлекаем координаты для маркера\n          //     lng = point[0];\n          //     lat = point[1];\n          //\n          //     // создаем и добавляем маркер на карту\n          //     marker = DG.marker([lat, lng]);\n          //     map.addLayer(marker);\n          //\n          //     // центрируем карту в координаты маркера\n          //     map.panTo([lat, lng]);\n          //   },\n          //   error: function(error) {\n          //     console.log(error);\n          //   }\n          // });\n        });\n      }\n    );\n  }\n);\n\nangular.module('festima').factory('Building', ['$http', 'appConfig', function($http, appConfig) {\n\n  function Building(data) {\n    if (data) {\n      this.setData(data);\n    }\n    // some init\n  };\n  Building.prototype = {\n    setData: function(data) {\n      angular.extend(this, data);\n    },\n    save: function() {\n      return $http.post(appConfig.apiUrl + '/buildings', this).then(function(resp) {\n        return resp.data;\n      });\n    },\n    delete: function() {\n      $http.delete(appConfig.apiUrl + '/buildings/' + this.id);\n    },\n    update: function() {\n      return $http.put(appConfig.apiUrl + '/buildings/' + this.id, this);\n    },\n  };\n  return Building;\n}]);\n\n(function(app) {\n  'use strict';\n\n  app.controller('BuildingListController', function ($scope, buildings) {\n    var vm = this;\n\n    vm.filtersOpen = false;\n\n    vm.buildings = [];\n    vm.currentPage = 1;\n    vm.itemsPerPage = 10;\n\n    function loadBuildings(q) {\n      buildings.list((vm.currentPage - 1) * vm.itemsPerPage, vm.itemsPerPage, q).then(function(result) {\n        vm.buildings = result.items;\n        vm.totalItems = result.total;\n      });\n    }\n\n    vm.pageChanged = function() {\n      loadBuildings();\n    };\n\n    vm.search = function(q) {\n      vm.q = q;\n      console.log(\"Searched for: \", q);\n      loadBuildings(q);\n    };\n\n    vm.getBuildingDealers = function(building) {\n      return building.dealers.map(function(d) {return d.title;}).join(', ');\n    };\n\n    vm.pageChanged();\n  });\n\n  app.directive('convertToNumber', function() {\n    return {\n      require: 'ngModel',\n      link: function(scope, element, attrs, ngModel) {\n        ngModel.$parsers.push(function(val) {\n          return parseInt(val, 10);\n        });\n        ngModel.$formatters.push(function(val) {\n          return '' + val;\n        });\n      }\n    };\n  });\n\n}(angular.module('festima')));\n\n\n'use strict';\n\nangular.module('festima')\n  .controller('BuildingEditController', function ($stateParams, $location, $q, toastr, buildingsManager, buildings, buildingDealersService, contacts) {\n    var vm = this;\n\n    vm.buildingId = $stateParams.buildingId;\n\n    buildings.get(vm.buildingId).then(\n      function (building) {\n        vm.building = building;\n        vm.contacts = vm.building.contacts;\n      },\n      function () {\n        toastr.info('Объект не найден');\n        $location.url('/building/list');\n      }\n    );\n\n    buildingDealersService.getDealersPositionsMap(vm.buildingId).then(function (mapOfDealersPositions) {\n      vm.dealersPositionsMap = mapOfDealersPositions;\n    });\n\n    vm.addDealerPosition = function (dealerId, position) {\n      vm.dealersPositionsMap[dealerId].positions.push(position);\n    };\n\n    vm.removeDealerPosition = function (dealerId, position) {\n      var dealerPositions = vm.dealersPositionsMap[dealerId].positions;\n\n      if (position.id === undefined) {\n        var index = dealerPositions.indexOf(position);\n        if (index !== -1) {\n          dealerPositions.splice(index, 1);\n        }\n      } else {\n        position.removed = true;\n      }\n    };\n\n    vm.addDealer = function (dealer) {\n      if (!vm.isAddedDealer(dealer)) {\n        vm.dealersPositionsMap[dealer.id] = {name: dealer.name, positions: []};\n      }\n    };\n\n    vm.isAddedDealer = function (dealer) {\n      var index = Object.keys(vm.dealersPositionsMap).indexOf(String(dealer.id));\n\n      return index >= 0;\n    };\n\n    vm.saveChanges = function () {\n      $q.all([buildings.update(vm.building), updateBuildingContacts(vm.contacts)]).then(function(response) {\n        $location.path('/building/show/' + vm.building.id);\n      });\n\n      for (var dealerId in vm.dealersPositionsMap) {\n        buildingDealersService.saveDealerPositions(dealerId, vm.dealersPositionsMap[dealerId].positions);\n      }\n    };\n\n    vm.onSelectAddress = function(address) {\n      vm.building.address = address.full_name;\n      vm.building.location = address.geometry.centroid;\n    };\n\n    vm.contacts = [];\n\n    function addContact(newContact) {\n      vm.contacts.push({contact: {title: newContact.contactName, dictionary: {name: newContact.typeName}}, info: newContact.info, building: {id: vm.buildingId}, contactId: newContact.contactId});\n    }\n\n    function removeContact(contact) {\n      if (contact.id === undefined) {\n        var index = vm.contacts.indexOf(contact);\n        if (index !== -1) {\n          vm.contacts.splice(index, 1);\n        }\n      } else {\n        contact.removed = true;\n      }\n    }\n\n    vm.addContact = addContact;\n    vm.removeContact = removeContact;\n\n    function updateBuildingContacts(contactList) {\n      var contact;\n      var promises = [];\n\n      if (_.isEmpty(contactList)) {\n        return $q.when(null);\n      }\n\n      for(var i=0; i<contactList.length; i++) {\n        contact = contactList[i];\n\n        if (contact.removed === true) {\n          promises.push(contacts.delete(contact));\n        }\n\n        if (contact.id === undefined) {\n          promises.push(contacts.saveContact(contact));\n        }\n      }\n\n      return $q.all(promises);\n    }\n  }\n);\n\n'use strict';\n\nangular.module('festima')\n  .controller('BuildingCreateController', function($location, Building, toastr) {\n    var vm = this;\n\n    vm.building = new Building();\n\n    vm.saveChanges = function () {\n      vm.building.save().then(function (building) {\n        vm.buildingId = building.id;\n        vm.building = building;\n        $location.path('/building/show/' + vm.building.id);\n      });\n\n      toastr.success('Новый объект \"' + vm.building.name + '\" добавлен!');\n    };\n\n    vm.onSelectAddress = function(address) {\n      vm.addressObject = address;\n      vm.building.address = address.full_name;\n      vm.building.location = address.geometry.centroid;\n    };\n  }\n);\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.service('addresses', function($http, appConfig) {\r\n\r\n    angular.extend(this, {\r\n      listWithinRadius: function(latlng, radius) {\r\n\r\n        return $http.get(appConfig.apiUrl + '/locations', {params: {latlng: latlng, radius: radius}}).then(\r\n          function(response) {\r\n            return response.data;\r\n          }\r\n        );\r\n      }\r\n\r\n    });\r\n  });\r\n}) (angular.module('festima'));\r\n\n(function(app) {\n  'use strict';\n\n  app.controller('AddressListController', function($q, $location, $rootScope, _, maps, addresses) {\n    var vm = this;\n\n    vm.buildings = [];\n\n    function findNearbyBuildings(address) {\n      var latLng;\n      var buildingsPromise;\n\n      if (address) {\n        latLng = maps.centroidToLatlng(address.geometry.centroid);\n        buildingsPromise = addresses.listWithinRadius(latLng, 1000);\n      } else {\n        buildingsPromise = addresses.listWithinRadius();\n      }\n\n      return buildingsPromise;\n    }\n\n    function positionBuildingsOnMap(buildings, map) {\n      buildings.forEach(function(building) {\n        var latLng = maps.centroidToLatlng(building.location);\n\n        var marker = DG.marker(latLng, {\n          label: building.name\n        }).addTo(map);\n\n        marker['buildingId'] = building.id;\n        marker['buildingName'] = building.name;\n\n        marker.on('dblclick', function(e) {\n          $rootScope.$apply( function(){$location.path('/building/show/' + e.target.buildingId); } );\n        });\n      })\n    }\n\n    DG.then(function() {\n      var mapPromise = maps.initMap();\n      var buildingsPromise = findNearbyBuildings();\n\n      $q.all({map: mapPromise, buildings: buildingsPromise}).then(function(results) {\n        vm.map = results.map;\n        vm.buildings = results.buildings;\n\n        positionBuildingsOnMap(results.buildings, results.map);\n      });\n    });\n\n    vm.onSelectAddress = function(item) {\n      var latLng = maps.centroidToLatlng(item.geometry.centroid);\n\n      vm.addressObject = item;\n\n      vm.map.setZoom(maps.detailedZoom);\n      vm.map.panTo(latLng);\n    };\n  });\n\n}) (angular.module('festima'));\n\n(function() {\n  'use strict';\n\n  angular\n    .module('festima')\n    .run(runBlock)\n    .run(['$rootScope', '$window', 'OAuth', function($rootScope, $window, OAuth) {\n      $rootScope.$on('oauth:error', function(event, rejection) {\n        // Ignore `invalid_grant` error - should be catched on `LoginController`.\n        if ('invalid_grant' === rejection.data.error) {\n          return;\n        }\n\n        // Refresh token when a `invalid_token` error occurs.\n        if ('invalid_token' === rejection.data.error) {\n          return OAuth.getRefreshToken();\n        }\n\n        // Redirect to `/login` with the `error_reason`.\n        return $window.location.href = '/login?error_reason=' + rejection.data.error;\n      });\n    }]);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('festima')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n\n    $stateProvider\n      .state('private',{\n        url: '',\n        abstract: true,\n        views: {\n          app: {templateUrl: 'app/layouts/private-layout.html'}\n        },\n        resolve: {\n          loggedin: function(session) { return session.checkLoggedIn(); }\n        }\n      })\n      .state(\"private.logout\", {\n        url: \"/logout\",\n        resolve: {\n          loggedout: function(session) { return session.logout(); }\n        }\n      })\n      .state(\"private.main\", {\n        url: \"/\",\n        views: {\n          'container@private': { templateUrl: \"app/main/main.html\", controller: 'MainController', controllerAs: 'main' }\n        }\n      })\n      .state(\"private.buildinglist\", {\n        url: \"/building/list\",\n        views: {\n          'container@private': {templateUrl: 'app/building/building-list.html', controller: 'BuildingListController', controllerAs: 'vm'}\n        }\n      })\n      .state(\"private.buildingshow\", {\n        url: \"/building/show/:buildingId\",\n        views: {\n          'container@private': { templateUrl: 'app/building/building-show.html', controller: 'BuildingShowController', controllerAs: 'buildingVm' }\n        }\n      })\n      .state(\"private.buildingedit\", {\n        url: \"/building/edit/:buildingId\",\n        views: {\n          'container@private': { templateUrl: 'app/building/building-edit.html', controller: 'BuildingEditController', controllerAs: 'vm' }\n        }\n      })\n      .state(\"private.buildingcreate\", {\n        url: \"/building/create\",\n        views: {\n          'container@private': { templateUrl: 'app/building/building-create.html', controller: 'BuildingCreateController', controllerAs: 'vm' }\n        }\n      })\n      .state(\"private.addresslist\", {\n        url: \"/address/list\",\n        views: {\n          'container@private': { templateUrl: 'app/address/address-list.html', controller: 'AddressListController', controllerAs: 'vm' }\n        }\n      })\n      .state(\"private.dictionarieslist\", {\n        url: \"/dictionaries/list\",\n        views: {\n          'container@private': { templateUrl: 'app/dictionary/dictionary-list.html', controller: 'DictionaryListController', controllerAs: 'vm' }\n        }\n      })\n      .state(\"private.dictionaryshow\", {\n        url: \"/dictionaries/:key\",\n        views: {\n          'container@private': { templateUrl: 'app/dictionary/dictionary-show.html', controller: 'DictionaryShowController', controllerAs: 'vm' }\n        }\n      })\n      .state(\"public\", {\n        url: '',\n        abstract: true,\n        views: {\n          app: {templateUrl: 'app/layouts/public-layout.html'}\n        }\n      })\n      .state(\"public.login\", {\n        url: \"/login\",\n        views: {\n          'container@public': {templateUrl: \"app/login/login.html\", controller: \"LoginController\", controllerAs: 'vm'}\n        },\n        resolve: {\n          skipLoggedIn: function(session) { return session.skipLoggedIn(); }\n        }\n      })\n      .state(\"public.about\", {\n        url: \"/about\",\n        views: {\n          'container@public': {templateUrl: 'app/main/about.html', controller: 'AboutController', controllerAs: 'about'}\n        }\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('festima')\r\n    .constant('malarkey', malarkey)\r\n    .constant('moment', moment)\r\n    .constant('_', window._)\r\n    .constant('appConfig', {\r\n      'apiUrl': 'http://138.201.116.95:8080/api'\r\n      // 'apiUrl': 'http://localhost:8080/api'\r\n    });\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('festima')\r\n    .config(config)\r\n    .config(['OAuthProvider', function(OAuthProvider) {\r\n      OAuthProvider.configure({\r\n        grantPath: '/oauth/token',\r\n        revokePath: '/oauth/revoke',\r\n        // baseUrl: 'http://localhost:8080',\r\n        baseUrl: 'http://138.201.116.95:8080',\r\n        clientId: 'estima-client',\r\n        options: {\r\n          secure: false\r\n        }\r\n      });\r\n    }])\r\n    .config(['OAuthTokenProvider', function(OAuthTokenProvider) {\r\n      OAuthTokenProvider.configure({\r\n        name: 'token',\r\n        options: {\r\n          secure: false\r\n        }\r\n      });\r\n    }]).config(['$httpProvider', function($httpProvider) {\r\n      $httpProvider.interceptors.push([\r\n        '$injector',\r\n        function ($injector) {\r\n          return $injector.get('AuthInterceptor');\r\n        }\r\n      ]);\r\n    }]).factory('AuthInterceptor', authInterceptor);\r\n\r\n  /** @ngInject */\r\n  function config($logProvider, toastrConfig) {\r\n    // Enable log\r\n    $logProvider.debugEnabled(true);\r\n\r\n    // Set options third-party lib\r\n    toastrConfig.allowHtml = true;\r\n    toastrConfig.timeOut = 3000;\r\n    toastrConfig.positionClass = 'toast-top-right';\r\n    toastrConfig.preventDuplicates = false;\r\n    toastrConfig.progressBar = true;\r\n  }\r\n\r\n  function authInterceptor($q, $location) {\r\n    return {\r\n      response: function (response) {\r\n        // do something on success\r\n        return response;\r\n      },\r\n      responseError: function (response) {\r\n        if (response.status === 401) {\r\n          $location.url('/login');\r\n        }\r\n        return $q.reject(response);\r\n      }\r\n    };\r\n  }\r\n\r\n})();\r\n\nangular.module(\"festima\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/address/address-list.html\",\"<div class=\\\"page-header\\\"><h1>Адреса</h1></div><es-address-input on-address-selected=\\\"vm.onSelectAddress(address)\\\"></es-address-input><br><div id=\\\"map\\\" style=\\\"width:100%; height:500px;\\\"></div><es-buildings-nearby address=\\\"vm.addressObject\\\"></es-buildings-nearby>\");\n$templateCache.put(\"app/building/building-create.html\",\"<div class=\\\"page-header\\\"><h1>Новый объект</h1></div><es-building-form building=\\\"vm.building\\\"><es-building-address building=\\\"vm.building\\\" on-address-selected=\\\"vm.onSelectAddress(address)\\\"></es-building-address></es-building-form><es-buildings-nearby address=\\\"vm.addressObject\\\"></es-buildings-nearby><hr><div class=\\\"panel panel-default\\\"><div class=\\\"panel-body\\\"><button class=\\\"btn btn-lg btn-success\\\" ng-click=\\\"vm.saveChanges()\\\">Создать</button> <a ng-href=\\\"#/building/list\\\" class=\\\"btn\\\">Отмена</a></div></div>\");\n$templateCache.put(\"app/building/building-edit.html\",\"<div class=\\\"page-header\\\"><h1 ng-bind=\\\"vm.building.name\\\">&nbsp;</h1></div><es-building-form building=\\\"vm.building\\\"><es-building-address building=\\\"vm.building\\\" on-address-selected=\\\"vm.onSelectAddress(address)\\\"></es-building-address></es-building-form><h2>Контакты</h2><div class=\\\"panel panel-default\\\"><div class=\\\"panel-heading\\\"><div class=\\\"row\\\"><es-add-contact on-contact-added=\\\"vm.addContact(newContact)\\\"></es-add-contact></div></div><div class=\\\"panel-body\\\"><es-building-contacts contacts=\\\"vm.contacts\\\" on-remove-contact=\\\"vm.removeContact(contact)\\\"></es-building-contacts></div></div><h2>Позиции</h2><div ng-repeat=\\\"(dealerId, dealerMap) in vm.dealersPositionsMap\\\"><es-dealer-positions positions=\\\"dealerMap.positions\\\" new-position=\\\"{building: vm.building, dealerId: dealerId}\\\" on-delete-position=\\\"vm.removeDealerPosition(dealerId, position)\\\" on-add-position=\\\"vm.addDealerPosition(dealerId, position)\\\"><h4 ng-bind=\\\"dealerMap.name\\\"></h4></es-dealer-positions></div><es-add-dealer-button on-add-dealer=\\\"vm.addDealer(dealer)\\\" on-check-added=\\\"vm.isAddedDealer(dealer)\\\"></es-add-dealer-button><hr><div class=\\\"panel panel-default\\\"><div class=\\\"panel-body\\\"><button class=\\\"btn btn-lg btn-success\\\" ng-click=\\\"vm.saveChanges()\\\">Сохранить изменения</button> <a ng-href=\\\"#/building/show/{{vm.building.id}}\\\" class=\\\"btn\\\">Отмена</a></div></div>\");\n$templateCache.put(\"app/building/building-list.html\",\"<div class=\\\"page-header\\\"><div class=\\\"btn-toolbar pull-right\\\"><button type=\\\"button\\\" class=\\\"btn btn-default\\\" uib-btn-checkbox=\\\"\\\" ng-model=\\\"vm.filtersOpen\\\"><i class=\\\"fa fa-cogs\\\"></i></button><div class=\\\"btn-group\\\"><a ng-href=\\\"#/building/create\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-plus-square\\\"></i> Добавить объект</a></div></div><h1 class=\\\"form-inline\\\">Список объектов <small ng-bind=\\\"vm.totalItems\\\"></small> <small class=\\\"pull-right\\\"><es-search on-search-changed=\\\"vm.search(q)\\\"></es-search></small></h1></div><div uib-collapse=\\\"!vm.filtersOpen\\\"><div class=\\\"well well-lg\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-6 form-inline\\\"><div class=\\\"form-group\\\"><label for=\\\"itemsNumber\\\">На странице</label><select ng-model=\\\"vm.itemsPerPage\\\" class=\\\"form-control\\\" id=\\\"itemsNumber\\\" convert-to-number=\\\"\\\" ng-change=\\\"vm.pageChanged()\\\"><option value=\\\"10\\\">10</option><option value=\\\"20\\\">20</option><option value=\\\"50\\\">50</option><option value=\\\"100\\\">100</option></select></div></div></div></div></div><table class=\\\"table table-bordered table-striped\\\"><thead><tr><th class=\\\"col-md-3\\\">Название</th><th class=\\\"col-md-4\\\">Адрес</th><th class=\\\"col-md-2\\\">Дилеры</th><th class=\\\"col-md-1\\\"><abbr title=\\\"Дата создания 1й позиции\\\">Создано</abbr></th><th class=\\\"col-md-1\\\"><abbr title=\\\"Дата обновления позиций\\\">Обновлено</abbr></th><th class=\\\"col-md-1\\\">Менеджер</th></tr></thead><tbody><tr ng-repeat=\\\"building in vm.buildings track by building.id\\\"><th scope=\\\"row\\\"><a href=\\\"#/building/show/{{::building.id}}\\\" style=\\\"font-weight: normal;\\\" ng-bind-html=\\\"building.name | highlight: vm.q\\\"></a></th><td><small ng-bind-html=\\\"building.address | highlight: vm.q\\\"></small></td><td>{{vm.getBuildingDealers(building)}}</td><td><small ng-bind=\\\"building.dateCreated | date: \\'dd.MM.yyyy HH:mm\\'\\\"></small></td><td><small ng-bind=\\\"building.lastUpdated | date : \\'dd.MM.yyyy HH:mm\\'\\\"></small></td><td ng-bind=\\\"building.author.name\\\"></td></tr></tbody></table><ul uib-pagination=\\\"\\\" total-items=\\\"vm.totalItems\\\" items-per-page=\\\"vm.itemsPerPage\\\" ng-model=\\\"vm.currentPage\\\" ng-change=\\\"vm.pageChanged()\\\"></ul>\");\n$templateCache.put(\"app/building/building-show.html\",\"<div class=\\\"page-header\\\"><div class=\\\"btn-toolbar pull-right\\\"><div class=\\\"btn-group\\\"><a href=\\\"#/building/edit/{{buildingVm.building.id}}\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-edit\\\"></i> Редактировать</a></div></div><h1 ng-bind=\\\"buildingVm.building.name\\\">&nbsp;</h1></div><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-6\\\"><div id=\\\"map\\\" style=\\\"width:500px; height:400px\\\"></div></div><div class=\\\"col-sm-12 col-md-6\\\"><address ng-bind=\\\"buildingVm.building.address\\\"></address><dl class=\\\"dl-horizontal no-margin pull-left\\\"><dt>Заказчик</dt><dd ng-bind=\\\"buildingVm.building.client.title\\\">&nbsp;</dd><dt>Проект</dt><dd ng-bind=\\\"buildingVm.building.project.title\\\">&nbsp;</dd><dt>Менеджер</dt><dd ng-bind=\\\"buildingVm.building.author.name\\\">&nbsp;</dd><dt ng-bind=\\\"contact.contact.dictionary.name\\\" ng-repeat-start=\\\"contact in buildingVm.contacts track by contact.id\\\">&nbsp;</dt><dd ng-bind=\\\"contact.contact.name\\\">&nbsp;</dd><dt>&nbsp;</dt><dd ng-bind=\\\"contact.info\\\" ng-repeat-end=\\\"\\\"></dd></dl></div></div><es-comments comments=\\\"buildingVm.comments\\\" on-add-comment=\\\"buildingVm.addComment(comment)\\\"></es-comments>\");\n$templateCache.put(\"app/dictionary/dictionary-list.html\",\"<div class=\\\"page-header\\\"><h1>Справочники</h1></div><table class=\\\"table table-bordered table-striped\\\"><thead><tr><th class=\\\"col-md-4\\\">Название</th><th class=\\\"col-md-8\\\"></th></tr></thead><tbody><tr ng-repeat=\\\"dictionary in vm.dictionaries\\\"><td><a href=\\\"#/dictionaries/{{::dictionary.key}}\\\" ng-bind=\\\"dictionary.name\\\"></a></td><td>hello</td></tr></tbody></table>\");\n$templateCache.put(\"app/dictionary/dictionary-show.html\",\"<div class=\\\"page-header\\\"><h1 ng-bind=\\\"vm.dictionary.name\\\"></h1></div><es-dictionary key=\\\"vm.key\\\"></es-dictionary>\");\n$templateCache.put(\"app/layouts/private-layout.html\",\"<div><acme-navbar creation-date=\\\"main.creationDate\\\"></acme-navbar></div><div ui-view=\\\"container\\\"></div>\");\n$templateCache.put(\"app/layouts/public-layout.html\",\"<div ui-view=\\\"container\\\"></div>\");\n$templateCache.put(\"app/login/login.html\",\"<div class=\\\"container\\\"><form class=\\\"form-signin\\\" name=\\\"vm.loginForm\\\" ng-submit=\\\"vm.login(vm.loginForm.$valid)\\\" novalidate=\\\"\\\"><h2 class=\\\"form-signin-heading\\\">Вход в систему</h2><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': vm.loginForm.email.$touched && vm.loginForm.email.$invalid }\\\"><label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email</label> <input type=\\\"email\\\" id=\\\"inputEmail\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" required=\\\"\\\" autofocus=\\\"\\\" ng-model=\\\"vm.email\\\" ng-click=\\\"$event.stopPropagation()\\\"><p ng-show=\\\"vm.loginForm.email.$invalid && vm.loginForm.email.$touched\\\" class=\\\"help-block\\\">Неправильный email.</p></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': vm.loginForm.password.$touched && vm.loginForm.password.$invalid }\\\"><label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Пароль</label> <input type=\\\"password\\\" id=\\\"inputPassword\\\" name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Пароль\\\" required=\\\"\\\" ng-model=\\\"vm.password\\\" ng-click=\\\"$event.stopPropagation()\\\"><div class=\\\"help-block\\\" ng-messages=\\\"vm.loginForm.password.$error\\\" ng-if=\\\"vm.loginForm.password.$invalid && vm.loginForm.password.$touched\\\"><p ng-message=\\\"minlength\\\">Your name is too short.</p><p ng-message=\\\"maxlength\\\">Your name is too long.</p><p ng-message=\\\"required\\\">Неверный пароль.</p></div></div><div class=\\\"form-group\\\"><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" value=\\\"remember-me\\\"> Запомнить меня</label></div></div><button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" ng-disabled=\\\"!vm.loginForm.$submitted && vm.loginForm.$invalid\\\">Войти</button></form></div>\");\n$templateCache.put(\"app/main/about.html\",\"<p>О системе</p>\");\n$templateCache.put(\"app/main/main.html\",\"<div class=\\\"jumbotron text-center\\\"><h1>Estima application</h1><p class=\\\"lead\\\"></p><button type=\\\"button\\\" class=\\\"btn btn-lg btn-success\\\" ng-click=\\\"main.showToastr()\\\">Уведомление</button><p></p></div><div class=\\\"row\\\"></div>\");\n$templateCache.put(\"app/components/addContact/add-contact.html\",\"<div class=\\\"col-sm-3\\\"><label class=\\\"sr-only\\\" for=\\\"contactType\\\">Тип контакта</label><select ng-model=\\\"addContactVm.newItem.contactType\\\" class=\\\"form-control\\\" id=\\\"contactType\\\"><option value=\\\"\\\" disabled=\\\"\\\" selected=\\\"\\\">Выбрать тип контакта...</option><option ng-repeat=\\\"option in addContactVm.contactTypes\\\" value=\\\"{{::option.key}}\\\">{{::option.name}}</option></select></div><div class=\\\"col-sm-3\\\"><label class=\\\"sr-only\\\" for=\\\"contactName\\\">Контакт</label><select class=\\\"form-control\\\" id=\\\"contactName\\\" ng-model=\\\"addContactVm.newItem.contactId\\\"><option value=\\\"\\\" disabled=\\\"\\\" selected=\\\"\\\">Выбрать контакт...</option><option ng-repeat=\\\"option in addContactVm.contacts\\\" value=\\\"{{::option.id}}\\\">{{::option.title}}</option></select></div><div class=\\\"col-sm-4\\\"><label class=\\\"sr-only\\\" for=\\\"contactInfo\\\">Информация</label> <textarea class=\\\"form-control\\\" id=\\\"contactInfo\\\" ng-model=\\\"addContactVm.newItem.info\\\" placeholder=\\\"Информация\\\"></textarea></div><div class=\\\"col-sm-2\\\"><button type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\" ng-click=\\\"addContactVm.addContact(addContactVm.newItem)\\\" ng-disabled=\\\"!addContactVm.newItem.contactId\\\">Добавить</button></div>\");\n$templateCache.put(\"app/components/addDealerButton/add-dealer-button.html\",\"<div class=\\\"input-group\\\"><es-dictionary-autocomplete key=\\\"dealers\\\" selected=\\\"addDealerVm.dealer\\\"></es-dictionary-autocomplete><div class=\\\"input-group-btn\\\"><button class=\\\"btn btn-primary\\\" ng-click=\\\"addDealerVm.addDealer()\\\" ng-disabled=\\\"!addDealerVm.dealer\\\">Добавить</button></div></div>\");\n$templateCache.put(\"app/components/addressInput/address-input.html\",\"<input type=\\\"text\\\" id=\\\"address\\\" ng-model=\\\"addressInputVm.asyncSelected\\\" placeholder=\\\"Адрес...\\\" class=\\\"form-control\\\" ng-model-options=\\\"{ debounce: { default: 500, blur: 100 } }\\\" uib-typeahead=\\\"address.hint.text for address in addressInputVm.getLocation($viewValue)\\\" typeahead-loading=\\\"loadingLocations\\\" typeahead-no-results=\\\"noResults\\\" typeahead-on-select=\\\"addressInputVm.onSelect($item, $model, $label)\\\"> <i ng-show=\\\"loadingLocations\\\" class=\\\"glyphicon glyphicon-refresh\\\"></i><div ng-show=\\\"noResults\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i> No Results Found</div>\");\n$templateCache.put(\"app/components/buildingAddress/building-address.html\",\"<input type=\\\"text\\\" id=\\\"address\\\" ng-model=\\\"addressVm.asyncSelected\\\" placeholder=\\\"Адрес объекта...\\\" class=\\\"form-control\\\" ng-model-options=\\\"{ debounce: { default: 500, blur: 100 } }\\\" uib-typeahead=\\\"address.hint.text for address in addressVm.getLocation($viewValue)\\\" typeahead-loading=\\\"loadingLocations\\\" typeahead-no-results=\\\"noResults\\\" typeahead-on-select=\\\"addressVm.onSelect($item, $model, $label)\\\"> <i ng-show=\\\"loadingLocations\\\" class=\\\"glyphicon glyphicon-refresh\\\"></i><div ng-show=\\\"noResults\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i> No Results Found</div><br><div id=\\\"map\\\" style=\\\"width:500px; height:400px\\\"></div>\");\n$templateCache.put(\"app/components/buildingContacts/building-contacts.html\",\"<table class=\\\"table table-striped table-condensed table-vcenter\\\"><tbody><tr ng-repeat-start=\\\"contact in buildingContactsVm.contacts | notRemoved:contact\\\" ng-repeat-end=\\\"\\\"><td class=\\\"col-md-3 text-center\\\" ng-bind=\\\"contact.contact.dictionary.name\\\">&nbsp;</td><td class=\\\"col-md-3 text-center\\\" ng-bind=\\\"contact.contact.title\\\">&nbsp;</td><td class=\\\"col-md-4 text-center\\\" ng-bind=\\\"contact.info\\\">&nbsp;</td><td class=\\\"col-md-2 text-center\\\"><a class=\\\"btn text-danger\\\" ng-click=\\\"buildingContactsVm.removeContact(contact)\\\"><i class=\\\"fa fa-remove\\\"></i></a></td></tr></tbody></table>\");\n$templateCache.put(\"app/components/buildingForm/building-form.html\",\"<div class=\\\"well\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-6\\\"><div class=\\\"form-group\\\"><label for=\\\"name\\\">Название</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"buildingFormVm.building.name\\\" id=\\\"name\\\" placeholder=\\\"Название\\\"></div><div class=\\\"form-group\\\"><label>Заказчик</label><es-dictionary-autocomplete key=\\\"customers\\\" selected=\\\"buildingFormVm.building.client\\\"></es-dictionary-autocomplete></div><div class=\\\"form-group\\\"><label>Проектная организация</label><es-dictionary-autocomplete key=\\\"designers\\\" selected=\\\"buildingFormVm.building.project\\\"></es-dictionary-autocomplete></div><div class=\\\"form-group\\\"><label for=\\\"description\\\">Примечание</label> <textarea class=\\\"form-control\\\" rows=\\\"5\\\" ng-model=\\\"buildingFormVm.building.description\\\" id=\\\"description\\\" placeholder=\\\"Примечание\\\"></textarea></div></div><div class=\\\"col-sm-12 col-md-6\\\"><div class=\\\"form-group\\\"><label for=\\\"address\\\">Адрес</label><ng-transclude></ng-transclude></div></div></div></div>\");\n$templateCache.put(\"app/components/buildingsNearby/buildings-nearby.html\",\"<div ng-if=\\\"vm.buildings.length > 0\\\"><h2>Найдены объекты в радиусе 1 км</h2><div class=\\\"row\\\"></div><ul><li ng-repeat=\\\"building in vm.buildings\\\"><a href=\\\"#/building/show/{{::building.id}}\\\">{{building.name}} ({{building.address}})</a></li></ul></div><div ng-if=\\\"vm.buildings.length == 0\\\"><h2>Ничего не найдено в радиусе 1 км</h2></div>\");\n$templateCache.put(\"app/components/comment/comment.html\",\"<div class=\\\"well\\\"><div class=\\\"media\\\"><div class=\\\"media-body\\\"><h4 class=\\\"media-heading\\\">{{::commentVm.comment.author.name}} <small ng-bind=\\\"commentVm.comment.dateCreated | date: \\'dd.MM.yyyy HH:mm\\'\\\"></small></h4>{{::commentVm.comment.text}}</div></div></div>\");\n$templateCache.put(\"app/components/comments/comments.html\",\"<h2>Комментарии <small ng-bind=\\\"commentsVm.comments.length\\\"></small></h2><div class=\\\"well\\\"><h4>Новый комментарий:</h4><form role=\\\"form\\\"><div class=\\\"form-group\\\"><textarea class=\\\"form-control\\\" rows=\\\"3\\\" ng-model=\\\"commentsVm.newComment.text\\\"></textarea></div><button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"commentsVm.addNewComment()\\\">Добавить</button></form></div><hr><div ng-repeat=\\\"comment in commentsVm.comments\\\"><es-comment comment=\\\"comment\\\"></es-comment></div>\");\n$templateCache.put(\"app/components/dealerPositions/dealer-positions.html\",\"<div class=\\\"panel panel-default\\\"><div class=\\\"panel-heading\\\"><ng-transclude></ng-transclude></div><div class=\\\"panel-body\\\"><table class=\\\"table table-striped table-condensed table-vcenter\\\"><thead><tr><th class=\\\"col-md-2 text-center\\\">Контакт</th><th class=\\\"col-md-1 text-center\\\">Тип</th><th class=\\\"col-md-2 text-center\\\">Спецификация</th><th class=\\\"col-md-1 text-center\\\">Цена</th><th class=\\\"col-md-1 text-center\\\">Сделка</th><th class=\\\"col-md-1 text-center\\\">Статус</th><th class=\\\"col-md-1 text-center\\\">Отгрузка</th><th class=\\\"col-md-2 text-center\\\"></th></tr></thead><tbody><tr ng-form=\\\"\\\" class=\\\"table-bordered\\\"><td class=\\\"col-md-2\\\"><input class=\\\"col-md-12\\\" type=\\\"text\\\" ng-model=\\\"positionsVm.inputPosition.contactName\\\"></td><td class=\\\"col-md-1\\\"><input class=\\\"col-md-12\\\" type=\\\"text\\\" ng-model=\\\"positionsVm.inputPosition.type\\\"></td><td class=\\\"col-md-2\\\"><input class=\\\"col-md-12\\\" type=\\\"text\\\" ng-model=\\\"positionsVm.inputPosition.spec\\\"></td><td class=\\\"col-md-1\\\"><input class=\\\"col-md-12\\\" type=\\\"text\\\" ng-model=\\\"positionsVm.inputPosition.grossPrice\\\"></td><td class=\\\"col-md-1\\\"><input class=\\\"col-md-12\\\" type=\\\"text\\\" ng-model=\\\"positionsVm.inputPosition.total\\\"></td><td class=\\\"col-md-1\\\"><input class=\\\"col-md-12\\\" type=\\\"text\\\" ng-model=\\\"positionsVm.inputPosition.status\\\"></td><td class=\\\"col-md-1\\\"><input class=\\\"col-md-12\\\" type=\\\"text\\\" ng-model=\\\"positionsVm.inputPosition.dateShipped\\\"></td><td class=\\\"col-md-2\\\"><input class=\\\"col-md-12 btn btn-success\\\" type=\\\"submit\\\" value=\\\"Добавить\\\" ng-click=\\\"positionsVm.addNewPosition()\\\"></td></tr><tr ng-repeat-start=\\\"position in positionsVm.positions | filter:positionsVm.activePosition\\\" ng-repeat-end=\\\"\\\"><td class=\\\"col-md-2 text-center\\\" ng-bind=\\\"position.contactName\\\">&nbsp;</td><td class=\\\"col-md-1 text-center\\\" ng-bind=\\\"position.type\\\">&nbsp;</td><td class=\\\"col-md-2 text-center\\\" ng-bind=\\\"position.spec\\\">&nbsp;</td><td class=\\\"col-md-1 text-center\\\" ng-bind=\\\"position.grossPrice\\\">&nbsp;</td><td class=\\\"col-md-1 text-center\\\" ng-bind=\\\"position.total\\\">&nbsp;</td><td class=\\\"col-md-1 text-center\\\" ng-bind=\\\"position.status\\\">&nbsp;</td><td class=\\\"col-md-1 text-center\\\" ng-bind=\\\"position.dateShipped\\\">&nbsp;</td><td class=\\\"col-md-2 text-center\\\"><messages-button position=\\\"position\\\"></messages-button><a class=\\\"btn text-warning\\\"><i class=\\\"fa fa-pencil\\\"></i></a> <a class=\\\"btn text-danger\\\" ng-click=\\\"positionsVm.removePosition(position)\\\"><i class=\\\"fa fa-remove\\\"></i></a></td></tr></tbody></table></div></div>\");\n$templateCache.put(\"app/components/dictionary/dictionary.html\",\"<div class=\\\"container-fluid\\\"><div class=\\\"panel panel-default\\\"><div class=\\\"panel-body\\\"><form class=\\\"form-inline\\\"><div class=\\\"form-group\\\"><label class=\\\"sr-only\\\" for=\\\"title\\\">Название</label> <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" ng-model=\\\"dictionaryVm.newItem.title\\\" placeholder=\\\"Название\\\"></div><div class=\\\"form-group\\\"><label class=\\\"sr-only\\\" for=\\\"contactName\\\">Контактное лицо</label> <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contactName\\\" ng-model=\\\"dictionaryVm.newItem.contactName\\\" placeholder=\\\"Контактное лицо\\\"></div><div class=\\\"form-group\\\"><label class=\\\"sr-only\\\" for=\\\"contactPosition\\\">Должность</label> <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contactPosition\\\" ng-model=\\\"dictionaryVm.newItem.contactPosition\\\" placeholder=\\\"Должность\\\"></div><div class=\\\"form-group\\\"><label class=\\\"sr-only\\\" for=\\\"phone\\\">Телефон</label> <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone\\\" ng-model=\\\"dictionaryVm.newItem.phone\\\" placeholder=\\\"Телефон\\\"></div><button type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\" ng-click=\\\"dictionaryVm.add(dictionaryVm.newItem)\\\">Добавить</button></form></div></div><table class=\\\"table table-bordered table-striped\\\"><thead><tr><th class=\\\"col-md-3\\\">Название</th><th class=\\\"col-md-3\\\">Контактное лицо</th><th class=\\\"col-md-3\\\">Должность</th><th class=\\\"col-md-3\\\">Телефон</th></tr></thead><tbody><tr ng-repeat=\\\"item in dictionaryVm.items\\\"><td class=\\\"col-md-3\\\" ng-bind=\\\"item.title\\\"></td><td class=\\\"col-md-3\\\" ng-bind=\\\"item.contactName\\\"></td><td class=\\\"col-md-3\\\" ng-bind=\\\"item.contactPosition\\\"></td><td class=\\\"col-md-3\\\" ng-bind=\\\"item.phone\\\"></td></tr></tbody></table><ul uib-pagination=\\\"\\\" total-items=\\\"dictionaryVm.totalItems\\\" items-per-page=\\\"dictionaryVm.itemsPerPage\\\" ng-model=\\\"dictionaryVm.currentPage\\\" ng-change=\\\"dictionaryVm.pageChanged()\\\"></ul></div>\");\n$templateCache.put(\"app/components/dictionaryAutocomplete/dictionary-autocomplete.html\",\"<ui-select ng-model=\\\"vm.selected\\\" theme=\\\"bootstrap\\\" ng-disabled=\\\"false\\\" reset-search-input=\\\"true\\\"><ui-select-match placeholder=\\\"Выбрать...\\\">{{$select.selected.title}}</ui-select-match><ui-select-choices repeat=\\\"item in vm.items track by $index\\\" refresh=\\\"vm.refreshItems($select.search)\\\" refresh-delay=\\\"0\\\"><div ng-bind-html=\\\"vm.trustAsHtml((item.title | highlight: $select.search))\\\"></div></ui-select-choices></ui-select>\");\n$templateCache.put(\"app/components/messagesButton/messages-button.html\",\"<button class=\\\"btn btn-default\\\" ng-click=\\\"messagesButtonVm.openMessages()\\\"><span class=\\\"fa fa-comments\\\"></span></button>\");\n$templateCache.put(\"app/components/messagesButton/messages-modal.html\",\"<div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" ng-click=\\\"messagesModalVm.cancel()\\\">&times;</button><h4 class=\\\"modal-title\\\">Заметки по позиции</h4></div><div class=\\\"modal-body\\\"><div class=\\\"form-group\\\"><div class=\\\"input-group\\\"><textarea class=\\\"form-control\\\" row=\\\"3\\\" placeholder=\\\"Новое сообщение\\\" ng-model=\\\"messagesModalVm.newMessage.text\\\"></textarea> <span class=\\\"input-group-addon btn btn-primary input-lg\\\" ng-click=\\\"messagesModalVm.addNewMessage()\\\">Добавить</span></div></div><div ng-repeat=\\\"message in messagesModalVm.messages | orderBy:\\'dateCreated\\':true\\\" class=\\\"media\\\"><div class=\\\"media-left\\\"></div><div class=\\\"media-body\\\"><h4 class=\\\"media-heading\\\"><span ng-bind=\\\"message.author.name\\\"></span> <small>{{::message.dateCreated | date: \\'dd.MM.yyyy HH:mm\\'}}</small></h4>{{::message.text}}</div></div></div><div class=\\\"modal-footer\\\"><button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" ng-click=\\\"messagesModalVm.cancel()\\\">Close</button> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" ng-click=\\\"messagesModalVm.ok()\\\">OK</button></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-static-top navbar-inverse\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><a class=\\\"navbar-brand\\\" href=\\\"#/\\\">Estima</a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-6\\\"><ul class=\\\"nav navbar-nav\\\"><li><a href=\\\"#/\\\" class=\\\"glyphicon glyphicon-home\\\"></a></li><li><a ng-href=\\\"#/building/list\\\">Объекты</a></li><li><a ng-href=\\\"#/address/list\\\">Адреса</a></li><li><a ng-href=\\\"#/dictionaries/list\\\">Справочники</a></li><li><a ng-href=\\\"#/about\\\">О системе</a></li></ul><ul class=\\\"nav navbar-nav navbar-right\\\"><li class=\\\"dropdown\\\" uib-dropdown=\\\"\\\"><a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" uib-dropdown-toggle=\\\"\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span ng-bind=\\\"vm.user.name\\\"></span> <span class=\\\"caret\\\"></span></a><ul class=\\\"dropdown-menu\\\" uib-dropdown-menu=\\\"\\\"><li><a href=\\\"#\\\">Личный кабинет</a></li><li role=\\\"separator\\\" class=\\\"divider\\\"></li><li><a href=\\\"#/logout\\\">Выход</a></li></ul></li></ul><span class=\\\"nav navbar-nav navbar-right\\\" style=\\\"padding-top: 10px;\\\"><spinner name=\\\"authSpinner\\\" img-src=\\\"assets/images/ajax-loader.gif\\\"></spinner></span></div></div></nav>\");\n$templateCache.put(\"app/components/search/search.html\",\"<input type=\\\"text\\\" placeholder=\\\"Поиск...\\\" class=\\\"form-control\\\" style=\\\"vertical-align: bottom;\\\" ng-model=\\\"searchVm.q\\\" ng-model-options=\\\"{ debounce: 1000 }\\\">\");}]);"],"sourceRoot":"/source/"}