{"version":3,"sources":["scripts/app-d3d92e0315.js"],"names":["angular","module","app","SearchController","vm","this","q","Object","defineProperty","get","_q","set","value","onSearchChanged","component","templateUrl","bindings","controllerAs","controller","webDevTec","getTec","data","title","url","description","logo","service","acmeNavbar","NavbarController","moment","session","profile","then","user","relativeDate","creationDate","fromNow","$inject","directive","restrict","scope","bindToController","$scope","$uibModalInstance","position","messages","onNewMessage","ok","close","cancel","dismiss","addNewMessage","newMessage","$uibModal","$log","Message","messagesManager","openMessages","modalInstance","loadAllMessages","id","open","animation","size","resolve","addMessage","result","selectedItem","info","Date","_message","msg","extend","positionId","save","getMessage","message","push","githubContributor","$http","getContributors","limit","getContributorsComplete","response","getContributorsFailed","error","toJson","apiHost","factory","acmeMalarkey","malarkey","linkFunc","el","attr","watcher","typist","typeSpeed","deleteSpeed","pauseDelay","loop","postfix","addClass","forEach","extraValues","type","pause","$watch","contributors","contributor","login","$on","MalarkeyController","activate","template","link","DictionaryAutocompleteLink","element","attrs","key","name","DictionaryAutocompleteController","$sce","dictionaries","items","trustAsHtml","refreshItems","itemsByKey","undefined","selected","DictionaryComponentController","$q","newItem","currentPage","itemsPerPage","add","item","addItem","pageChanged","count","countItemsByKey","all","totalItems","addNewPosition","newPosition","copy","inputPosition","onAddPosition","dealerId","removePosition","onDeletePosition","dealer","activePosition","removed","positions","transclude","CommentController","comment","CommentsController","newComment","addNewComment","onAddComment","text","comments","BuildingsNearbyController","maps","addresses","toastr","findNearbyBuildings","address","latLng","centroidToLatlng","geometry","centroid","listWithinRadius","buildings","_","isEmpty","_address","newVal","BuildingFormController","building","dealers","buildingPositions","dealerList","_dealers","buildingDealersMap","dealersMap","loadPositions","buildingId","list1","i","length","console","log","savePositions","dealerMap","create1","resp","index","map","e","indexOf","splice","addDealerPosition","removeDealerPosition","loadDealers","list","refreshDealers","addDealer","keys","BuildingContactsController","removeContact","contact","onRemoveContact","contacts","setSelected","asyncSelected","latLng0","isDefined","DG","location","initMap","marker","getMarker","addTo","on","latlng","lat","lng","searchCoords","removeLayer","attributes","buildingname","bindPopup","locationFullName","full_name","number","latLngToWkt","onAddressSelected","searchAddress","addLayer","panTo","getLocation","suggestions","onSelect","itemData","model","label","search","hint","setZoom","detailedZoom","AddressInputController","onCheckAdded","onAddDealer","findAllByQuery","AddContactController","appConfig","initNewContact","_contactType","newValue","getContacts","getContactTypes","apiUrl","contactTypes","addContact","newContact","contactName","find","contactId","onContactAdded","User","cachedPromises","usersManager","_pool","_retrieveInstance","instance","setData","_search","getUser","isUndefined","loadAllUsers","deferred","defer","success","itemsArray","reject","promise","setUser","prototype","post","delete","update","put","_load","author","params","setMessage","self","dgis","overviewZoom","zoom","center","geoclicker","showPhotos","showBooklet","ajax","output","region_id","getById","fields","point","version","Wkt","toPoints","wkt","saveContact","MainController","$timeout","getWebDevTec","classAnimation","showToastr","awesomeThings","awesomeThing","rank","Math","random","$state","$rootScope","$cookies","OAuth","OAuthToken","loadCurrentUser","userId","currentUserPromise","credentials","options","getAccessToken","logout","remove","go","getUserId","isAuthenticated","checkLoggedIn","skipLoggedIn","spinnerService","username","email","password","loginForm","$setPristine","res","err","$setValidity","$stateParams","loadByKey","dictionary","listAll","offset","max","loadItem","listAllByBuilding","createPosition","positionData","filter","mapAll","listByIds","ids","createComment","commentData","Building","buildingsManager","getBuilding","loadAllBuildings","setBuilding","Buildings","BuildingDealer","buildingDealersManager","unsavedId","min","_unsaved","unsaved","Number","getBuildingDealer","loadAllBuildingDealers","setBuildingDealer","getDealersPositionsMap","dealerPositionsMap","mapOfDealers","saveDealerPositions","positionsList","savedPosition","loadComments","addComment","loadBuildings","total","filtersOpen","getBuildingDealers","d","join","require","ngModel","$parsers","val","parseInt","$formatters","$location","buildingDealersService","updateBuildingContacts","contactList","mapOfDealersPositions","dealersPositionsMap","dealerPositions","isAddedDealer","String","saveChanges","path","onSelectAddress","addressObject","radius","buildingsPromise","positionBuildingsOnMap","$apply","target","mapPromise","results","runBlock","debug","run","$window","event","rejection","getRefreshToken","href","routerConfig","$stateProvider","$urlRouterProvider","state","abstract","views","loggedin","loggedout","container@private","container@public","otherwise","config","constant","window","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","authInterceptor","responseError","status","OAuthProvider","configure","grantPath","revokePath","baseUrl","clientId","secure","OAuthTokenProvider","$httpProvider","interceptors","$injector","$templateCache"],"mappings":"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","file":"scripts/app-d3d92e0315.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('festima', ['ngMessages', 'ngAnimate', 'ngRoute', 'ui.router', 'ngAnimate', 'ngSanitize', 'ui.bootstrap', 'toastr', 'ui.select',\r\n      'angular-oauth2', 'angularSpinners']);\r\n\r\n})();\r\n\n(function(app) {\n  'use strict';\n\n  app.component('esSearch', {\n    templateUrl: 'app/components/search/search.html',\n    bindings: {\n      onSearchChanged: '&'\n    },\n    controllerAs: 'searchVm',\n    controller: SearchController\n  });\n\n  function SearchController() {\n    var vm = this;\n\n    var q = vm.q;\n    Object.defineProperty(this, 'q', {\n      get: function() {\n        return this._q;\n      },\n      set: function(value) {\n        this._q = value;\n        vm.onSearchChanged({q: value});\n      }\n    })\n  }\n\n}(angular.module('festima')));\n\n(function() {\n  'use strict';\n\n  angular\n      .module('festima')\n      .service('webDevTec', webDevTec);\n\n  /** @ngInject */\n  function webDevTec() {\n    var data = [\n      {\n        'title': 'AngularJS',\n        'url': 'https://angularjs.org/',\n        'description': 'HTML enhanced for web apps!',\n        'logo': 'angular.png'\n      },\n      {\n        'title': 'BrowserSync',\n        'url': 'http://browsersync.io/',\n        'description': 'Time-saving synchronised browser testing.',\n        'logo': 'browsersync.png'\n      },\n      {\n        'title': 'GulpJS',\n        'url': 'http://gulpjs.com/',\n        'description': 'The streaming build system.',\n        'logo': 'gulp.png'\n      },\n      {\n        'title': 'Jasmine',\n        'url': 'http://jasmine.github.io/',\n        'description': 'Behavior-Driven JavaScript.',\n        'logo': 'jasmine.png'\n      },\n      {\n        'title': 'Karma',\n        'url': 'http://karma-runner.github.io/',\n        'description': 'Spectacular Test Runner for JavaScript.',\n        'logo': 'karma.png'\n      },\n      {\n        'title': 'Protractor',\n        'url': 'https://github.com/angular/protractor',\n        'description': 'End to end test framework for AngularJS applications built on top of WebDriverJS.',\n        'logo': 'protractor.png'\n      },\n      {\n        'title': 'Bootstrap',\n        'url': 'http://getbootstrap.com/',\n        'description': 'Bootstrap is the most popular HTML, CSS, and JS framework for developing responsive, mobile first projects on the web.',\n        'logo': 'bootstrap.png'\n      },\n      {\n        'title': 'Angular UI Bootstrap',\n        'url': 'http://angular-ui.github.io/bootstrap/',\n        'description': 'Bootstrap components written in pure AngularJS by the AngularUI Team.',\n        'logo': 'ui-bootstrap.png'\n      }\n    ];\n\n    this.getTec = getTec;\n\n    function getTec() {\n      return data;\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('festima')\n    .directive('acmeNavbar', acmeNavbar);\n\n  /** @ngInject */\n  function acmeNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      scope: {\n          creationDate: '='\n      },\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController(moment, session) {\n      var vm = this;\n\n      session.profile().then(function(user) {\n        vm.user = user;\n      });\n\n      // \"vm.creation\" is avaible by directive option \"bindToController: true\"\n      vm.relativeDate = moment(vm.creationDate).fromNow();\n\n\n    }\n  }\n\n})();\n\nangular.module('festima')\n  .controller('MessagesModalController', function ($scope, $uibModalInstance, position, messages, onNewMessage) {\n    var vm = this;\n\n    vm.messages = messages;\n    vm.onNewMessage = onNewMessage;\n\n    vm.ok = function () {\n      // $uibModalInstance.close($scope.selected.item);\n      $uibModalInstance.close(position);\n    };\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss('cancel');\n    };\n\n    vm.addNewMessage = function() {\n      vm.onNewMessage(vm.newMessage);\n      vm.newMessage = {};\n    };\n  }\n);\n\nangular.module('festima')\r\n  .controller('MessagesButtonController', function($uibModal, $log, moment, Message, messagesManager, session) {\r\n    var vm = this;\r\n\r\n    vm.openMessages = function () {\r\n      // var _messages;\r\n      var modalInstance;\r\n\r\n      messagesManager.loadAllMessages(vm.position.id).then(function(data) {\r\n        vm.messages = data;\r\n\r\n        modalInstance = $uibModal.open({\r\n          animation: true,\r\n          templateUrl: 'app/components/messagesButton/messages-modal.html',\r\n          controller: 'MessagesModalController',\r\n          controllerAs: 'messagesModalVm',\r\n          size: 'lg',\r\n          resolve: {\r\n            position: function () {\r\n              return vm.position;\r\n            },\r\n            messages: function() {\r\n              return vm.messages;\r\n            },\r\n            onNewMessage: function() {\r\n              return vm.addMessage;\r\n            }\r\n          }\r\n        });\r\n\r\n        modalInstance.result.then(function (selectedItem) {\r\n          // $scope.selected = selectedItem;\r\n        }, function () {\r\n          $log.info('Modal dismissed at: ' + new Date());\r\n        });\r\n      });\r\n    };\r\n\r\n    vm.addMessage = function(_message) {\r\n      var msg = new Message(angular.extend(_message, {positionId: vm.position.id}));\r\n\r\n      msg.save().then(function(id) {\r\n        // messagesManager.loadAllMessages(vm.position.id).then(function(data) {\r\n        //   angular.copy(data, vm.messages);\r\n        // });\r\n        messagesManager.getMessage(id).then(function(message) {\r\n          vm.messages.push(message);\r\n        });\r\n      });\r\n    };\r\n  }\r\n);\r\n\nangular.module('festima').component('messagesButton', {\n  templateUrl: 'app/components/messagesButton/messages-button.html',\n  bindings: {\n    position: '<'\n  },\n  controller: 'MessagesButtonController',\n  controllerAs: 'messagesButtonVm'\n});\n\n(function() {\n  'use strict';\n\n  angular\n    .module('festima')\n    .factory('githubContributor', githubContributor);\n\n  /** @ngInject */\n  function githubContributor($log, $http) {\n    var apiHost = 'https://api.github.com/repos/Swiip/generator-gulp-angular';\n\n    var service = {\n      apiHost: apiHost,\n      getContributors: getContributors\n    };\n\n    return service;\n\n    function getContributors(limit) {\n      if (!limit) {\n        limit = 30;\n      }\n\n      return $http.get(apiHost + '/contributors?per_page=' + limit)\n        .then(getContributorsComplete)\n        .catch(getContributorsFailed);\n\n      function getContributorsComplete(response) {\n        return response.data;\n      }\n\n      function getContributorsFailed(error) {\n        $log.error('XHR Failed for getContributors.\\n' + angular.toJson(error.data, true));\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('festima')\n    .directive('acmeMalarkey', acmeMalarkey);\n\n  /** @ngInject */\n  function acmeMalarkey(malarkey) {\n    var directive = {\n      restrict: 'E',\n      scope: {\n        extraValues: '='\n      },\n      template: '&nbsp;',\n      link: linkFunc,\n      controller: MalarkeyController,\n      controllerAs: 'vm'\n    };\n\n    return directive;\n\n    function linkFunc(scope, el, attr, vm) {\n      var watcher;\n      var typist = malarkey(el[0], {\n        typeSpeed: 40,\n        deleteSpeed: 40,\n        pauseDelay: 800,\n        loop: true,\n        postfix: ' '\n      });\n\n      el.addClass('acme-malarkey');\n\n      angular.forEach(scope.extraValues, function(value) {\n        typist.type(value).pause().delete();\n      });\n\n      watcher = scope.$watch('vm.contributors', function() {\n        angular.forEach(vm.contributors, function(contributor) {\n          typist.type(contributor.login).pause().delete();\n        });\n      });\n\n      scope.$on('$destroy', function () {\n        watcher();\n      });\n    }\n\n    /** @ngInject */\n    function MalarkeyController($log, githubContributor) {\n      var vm = this;\n\n      vm.contributors = [];\n\n      activate();\n\n      function activate() {\n        return getContributors().then(function() {\n          $log.info('Activated Contributors View');\n        });\n      }\n\n      function getContributors() {\n        return githubContributor.getContributors(10).then(function(data) {\n          vm.contributors = data;\n\n          return vm.contributors;\n        });\n      }\n    }\n\n  }\n\n})();\n\n(function(app) {\n  'use strict';\n\n  app.component('esDictionaryAutocomplete', {\n    templateUrl: 'app/components/dictionaryAutocomplete/dictionary-autocomplete.html',\n    bindings: {\n      key: '@',\n      selected: '='\n    },\n    controller: DictionaryAutocompleteController,\n    controllerAs: 'vm'\n  });\n\n  /** @ngInject */\n  function DictionaryAutocompleteLink(scope, element, attrs, controller) {\n    controller.key = attrs[this.name];\n  }\n\n  /** @ngInject */\n  function DictionaryAutocompleteController($sce, dictionaries) {\n    var vm = this;\n\n    vm.items = [];\n\n    vm.trustAsHtml = function(value) {\n      return $sce.trustAsHtml(value);\n    };\n\n    vm.refreshItems = function(q) {\n      dictionaries.itemsByKey(vm.key, undefined, undefined, q).then(function(items) {\n        vm.items = items;\n      });\n    };\n\n    vm.refreshItems();\n  }\n\n} (angular.module('festima')));\n\n(function(app) {\n\n  app.component('esDictionary', {\n    templateUrl: 'app/components/dictionary/dictionary.html',\n    bindings: {\n      // dictionary: '<',\n      key: '<'\n    },\n    controllerAs: 'dictionaryVm',\n    controller: DictionaryComponentController\n  });\n\n  function DictionaryComponentController($q, dictionaries) {\n    var vm = this;\n\n    vm.items = [];\n    vm.newItem = {};\n    vm.currentPage = 1;\n    vm.itemsPerPage = 10;\n\n    vm.add = function(item) {\n      dictionaries.addItem(vm.key, item).then(function(item) {\n        vm.newItem = {};\n        vm.pageChanged();  // update items\n      });\n    };\n\n    vm.pageChanged = function() {\n      var items = dictionaries.itemsByKey(vm.key, (vm.currentPage - 1) * vm.itemsPerPage, vm.itemsPerPage);\n      var count = dictionaries.countItemsByKey(vm.key);\n\n      $q.all({items: items, count: count}).then(function(result) {\n        vm.items = result.items;\n        vm.totalItems = result.count;\n      });\n    };\n\n    vm.pageChanged();\n  }\n\n} (angular.module('festima')));\n\nangular.module('festima')\n  .controller('DealerPositionsController', function() {\n    var vm = this;\n\n    angular.extend(vm, {\n\n      addNewPosition: function() {\n        var newPosition = angular.copy(vm.newPosition);\n        angular.extend(newPosition, vm.inputPosition);\n        vm.inputPosition = {};\n        vm.onAddPosition({dealerId: newPosition.dealerId, position: newPosition});\n      },\n\n      removePosition: function(position) {\n        vm.onDeletePosition({dealerId: position.dealer.id, position: position});\n      },\n\n      activePosition: function(item) {\n          return item.removed === undefined;\n      }\n\n    });\n  }\n);\n\nangular.module('festima').component('esDealerPositions', {\n  templateUrl: 'app/components/dealerPositions/dealer-positions.html',\n  bindings: {\n    positions: '<',\n    newPosition: '<',\n    onAddPosition: '&',\n    onDeletePosition: '&'\n  },\n  controller: 'DealerPositionsController',\n  controllerAs: 'positionsVm',\n  transclude: true\n});\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.component('esComment', {\r\n    templateUrl: 'app/components/comment/comment.html',\r\n    bindings: {\r\n      comment: '<'\r\n    },\r\n    controllerAs: 'commentVm',\r\n    controller: CommentController\r\n  });\r\n\r\n  function CommentController() {\r\n\r\n  }\r\n\r\n}(angular.module('festima')));\r\n\n(function(app) {\n  'use strict';\n\n  app.component('esComments', {\n    templateUrl: 'app/components/comments/comments.html',\n    bindings: {\n      comments: '<',\n      onAddComment: '&'\n    },\n    controllerAs: 'commentsVm',\n    controller: CommentsController\n  });\n\n  function CommentsController() {\n    var vm = this;\n    vm.newComment = {};\n\n    vm.addNewComment = function() {\n      vm.onAddComment({comment: vm.newComment.text});\n      vm.newComment = {};\n    }\n  }\n\n}(angular.module('festima')));\n\n(function(app){\r\n  'use strict';\r\n\r\n  app.component('esBuildingsNearby', {\r\n    templateUrl: 'app/components/buildingsNearby/buildings-nearby.html',\r\n    bindings: {\r\n      address: '<'\r\n    },\r\n    controllerAs: 'vm',\r\n    controller: BuildingsNearbyController\r\n  });\r\n\r\n  function BuildingsNearbyController(maps, addresses, toastr) {\r\n    var vm = this;\r\n\r\n    var findNearbyBuildings = function(address) {\r\n      var latLng;\r\n\r\n      if (address) {\r\n        latLng = maps.centroidToLatlng(address.geometry.centroid);\r\n        addresses.listWithinRadius(latLng, 1000).then(\r\n          function(buildings) {\r\n            if (!_.isEmpty(buildings)) {\r\n              toastr.error('Найдены объекты в радиусе 1 км!');\r\n            }\r\n            vm.buildings = buildings;\r\n          }\r\n        );\r\n      }\r\n    };\r\n\r\n    Object.defineProperty(vm, 'address', {\r\n      get: function() {\r\n        return vm._address;\r\n      },\r\n      set: function(newVal) {\r\n        vm._address = newVal;\r\n        findNearbyBuildings(newVal);\r\n      }\r\n    });\r\n  }\r\n\r\n}(angular.module('festima')));\r\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.component('esBuildingForm', {\r\n    templateUrl: 'app/components/buildingForm/building-form.html',\r\n    bindings: {\r\n      building: '<'\r\n    },\r\n    controller: BuildingFormController,\r\n    controllerAs: 'buildingFormVm',\r\n    transclude: true\r\n  });\r\n\r\n  function BuildingFormController() {\r\n    var vm = this;\r\n  }\r\n\r\n}(angular.module('festima')));\r\n\n'use strict';\n\nangular.module('festima')\n  .service('buildingDealersService1', function (dealers, positions) {\n      var buildingDealersMap = {};  // map dealer name and positions to their ids\n      var dealersMap = {};          // map dealers to their ids\n      var buildingPositions;\n      var dealerList;\n      var _dealers;\n\n      angular.extend(this, {\n        buildingDealersMap: buildingDealersMap,\n\n        loadPositions: function (buildingId) {\n          positions.list1(buildingId).then(function (response) {\n            buildingPositions = response.data;\n\n            var dealerId;\n            for (var i = 0; i < buildingPositions.length; i++) {\n              dealerId = buildingPositions[i].dealerId;\n\n              if (buildingDealersMap[dealerId] === undefined) {\n                buildingDealersMap[dealerId] = {name: dealersMap[dealerId].name, positions: []};\n              }\n\n              buildingDealersMap[dealerId].positions.push(buildingPositions[i]);\n            }\n          }, function (response) {\n            console.log(\"couldn't load positions\");\n          });\n        },\n\n        savePositions: function () {\n          var dealerMap;\n          var position;\n          // save changes in dealers positions\n          for (var dealerId in buildingDealersMap) {\n            dealerMap = buildingDealersMap[dealerId];\n\n            for (var i = 0; i < dealerMap.positions.length; i++) {\n              position = dealerMap.positions[i];\n\n              if (position.buildingId === undefined) {\n                position.buildingId = position.building.id;\n                delete position['building'];\n              }\n\n              if (position.id === undefined) {\n                positions.create1(position).then(function (resp) {\n                  position.id = resp.data.id;\n                  console.log('Saved position ' + position.id);\n                });\n              }\n\n              if (position.removed === true) {\n                positions.delete(position.id).then(function (resp) {\n                  var index = dealerMap.positions.map(function (e) {\n                    return e.id;\n                  }).indexOf(position.id);\n                  dealerMap.positions.splice(index, 1);\n                });\n              }\n            }\n          }\n        },\n\n        addDealerPosition: function (dealerId, position) {\n          buildingDealersMap[dealerId].positions.push(position);\n        },\n\n        removeDealerPosition: function (dealerId, position) {\n          var dealerMap = buildingDealersMap[dealerId];\n\n          if (position.id === undefined) {\n            var index = dealerMap.positions.indexOf(position);\n            if (index !== -1) {\n              dealerMap.positions.splice(index, 1);\n            }\n          } else {\n            position.removed = true;\n          }\n        },\n\n        dealers: _dealers,\n\n        loadDealers: function () {\n          dealers.list().then(function (resp) {\n            dealerList = resp.data;\n\n            var dealer;\n            // todo: If dealers not loaded yet?\n            for (var i = 0; i < dealerList.length; i++) {\n              dealer = dealerList[i];\n              if (dealersMap[dealer.id] === undefined) {\n                dealersMap[dealer.id] = dealer;\n              }\n            }\n          })\n        },\n\n        refreshDealers: function (q) {\n          dealers.list().then(function (resp) {\n            _dealers = resp.data;\n            // angular.copy(_dealers, resp.data);\n\n            var dealer;\n            for (var i = 0; i < _dealers.length; i++) {\n              dealer = _dealers[i];\n              if (dealersMap[dealer.id] === undefined) {\n                dealersMap[dealer.id] = dealer;\n              }\n            }\n          })\n        },\n        \n        addDealer: function(dealer) {\n          var index = Object.keys(buildingDealersMap).indexOf(dealer.id);\n\n          if (index === -1) {\n            buildingDealersMap[dealer.id] = {name: dealer.name, positions: []};\n          }\n        }\n      });\n    }\n  );\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.component('esBuildingContacts', {\r\n    templateUrl: 'app/components/buildingContacts/building-contacts.html',\r\n    bindings: {\r\n      contacts: '<',\r\n      onRemoveContact: '&'\r\n    },\r\n    controllerAs: 'buildingContactsVm',\r\n    controller: BuildingContactsController\r\n  });\r\n\r\n  function BuildingContactsController() {\r\n    var vm = this;\r\n\r\n    vm.removeContact = function(contact) {\r\n      vm.onRemoveContact({contact: contact});\r\n    };\r\n  }\r\n\r\n}(angular.module('festima')));\r\n\nangular.module('festima')\r\n  .controller('BuildingAddressController', function(maps) {\r\n    var vm = this;\r\n\r\n    var latLng0;\r\n\r\n    if (angular.isDefined(vm.building)) {\r\n      setSelected(vm.building.address);\r\n    }\r\n\r\n    function setSelected(address) {\r\n      vm.asyncSelected = address;\r\n    }\r\n\r\n    DG.then(function() {\r\n\r\n      if (angular.isDefined(vm.building) && angular.isDefined(vm.building.location)) {\r\n        latLng0 = maps.centroidToLatlng(vm.building.location);\r\n      }\r\n\r\n      maps.initMap(latLng0).then(function(map) {\r\n        vm.map = map;\r\n\r\n        if (angular.isDefined(latLng0)) {\r\n          vm.marker = maps.getMarker(latLng0);\r\n          vm.marker.addTo(vm.map);\r\n        }\r\n\r\n        vm.map.on('click', function (e) {\r\n          var latLng = [e.latlng.lat, e.latlng.lng];\r\n          console.log(latLng);\r\n\r\n          maps.searchCoords(latLng).then(function (location) {\r\n            vm.location = location;\r\n            vm.address = location.name;\r\n\r\n            if (typeof vm.marker !== 'undefined') {\r\n              vm.map.removeLayer(vm.marker);\r\n            }\r\n\r\n            vm.marker = maps.getMarker(latLng);\r\n            var text = location.name + '.<br />';\r\n\r\n            text += location.attributes.buildingname;\r\n            vm.marker.bindPopup(text);\r\n            vm.marker.addTo(vm.map);\r\n\r\n            var locationFullName = location.name;\r\n\r\n            var item = {geometry: {}};\r\n            item.full_name = locationFullName;\r\n            item.geometry.centroid = location.centroid;\r\n\r\n            if (_.isEmpty(location.attributes.number)) {\r\n              console.log('No building number!');\r\n              item.geometry.centroid = maps.latLngToWkt(latLng);\r\n            }\r\n\r\n            setSelected(locationFullName);\r\n            vm.onAddressSelected({address: item});\r\n          });\r\n        });\r\n      });\r\n    });\r\n\r\n    vm.searchAddress = function(q) {\r\n      maps.searchAddress(q).then(function(latLng){\r\n\r\n        if (typeof vm.marker !== 'undefined') {\r\n          vm.map.removeLayer(vm.marker);\r\n        }\r\n\r\n        // создаем и добавляем маркер на карту\r\n        vm.marker = maps.getMarker(latLng);\r\n        vm.map.addLayer(vm.marker);\r\n\r\n        // центрируем карту в координаты маркера\r\n        vm.map.panTo(latLng);\r\n      });\r\n    };\r\n\r\n    vm.getLocation = function(q) {\r\n      return maps.suggestions(q).then(function(items){\r\n        return items.map(function(item){\r\n          return item;\r\n        });\r\n      });\r\n    };\r\n\r\n    vm.onSelect = function(itemData, model, label) {\r\n      maps.search(itemData.hint.text).then(function(items) {\r\n        var item = items[0];\r\n\r\n        if (typeof vm.marker !== 'undefined') {\r\n          vm.map.removeLayer(vm.marker);\r\n        }\r\n\r\n        var latLng = maps.centroidToLatlng(item.geometry.centroid);\r\n\r\n        // создаем и добавляем маркер на карту\r\n        vm.marker = maps.getMarker(latLng);\r\n        vm.map.addLayer(vm.marker);\r\n\r\n        // центрируем карту в координаты маркера\r\n        vm.map.setZoom(maps.detailedZoom);\r\n        vm.map.panTo(latLng);\r\n\r\n        setSelected(item.full_name);\r\n        vm.onAddressSelected({address: item});\r\n      });\r\n    };\r\n  }\r\n);\r\n\nangular.module('festima')\n  .component('esBuildingAddress', {\n    templateUrl: 'app/components/buildingAddress/building-address.html',\n    bindings: {\n      building: '<',\n      onAddressSelected: '&'\n    },\n    controllerAs: 'addressVm',\n    controller: 'BuildingAddressController'\n  }\n);\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.component('esAddressInput', {\r\n    templateUrl: 'app/components/addressInput/address-input.html',\r\n    bindings: {\r\n      onAddressSelected: '&'\r\n    },\r\n    controllerAs: 'addressInputVm',\r\n    controller: AddressInputController\r\n  });\r\n\r\n  function AddressInputController(maps) {\r\n    var vm = this;\r\n\r\n    vm.getLocation = function(q) {\r\n      return maps.suggestions(q).then(function(items){\r\n        return items.map(function(item){\r\n          return item;\r\n        });\r\n      });\r\n    };\r\n\r\n    vm.onSelect = function(itemData, model, label) {\r\n      maps.search(itemData.hint.text).then(function(items) {\r\n        var item = items[0];\r\n\r\n        vm.onAddressSelected({address: item});\r\n      });\r\n    };\r\n  }\r\n\r\n}(angular.module('festima')));\r\n\nangular.module('festima')\n  .controller('AddDealerButtonController', function(dealers){\n    var vm = this;\n\n    vm.addDealer = function() {\n      if ( !vm.onCheckAdded({dealer: vm.dealer})) {\n        vm.onAddDealer({dealer: vm.dealer});\n      }\n\n      vm.dealer = undefined;\n    };\n\n    vm.refreshDealers = function (q) {\n      dealers.findAllByQuery().then(function (dealers) {\n        vm.dealers = dealers;\n      })\n    };\n\n  }\n);\n\nangular.module('festima').component('esAddDealerButton', {\n  templateUrl: 'app/components/addDealerButton/add-dealer-button.html',\n  bindings: {\n    onAddDealer: '&',\n    onCheckAdded: '&'\n  },\n  controller: 'AddDealerButtonController',\n  controllerAs: 'addDealerVm'\n});\n\n(function(app) {\n  'use strict';\n\n  app.component('esAddContact', {\n    templateUrl: 'app/components/addContact/add-contact.html',\n    bindings: {\n      onContactAdded: '&'\n    },\n    controllerAs: 'addContactVm',\n    controller: AddContactController\n  });\n\n  function AddContactController(appConfig, $http) {\n    var vm = this;\n\n    function initNewContact() {\n      vm.newItem = {};\n      vm.contacts = [];\n\n      Object.defineProperty(vm.newItem, 'contactType', {\n        get: function() {\n          return vm.newItem._contactType;\n        },\n        set: function(newValue) {\n          vm.newItem._contactType = newValue;\n          getContacts(newValue).then(function(contacts) {\n            vm.contacts = contacts;\n          });\n        }\n      });\n    }\n\n    function getContactTypes() {\n      return $http.get(appConfig.apiUrl + '/dictionaries').then(function(response) {\n        return response.data;\n      })\n    }\n\n    function getContacts(key) {\n      return $http.get(appConfig.apiUrl + '/dictionaries/' + key + '/items').then(function(response) {\n        return response.data;\n      });\n    }\n\n    initNewContact();\n\n    getContactTypes().then(function(contactTypes) {\n      vm.contactTypes = contactTypes;\n    });\n\n    vm.addContact = function(newContact) {\n      newContact.contactName = _.find(vm.contacts, function(contact) { return contact.id == newContact.contactId; }).title;\n      vm.onContactAdded({newContact: newContact});\n      initNewContact();\n    };\n  }\n\n}(angular.module('festima')));\n\nangular.module('festima')\n  .factory('usersManager', ['$http', '$q', 'appConfig', 'User', function ($http, $q, appConfig, User) {\n    var cachedPromises = {};\n    var usersManager = {\n      _pool: {},\n      _retrieveInstance: function (id, data) {\n        var instance = this._pool[id];\n\n        if (instance) {\n          instance.setData(data);\n        } else {\n          instance = new User(data);\n          this._pool[id] = instance;\n        }\n\n        return instance;\n      },\n\n      _search: function (id) {\n        return this._pool[id];\n      },\n\n      getUser: function (id) {\n        if (angular.isUndefined(cachedPromises[id])) {\n          cachedPromises[id] = $http.get(appConfig.apiUrl + '/users/' + id).then(function(response) {\n              return response.data;\n            })\n        }\n\n        return cachedPromises[id];\n      },\n\n      loadAllUsers: function () {\n        var deferred = $q.defer();\n        var scope = this;\n        $http.get(appConfig.apiUrl + '/users')\n          .success(function (itemsArray) {\n            var items = [];\n            itemsArray.forEach(function (itemData) {\n              var item = scope._retrieveInstance(itemData.id, itemData);\n              items.push(item);\n            });\n\n            deferred.resolve(items);\n          })\n          .error(function () {\n            deferred.reject();\n          });\n        return deferred.promise;\n      },\n\n      setUser: function (data) {\n        var scope = this;\n        var item = this._search(data.id);\n        if (item) {\n          item.setData(data);\n        } else {\n          item = scope._retrieveInstance(data);\n        }\n        return item;\n      }\n    };\n\n    return usersManager;\n  }]);\n\nangular.module('festima')\n  .factory('User', ['$http', 'appConfig', function ($http, appConfig) {\n      function User(data) {\n        if (data) {\n          this.setData(data);\n        }\n        // some init\n      };\n\n      User.prototype = {\n        setData: function (data) {\n          angular.extend(this, data);\n        },\n        save: function () {\n          return $http.post(appConfig.apiUrl + '/users', this);\n        },\n        delete: function () {\n          $http.delete(appConfig.apiUrl + '/users/' + this.id);\n        },\n        update: function () {\n          $http.put(appConfig.apiUrl + '/users/' + this.id, this);\n        },\n      };\n      return User;\n    }]\n  );\n\nangular.module('festima')\n  .factory('messagesManager', ['$http', '$q', 'Message', 'usersManager', 'appConfig', function ($http, $q, Message, usersManager, appConfig) {\n    var messagesManager = {\n      _pool: {},\n      _retrieveInstance: function (id, data) {\n        var instance = this._pool[id];\n\n        if (instance) {\n          instance.setData(data);\n        } else {\n          instance = new Message(data);\n          this._pool[id] = instance;\n        }\n\n        return instance;\n      },\n      _search: function (id) {\n        return this._pool[id];\n      },\n      _load: function (id, deferred) {\n        var scope = this;\n\n        $http.get(appConfig.apiUrl + '/messages/' + id)\n          .success(function (data) {\n            var itemData = data;\n            var item;\n\n            usersManager.getUser(itemData.author.id).then(function(data) {\n              // delete itemData.authorId;\n              itemData.author = data;\n              item = scope._retrieveInstance(itemData.id, itemData);\n              deferred.resolve(item);\n            });\n          })\n          .error(function () {\n            deferred.reject();\n          });\n      },\n\n      getMessage: function (id) {\n        var deferred = $q.defer();\n        var item = this._search(id);\n        if (item) {\n          deferred.resolve(item);\n        } else {\n          this._load(id, deferred);\n        }\n        return deferred.promise;\n      },\n\n      loadAllMessages: function (positionId) {\n        var deferred = $q.defer();\n        var scope = this;\n        $http.get(appConfig.apiUrl + '/messages', {params: {positionId: positionId}})\n          .success(function (itemsArray) {\n            var items = [];\n            var item;\n\n            if (itemsArray.length == 0) {\n              deferred.resolve([]);\n              return;\n            }\n\n            itemsArray.forEach(function (itemData) {\n              usersManager.getUser(itemData.author.id).then(function(data) {\n                // delete itemData.authorId;\n                itemData.author = data;\n                item = scope._retrieveInstance(itemData.id, itemData);\n                items.push(item);\n              }).then(function() {\n                deferred.resolve(items);\n              });\n            });\n          })\n          .error(function () {\n            deferred.reject();\n          });\n        return deferred.promise;\n      },\n\n      setMessage: function (data) {\n        var scope = this;\n        var item = this._search(data.id);\n        if (item) {\n          item.setData(data);\n        } else {\n          item = scope._retrieveInstance(data);\n        }\n        return item;\n      }\n    };\n\n    return messagesManager;\n  }]);\n\nangular.module('festima')\n  .service('messages', function($http) {\n    angular.extend(this, {\n      // list: function(positionId) {\n        // return $http.get('http://localhost:3000/api/messages', {params: {positionId: positionId}});\n      // }\n    });\n  }\n);\n\nangular.module('festima')\n  .factory('Message', ['$http', '$q', 'appConfig', function ($http, $q, appConfig) {\n      function Message(data) {\n        if (data) {\n          this.setData(data);\n        }\n        // some init\n      };\n\n      Message.prototype = {\n        setData: function (data) {\n          angular.extend(this, data);\n        },\n        save: function () {\n          var deferred = $q.defer();\n          var self = this;\n\n          if (this.id === undefined) {\n            $http.post(appConfig.apiUrl + '/messages', this).then(\n              function(response) {\n                angular.extend(self, response.data);\n                deferred.resolve(self.id)\n              },\n              function(response) {\n                deferred.reject();\n              }\n            );\n          } else {\n            this.update();\n            deferred.resolve(this.id);\n          }\n\n          return deferred.promise;\n        },\n        delete: function () {\n          $http.delete(appConfig.apiUrl + '/messages/' + this.id);\n        },\n        update: function () {\n          $http.put(appConfig.apiUrl + '/messages/' + this.id, this);\n        },\n      };\n      return Message;\n    }]\n  );\n\n'use strict';\r\n\r\n(function() {\r\n  angular.module('festima')\r\n    .service('maps', function($q) {\r\n      var dgis;\r\n\r\n      angular.extend(this, {\r\n        dgis: dgis,\r\n\r\n        detailedZoom: 16,\r\n        overviewZoom: 9,\r\n\r\n        initMap: function (latLng) {\r\n          var deferred = $q.defer();\r\n          var zoom = this.detailedZoom;\r\n\r\n          if (angular.isUndefined(latLng)) {\r\n            latLng = [55.752142, 37.617067];\r\n            zoom = this.overviewZoom;\r\n          }\r\n\r\n          DG.then(function () {\r\n            dgis = DG;\r\n            var map = dgis.map('map', {\r\n              center: latLng,\r\n              zoom: zoom,\r\n              geoclicker: true,\r\n              showPhotos: false,\r\n              showBooklet: false\r\n            });\r\n\r\n            deferred.resolve(map);\r\n          }, function() {\r\n            deferred.reject();\r\n          });\r\n\r\n          return deferred.promise;\r\n        },\r\n\r\n        suggestions: function(q) {\r\n          var deferred = $q.defer();\r\n\r\n          dgis.ajax({\r\n            url: 'http://catalog.api.2gis.ru/2.0/suggest/list',\r\n            data: {\r\n              key: 'ruczoy1743',\r\n              output: 'json',\r\n              region_id: 32,\r\n              q: q\r\n            },\r\n            type: 'GET',\r\n            success: function(data) {\r\n              deferred.resolve(data.result.items);\r\n            },\r\n            error: function(error) {\r\n              console.log(error);\r\n              deferred.reject();\r\n            }\r\n          });\r\n\r\n          return deferred.promise;\r\n        },\r\n\r\n        getById: function(id) {\r\n          var deferred = $q.defer();\r\n\r\n          dgis.ajax({\r\n            url: 'http://catalog.api.2gis.ru/2.0/geo/get',\r\n            data: {\r\n              key: 'ruczoy1743',\r\n              id: id,\r\n              fields: 'items.geometry.centroid'\r\n            },\r\n            type: 'GET',\r\n            success: function(data) {\r\n              deferred.resolve(data.result.items[0]);\r\n            },\r\n            error: function(error) {\r\n              console.log(error);\r\n              deferred.reject();\r\n            }\r\n          });\r\n\r\n          return deferred.promise;\r\n        },\r\n\r\n        searchAddress: function (q) {\r\n          var point, lng, lat;\r\n          var deferred = $q.defer();\r\n\r\n          dgis.ajax({\r\n            url: 'http://catalog.api.2gis.ru/geo/search',\r\n            data: {\r\n              key: 'ruczoy1743',\r\n              version: 1.3,\r\n              q: q\r\n            },\r\n            type: 'GET',\r\n            success: function (data) {\r\n              // считываем строку в WKT-формате и возвращаем объект Point\r\n              point = dgis.Wkt.toPoints(data.result[0].centroid);\r\n\r\n              // извлекаем координаты для маркера\r\n              lng = point[0];\r\n              lat = point[1];\r\n\r\n              deferred.resolve([lat, lng]);\r\n            },\r\n            error: function (error) {\r\n              console.log(error);\r\n              deferred.reject();\r\n            }\r\n          });\r\n\r\n          return deferred.promise;\r\n        },\r\n\r\n        searchCoords: function (latLng) {\r\n          var deferred = $q.defer();\r\n\r\n          dgis.ajax({\r\n            url: 'http://catalog.api.2gis.ru/geo/search',\r\n            data: {\r\n              key: 'ruczoy1743',\r\n              version: 1.3,\r\n              q: latLng[1] + ',' + latLng[0]\r\n            },\r\n            success: function (data) {\r\n\r\n              deferred.resolve(data.result[0]);\r\n            },\r\n            error: function (error) {\r\n              console.log(error);\r\n              deferred.reject();\r\n            }\r\n          });\r\n\r\n          return deferred.promise;\r\n        },\r\n\r\n        getMarker: function(latLng) {\r\n          return dgis.marker(latLng);\r\n        },\r\n\r\n        centroidToLatlng: function(wkt) {\r\n          var point = DG.Wkt.toPoints(wkt);\r\n\r\n          return [point[1], point[0]];\r\n        },\r\n\r\n        latLngToWkt: function(latLng) {\r\n          return \"POINT(\" + latLng[1] + \" \" + latLng[0] + \")\";\r\n        },\r\n\r\n        search: function(q) {\r\n          var deferred = $q.defer();\r\n\r\n          dgis.ajax({\r\n            url: 'http://catalog.api.2gis.ru/2.0/geo/search',\r\n\r\n            data: {\r\n              key: 'ruewin2963',\r\n              q: q,\r\n              region_id: 32,\r\n              fields: 'hash,search_attributes,items.address,items.adm_div,items.geometry.centroid,items.geometry.selection,items.geometry.style,items.floors,items.group'\r\n            },\r\n            success: function (data) {\r\n\r\n              deferred.resolve(data.result.items);\r\n            },\r\n            error: function (error) {\r\n              console.log(error);\r\n              deferred.reject();\r\n            }\r\n          });\r\n\r\n          return deferred.promise;\r\n        }\r\n      });\r\n    }\r\n  );\r\n})();\r\n\n(function (app) {\n  'use strict';\n\n  app.service('contacts', ['$http', 'appConfig', function ($http, appConfig) {\n\n    angular.extend(this, {\n      saveContact: function (contact) {\n        return $http.post(appConfig.apiUrl + '/buildings/' + contact.building.id + '/contacts', contact).then(function (resp) {\n          return resp.data;\n        });\n      },\n\n      delete: function(contact) {\n        return $http.delete(appConfig.apiUrl + '/buildings/' + contact.building.id + '/contacts/' + contact.id).then(function(resp) {\n          return resp.data;\n        });\n      }\n    })\n  }]);\n\n}(angular.module('festima')));\n\n(function() {\n  'use strict';\n\n  angular\n    .module('festima')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($timeout, webDevTec, toastr) {\n    var vm = this;\n\n    vm.awesomeThings = [];\n    vm.classAnimation = '';\n    vm.creationDate = 1457814815376;\n    vm.showToastr = showToastr;\n\n    activate();\n\n    function activate() {\n      getWebDevTec();\n      $timeout(function() {\n        vm.classAnimation = 'rubberBand';\n      }, 4000);\n    }\n\n    function showToastr() {\n      toastr.info('Уведомление...');\n      vm.classAnimation = '';\n    }\n\n    function getWebDevTec() {\n      vm.awesomeThings = webDevTec.getTec();\n\n      angular.forEach(vm.awesomeThings, function(awesomeThing) {\n        awesomeThing.rank = Math.random();\n      });\n    }\n  }\n})();\n\n'use strict';\n\n/**\n * @ngdoc function\n * @name festimaApp.controller:AboutController\n * @description\n * # AboutController\n * Controller of the festimaApp\n */\nangular.module('festima')\n  .controller('AboutController', function () {\n\n  });\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.service('session', function($http, $log, $q, $state, $rootScope, $timeout, $cookies, appConfig, OAuth, OAuthToken) {\r\n    var currentUserPromise;\r\n    var userId;\r\n\r\n    function loadCurrentUser() {\r\n      return $http.get(appConfig.apiUrl + '/users/profile').then(function(response) {\r\n        var user = response.data;\r\n\r\n        userId = user.id;\r\n        return user;\r\n      });\r\n    }\r\n\r\n    // $rootScope.$on('$stateChangeError', function () {\r\n    //   $state.go('public.login');\r\n    // });\r\n\r\n    angular.extend(this, {\r\n      login: function(credentials) {\r\n        var options = {};\r\n\r\n        angular.extend(credentials, {scope: 'read'});\r\n\r\n        return OAuth.getAccessToken(credentials, options).then(function(response) {\r\n          currentUserPromise = loadCurrentUser();\r\n        }).catch(function(e) {\r\n          $log.error('Auth error: ', e);\r\n          return $q.reject(e);\r\n        });\r\n      },\r\n\r\n      logout: function() {\r\n        // OAuth.revokeToken();\r\n        $cookies.remove('token');\r\n        return $timeout(function () {\r\n          $state.go('public.login');\r\n        });\r\n      },\r\n\r\n      getUserId: function() {\r\n        return userId;\r\n      },\r\n\r\n      profile: function() {\r\n        if (!currentUserPromise) {\r\n          currentUserPromise = loadCurrentUser();\r\n        }\r\n        return currentUserPromise;\r\n      },\r\n\r\n      isAuthenticated: function() {\r\n        return OAuth.isAuthenticated();\r\n      },\r\n\r\n      checkLoggedIn: function() {\r\n        var deferred = $q.defer();\r\n\r\n        if (this.isAuthenticated()) {\r\n          deferred.resolve();\r\n        } else {\r\n          $timeout(function () {\r\n            $state.go('public.login');\r\n          });\r\n          deferred.reject();\r\n        }\r\n\r\n        return deferred.promise;\r\n      },\r\n\r\n      skipLoggedIn: function() {\r\n        var deferred = $q.defer();\r\n\r\n        if (this.isAuthenticated()) {\r\n          deferred.reject();\r\n        } else {\r\n          deferred.resolve();\r\n        }\r\n\r\n        return deferred.promise;\r\n      }\r\n    });\r\n  });\r\n\r\n} (angular.module('festima')));\r\n\n(function(app) {\n  'use strict';\n\n  app.controller('LoginController', function($http, $state, toastr, appConfig, OAuth, OAuthToken, spinnerService, session) {\n    var vm = this;\n\n    vm.login = function() {\n      var credentials = {username: vm.email, password: vm.password};\n\n      vm.loginForm.$setPristine();\n      // spinnerService.show(\"authSpinner\");\n\n      session.login(credentials).then(function(res) {\n        $state.go('private.main');\n      }).catch(function(err) {\n        toastr.error(\"Неверная комбинация email/пароль!\");\n\n        vm.loginForm.password.$setValidity(\"required\", false);\n        vm.password = '';\n      }).finally(function() {\n        // spinnerService.hide('authSpinner');\n      });\n    };\n\n    vm.logout = function() {\n      session.logout();\n    };\n  });\n\n\n} (angular.module('festima')));\n\n(function(app) {\n  'use strict';\n\n  app.controller('DictionaryShowController', function($stateParams, dictionaries) {\n    var vm = this;\n\n    console.log(\"State params: \", $stateParams.key);\n    vm.key = $stateParams.key;\n    dictionaries.loadByKey($stateParams.key).then(function(dictionary) {\n      vm.dictionary = dictionary;\n    });\n  });\n\n} (angular.module('festima')));\n\n(function(app) {\n  'use strict';\n\n  app.service('dictionaries', function($q, $http, appConfig) {\n\n    angular.extend(this, {\n      listAll: function() {\n        return $http.get(appConfig.apiUrl + '/dictionaries').then(function(response) {\n          return response.data;\n        });\n      },\n\n      loadByKey: function(key) {\n        return $http.get(appConfig.apiUrl + '/dictionaries/' + key).then(function(response) {\n          return response.data;\n        });\n      },\n\n      itemsByKey: function(key, offset, max, q) {\n        return $http.get(appConfig.apiUrl + '/dictionaries/' + key + '/items', {params: {offset: offset, max: max, q: q}}).then(function(response) {\n          return response.data;\n        });\n      },\n\n      countItemsByKey: function(key) {\n        return $http.get(appConfig.apiUrl + '/dictionaries/' + key + '/count').then(function(response) {\n          return response.data;\n        });\n      },\n\n      addItem: function(key, item) {\n        return $http.post(appConfig.apiUrl + '/dictionaries/' + key + '/items', {data: item}).then(function(response) {\n          return response.data;\n        });\n      },\n\n      loadItem: function(id) {\n        return $http.get(appConfig.apiUrl + '/dictionaries/items/' + id).then(function(response) {\n          return response.data;\n        });\n      }\n    });\n  });\n\n} (angular.module('festima')));\n\n(function(app) {\n  'use strict';\n\n  app.controller('DictionaryListController', function(dictionaries) {\n    var vm = this;\n\n    dictionaries.listAll().then(function(dictionaries) {\n      vm.dictionaries = dictionaries;\n    });\n  });\n\n} (angular.module('festima')));\n\n'use strict';\n\nangular.module('festima')\n  .service('positions', function($http, appConfig) {\n    angular.extend(this, {\n      listAllByBuilding: function(buildingId) {\n        return $http.get(appConfig.apiUrl + '/positions', {params: {buildingId: buildingId}});\n      },\n      createPosition: function(positionData) {\n        return $http.post(appConfig.apiUrl + '/positions', positionData).then(function(resp) { return resp.data; });\n      },\n      delete: function(positionId) {\n        return $http.delete(appConfig.apiUrl + '/positions/' + positionId);\n      }\n    });\n  }\n);\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.filter('notRemoved', function () {\r\n    return function (items) {\r\n      return _.filter(items, function(item) { return item.removed === undefined; })\r\n    };\r\n  });\r\n\r\n}(angular.module('festima')));\r\n\n'use strict';\n\nangular.module('festima')\n  .service('dealers', function($http, appConfig) {\n    angular.extend(this, {\n\n      findAllByQuery: function(q) {\n        return $http.get(appConfig.apiUrl + '/dictionaries/dealers/items', {params: {q: q}}).then(function(resp) { return resp.data; });\n      },\n\n      listAll: function() {\n        return $http.get(appConfig.apiUrl + '/dictionaries/dealers/items', {params: {max: 500}}).then(function(response) { return response.data; });\n      },\n\n      mapAll: function() {\n        return this.listAll().then(function(dealerList) {\n          var dealersMap = {};\n          var dealer;\n\n          for (var i = 0; i < dealerList.length; i++) {\n            dealer = dealerList[i];\n            if (angular.isUndefined(dealersMap[dealer.id])) {\n              dealersMap[dealer.id] = dealer;\n            }\n          }\n\n          return dealersMap;\n        });\n      },\n\n      listByIds: function(ids) {\n        var params = '?';\n\n        for(var i=0; i<ids.length; i++) {\n          params += '&id=' + ids[i];\n        }\n\n        return $http.get(appConfig.apiUrl + '/dictionaries/dealers/items' + params);\n      }\n    });\n});\n\n(function(app) {\n  'use strict';\n\n  app.service('comments', ['$http', 'appConfig', function($http, appConfig) {\n    angular.extend(this, {\n      listAllByBuilding: function(buildingId) {\n        return $http.get(appConfig.apiUrl + '/buildings/' + buildingId + '/comments').then(function(response) {\n          return response.data;\n        });\n      },\n\n      createComment: function(buildingId, commentData) {\n        return $http.post(appConfig.apiUrl + '/buildings/' + buildingId + '/comments', commentData).then(function(response) {\n          return response.data;\n        });\n      }\n    });\n  }]);\n\n} (angular.module('festima')));\n\nangular.module('festima')\n  .factory('buildingsManager', ['$http', '$q', 'appConfig', 'Building', 'usersManager', 'dictionaries', function($http, $q, appConfig, Building, usersManager, dictionaries) {\n  var buildingsManager = {\n    _pool: {},\n    _retrieveInstance: function(id, data) {\n      var instance = this._pool[id];\n\n      if (instance) {\n        instance.setData(data);\n      } else {\n        instance = new Building(data);\n        this._pool[id] = instance;\n      }\n\n      return instance;\n    },\n    _search: function(id) {\n      return this._pool[id];\n    },\n    _load: function(id, deferred) {\n      var scope = this;\n\n      $http.get(appConfig.apiUrl + '/buildings/' + id)\n        .success(function(data) {\n          var itemData = data;\n          var item = scope._retrieveInstance(itemData.id, itemData);\n\n          deferred.resolve(item);\n        })\n        .error(function() {\n          deferred.reject();\n        });\n    },\n\n    getBuilding: function(id) {\n      var deferred = $q.defer();\n      var item = this._search(id);\n      if (item) {\n        deferred.resolve(item);\n      } else {\n        if (id === undefined) {\n          deferred.resolve(this._retrieveInstance(null));\n        } else {\n          this._load(id, deferred);\n        }\n      }\n      return deferred.promise;\n    },\n\n    loadAllBuildings: function() {\n      var deferred = $q.defer();\n      var scope = this;\n      $http.get(appConfig.apiUrl + '/buildings')\n        .success(function(itemsArray) {\n          var items = [];\n          var item;\n\n            if (itemsArray.length == 0) {\n              deferred.resolve([]);\n              return;\n            }\n\n            itemsArray.forEach(function (itemData) {\n              item = scope._retrieveInstance(itemData.id, itemData);\n              items.push(item);\n              deferred.resolve(items);\n            });\n        })\n        .error(function() {\n          deferred.reject();\n        });\n      return deferred.promise;\n    },\n\n    setBuilding: function(data) {\n      var scope = this;\n      var item = this._search(data.id);\n      if (item) {\n        item.setData(data);\n      } else {\n        item = scope._retrieveInstance(data);\n      }\n      return item;\n    }\n  };\n\n  return buildingsManager;\n}]);\n\n(function(app) {\n  'use strict';\n\n  app.service('buildings', ['$http', 'appConfig', function($http, appConfig) {\n    angular.extend(this, {\n      list: function(offset, limit, q) {\n        return $http.get(appConfig.apiUrl + '/buildings', {params: {offset: offset, max: limit, q: q}}).then(function(resp) {\n          return resp.data;\n        });\n      },\n\n      get: function(id) {\n        return $http.get(appConfig.apiUrl + '/buildings/' + id).then(function(response) {\n          return response.data;\n        });\n      },\n\n      update: function(building) {\n        building.contacts = []; // do not resave\n        return $http.put(appConfig.apiUrl + '/buildings/' + building.id, building).then(function(response) {\n          return response.data;\n        });\n      }\n    });\n  }]);\n\n}(angular.module('festima')));\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.factory('Buildings', ['$http', 'appConfig', function($http, appConfig) {\r\n    function Buildings(offset, limit) {\r\n      this.offset = offset;\r\n      this.limit = limit;\r\n    }\r\n\r\n    // Buildings.prototype = {\r\n    //   list: function() {\r\n    //     return $http.get(appConfig.apiUrl + '/buildings', {params: {offset: this.offset, limit: this.limit}}).then(function(resp) {\r\n    //       return resp.data;\r\n    //     });\r\n    //   }\r\n    // };\r\n\r\n    return Buildings;\r\n  }]);\r\n\r\n}(angular.module('festima')));\r\n\nangular.module('festima')\n  .factory('buildingDealersManager', ['$http', '$q', 'BuildingDealer', 'dealers', function ($http, $q, BuildingDealer, dealers) {\n\n    var buildingDealersManager = {\n      _pool: {},\n      _retrieveInstance: function (id, data) {\n        var instance = this._pool[id];\n\n        if (instance) {\n          instance.setData(data);\n        } else {\n          instance = new BuildingDealer(data);\n          if (id) {\n            this._pool[id] = instance;\n          } else {\n            var unsavedId = Math.min(-1, Math.min(Object.keys(this._pool)));\n            instance.id = unsavedId;\n            this._pool[unsavedId] = instance;\n          }\n\n        }\n\n        return instance;\n      },\n      _unsaved: function() {\n        var unsaved = [];\n        var scope = this;\n\n        Object.keys(this._pool).forEach(function(id) {\n          if (Number(id) < 0) {\n            unsaved.push(scope._pool[id]);\n          }\n        });\n\n        return unsaved;\n      },\n      _search: function (id) {\n        return this._pool[id];\n      },\n      _load: function (id, deferred) {\n        var scope = this;\n\n        $http.get('http://localhost:3000/api/buildingDealers/' + id)\n          .success(function (data) {\n            var item = scope._retrieveInstance(data.id, data);\n\n            $http.get('http://localhost:3000/api/dealers/' + data.dealerId).then(\n              function (response) {\n                item.dealer = response.data;\n              }\n            );\n\n            deferred.resolve(item);\n          })\n          .error(function () {\n            deferred.reject();\n          });\n      },\n\n      getBuildingDealer: function (id) {\n        var deferred = $q.defer();\n        var item = this._search(id);\n        if (item) {\n          deferred.resolve(item);\n        } else {\n          this._load(id, deferred);\n        }\n        return deferred.promise;\n      },\n      loadAllBuildingDealers: function (id) {\n        var deferred = $q.defer();\n        var scope = this;\n        $http.get('http://localhost:3000/api/buildingDealers', {params: {buildingId: id}})\n          .success(function (itemsArray) {\n            var items = [];\n            var map = {};\n            itemsArray.forEach(function (itemData) {\n              var item = scope._retrieveInstance(itemData.id, itemData);\n              items.push(item);\n              map[item.dealerId] = item;\n            });\n\n            return dealers.listByIds(Object.keys(map)).then(\n              function (response) {\n                var list = response.data;\n\n                list.forEach(function (item) {\n                  map[item.id].dealer = item;\n                });\n\n                deferred.resolve(items);\n              }\n            )\n          })\n          .error(function () {\n            deferred.reject();\n          });\n        return deferred.promise;\n      },\n      setBuildingDealer: function (data) {\n        var scope = this;\n        var item = this._search(data.id);\n        if (item) {\n          item.setData(data);\n        } else {\n          item = scope._retrieveInstance(null, data);\n        }\n        return item;\n      }\n    };\n\n    return buildingDealersManager;\n  }]);\n\n'use strict';\n\nangular.module('festima')\n  .service('buildingDealersService', function (dealers, positions) {\n\n      angular.extend(this, {\n\n        getDealersPositionsMap: function(buildingId) {\n          return positions.listAllByBuilding(buildingId).then(function(response) {\n            var dealerPositionsMap = {};\n            var buildingPositions = response.data;\n\n            return dealers.mapAll().then(function(mapOfDealers) {\n\n              var dealerId;\n              for (var i = 0; i < buildingPositions.length; i++) {\n                dealerId = buildingPositions[i].dealer.id;\n\n                if (angular.isUndefined(dealerPositionsMap[dealerId])) {\n                  dealerPositionsMap[dealerId] = {name: mapOfDealers[dealerId].title, positions: []};\n                }\n\n                dealerPositionsMap[dealerId].positions.push(buildingPositions[i]);\n              }\n\n              return dealerPositionsMap;\n            });\n          })\n        },\n\n        saveDealerPositions: function(dealerId, positionsList) {\n          var position;\n\n          for (var i = 0; i < positionsList.length; i++) {\n            position = positionsList[i];\n\n            if (position.removed === true) {\n              positions.delete(position.id).then(function () {\n                var index = positionsList.map(function (e) {\n                  return e.id;\n                }).indexOf(position.id);\n                positionsList.splice(index, 1);\n              });\n            }\n\n            if (angular.isUndefined(position.buildingId)) {\n              position.buildingId = position.building.id;\n              delete position['building'];\n            }\n\n            if (angular.isUndefined(position.id)) {\n              positions.createPosition(position).then(function (savedPosition) {\n                position.id = savedPosition.id;\n                console.log('Saved position ' + position.id);\n              });\n            }\n\n          }\n\n          // return changedPositions;\n        },\n\n      });\n    }\n  );\n\nangular.module('festima').factory('BuildingDealer', ['$http', function($http) {\n  function BuildingDealer(data) {\n    if (data) {\n      this.setData(data);\n    }\n    // Some other initializations related to book\n  };\n  BuildingDealer.prototype = {\n    setData: function(data) {\n      angular.extend(this, data);\n    },\n    save: function() {\n      if (this.id === undefined) {\n        $http.post('http://localhost:3000/api/buildingDealers', this);\n        $http.get('http://localhost:3000/api/buildingDealers').then(\n          function(response) {\n            angular.extend(this, response.data);\n          }\n        )\n      } else {\n        this.update();\n      }\n    },\n    delete: function() {\n      $http.delete('http://localhost:3000/api/buildingDealers/' + id);\n    },\n    update: function() {\n      $http.put('http://localhost:3000/api/buildingDealers/' + id, this);\n    },\n    // getImageUrl: function(width, height) {\n    //   return 'our/image/service/' + this.book.id + '/width/height';\n    // },\n    // isAvailable: function() {\n    //   if (!this.book.stores || this.book.stores.length === 0) {\n    //     return false;\n    //   }\n    //   return this.book.stores.some(function(store) {\n    //     return store.quantity > 0;\n    //   });\n    // }\n  };\n  return BuildingDealer;\n}]);\n\n'use strict';\n\nangular.module('festima')\n  .controller('BuildingShowController', function ($stateParams, toastr, buildingsManager, buildings, maps, comments, contacts) {\n    var id = $stateParams.buildingId;\n    var vm = this;\n\n    vm.contacts = [];\n    vm.comments = [];\n    loadComments();\n\n    function loadComments() {\n      comments.listAllByBuilding(id).then(function(comments) {\n        vm.comments = comments;\n      });\n    }\n\n    function addNewComment(text) {\n      comments.createComment(id, {text: text}).then(function(newComment) {\n        toastr.success('Комментарий добавлен.');\n        loadComments();\n      });\n    }\n\n    vm.addComment = addNewComment;\n\n    buildings.get(id).then(function (building) {\n      vm.building = building;\n      vm.contacts = vm.building.contacts;\n\n      DG.then(function () {\n          var map, point, lat, lng, marker;\n\n          var latLng = maps.centroidToLatlng(vm.building.location);\n          lat = latLng[0];\n          lng = latLng[1];\n\n          map = DG.map('map', {\n            center: latLng,\n            zoom: 16\n          });\n\n          DG.marker(latLng).addTo(map).bindPopup('Вы кликнули по мне!');\n\n\n\n          // DG.ajax({\n          //   url: 'http://catalog.api.2gis.ru/geo/search',\n          //   data: {\n          //     key: 'ruczoy1743',\n          //     version: 1.3,\n          //     q: 'Москва, Красная площадь, 2'\n          //   },\n          //   type: 'GET',\n          //   success: function(data) {\n          //     if (typeof marker !== 'undefined') {\n          //       map.removeLayer(marker);\n          //     }\n          //\n          //     // считываем строку в WKT-формате и возвращаем объект Point\n          //     point = DG.Wkt.toPoints(data.result[0].centroid);\n          //\n          //     // извлекаем координаты для маркера\n          //     lng = point[0];\n          //     lat = point[1];\n          //\n          //     // создаем и добавляем маркер на карту\n          //     marker = DG.marker([lat, lng]);\n          //     map.addLayer(marker);\n          //\n          //     // центрируем карту в координаты маркера\n          //     map.panTo([lat, lng]);\n          //   },\n          //   error: function(error) {\n          //     console.log(error);\n          //   }\n          // });\n        });\n      }\n    );\n  }\n);\n\nangular.module('festima').factory('Building', ['$http', 'appConfig', function($http, appConfig) {\n\n  function Building(data) {\n    if (data) {\n      this.setData(data);\n    }\n    // some init\n  };\n  Building.prototype = {\n    setData: function(data) {\n      angular.extend(this, data);\n    },\n    save: function() {\n      return $http.post(appConfig.apiUrl + '/buildings', this).then(function(resp) {\n        return resp.data;\n      });\n    },\n    delete: function() {\n      $http.delete(appConfig.apiUrl + '/buildings/' + this.id);\n    },\n    update: function() {\n      return $http.put(appConfig.apiUrl + '/buildings/' + this.id, this);\n    },\n  };\n  return Building;\n}]);\n\n(function(app) {\n  'use strict';\n\n  app.controller('BuildingListController', function ($scope, buildings) {\n    var vm = this;\n\n    vm.filtersOpen = false;\n\n    vm.buildings = [];\n    vm.currentPage = 1;\n    vm.itemsPerPage = 10;\n\n    function loadBuildings(q) {\n      buildings.list((vm.currentPage - 1) * vm.itemsPerPage, vm.itemsPerPage, q).then(function(result) {\n        vm.buildings = result.items;\n        vm.totalItems = result.total;\n      });\n    }\n\n    vm.pageChanged = function() {\n      loadBuildings();\n    };\n\n    vm.search = function(q) {\n      vm.q = q;\n      console.log(\"Searched for: \", q);\n      loadBuildings(q);\n    };\n\n    vm.getBuildingDealers = function(building) {\n      return building.dealers.map(function(d) {return d.title;}).join(', ');\n    };\n\n    vm.pageChanged();\n  });\n\n  app.directive('convertToNumber', function() {\n    return {\n      require: 'ngModel',\n      link: function(scope, element, attrs, ngModel) {\n        ngModel.$parsers.push(function(val) {\n          return parseInt(val, 10);\n        });\n        ngModel.$formatters.push(function(val) {\n          return '' + val;\n        });\n      }\n    };\n  });\n\n}(angular.module('festima')));\n\n\n'use strict';\n\nangular.module('festima')\n  .controller('BuildingEditController', function ($stateParams, $location, toastr, buildingsManager, buildings, buildingDealersService, contacts) {\n    var vm = this;\n\n    vm.buildingId = $stateParams.buildingId;\n\n    // buildingsManager.getBuilding(vm.buildingId).then(\n    buildings.get(vm.buildingId).then(\n      function (building) {\n        vm.building = building;\n        // angular.copy(vm.building.contacts, vm.contacts);\n        // vm.building.contacts = []; // do not resave un update\n        vm.contacts = vm.building.contacts;\n      },\n      function () {\n        toastr.info('Объект не найден');\n        $location.url('/building/list');\n      }\n    );\n\n    buildingDealersService.getDealersPositionsMap(vm.buildingId).then(function (mapOfDealersPositions) {\n      vm.dealersPositionsMap = mapOfDealersPositions;\n    });\n\n    vm.addDealerPosition = function (dealerId, position) {\n      vm.dealersPositionsMap[dealerId].positions.push(position);\n    };\n\n    vm.removeDealerPosition = function (dealerId, position) {\n      var dealerPositions = vm.dealersPositionsMap[dealerId].positions;\n\n      if (position.id === undefined) {\n        var index = dealerPositions.indexOf(position);\n        if (index !== -1) {\n          dealerPositions.splice(index, 1);\n        }\n      } else {\n        position.removed = true;\n      }\n    };\n\n    vm.addDealer = function (dealer) {\n      if (!vm.isAddedDealer(dealer)) {\n        vm.dealersPositionsMap[dealer.id] = {name: dealer.name, positions: []};\n      }\n    };\n\n    vm.isAddedDealer = function (dealer) {\n      var index = Object.keys(vm.dealersPositionsMap).indexOf(String(dealer.id));\n\n      return index >= 0;\n    };\n\n    vm.saveChanges = function () {\n      updateBuildingContacts(vm.contacts);\n\n      // vm.building.update().then(function(response) {\n      buildings.update(vm.building).then(function(response) {\n        $location.path('/building/show/' + vm.building.id);\n      });\n\n      for (var dealerId in vm.dealersPositionsMap) {\n        buildingDealersService.saveDealerPositions(dealerId, vm.dealersPositionsMap[dealerId].positions);\n      }\n    };\n\n    vm.onSelectAddress = function(address) {\n      vm.building.address = address.full_name;\n      vm.building.location = address.geometry.centroid;\n    };\n\n    vm.contacts = [];\n\n    function addContact(newContact) {\n      vm.contacts.push({contact: {title: newContact.contactName}, info: newContact.info, building: {id: vm.buildingId}, contactId: newContact.contactId});\n    }\n\n    function removeContact(contact) {\n      if (contact.id === undefined) {\n        var index = vm.contacts.indexOf(contact);\n        if (index !== -1) {\n          vm.contacts.splice(index, 1);\n        }\n      } else {\n        contact.removed = true;\n      }\n    }\n\n    vm.addContact = addContact;\n    vm.removeContact = removeContact;\n\n    function updateBuildingContacts(contactList) {\n      var contact;\n\n      if (_.isEmpty(contactList)) {\n        return;\n      }\n\n      for(var i=0; i<contactList.length; i++) {\n        contact = contactList[i];\n\n        if (contact.removed === true) {\n          contacts.delete(contact);\n        }\n\n        if (contact.id === undefined) {\n          contacts.saveContact(contact);\n        }\n      }\n    }\n  }\n);\n\n'use strict';\n\nangular.module('festima')\n  .controller('BuildingCreateController', function($location, Building, toastr) {\n    var vm = this;\n\n    vm.building = new Building();\n\n    vm.saveChanges = function () {\n      vm.building.save().then(function (building) {\n        vm.buildingId = building.id;\n        vm.building = building;\n        $location.path('/building/show/' + vm.building.id);\n      });\n\n      toastr.success('Новый объект \"' + vm.building.name + '\" добавлен!');\n    };\n\n    vm.onSelectAddress = function(address) {\n      vm.addressObject = address;\n      vm.building.address = address.full_name;\n      vm.building.location = address.geometry.centroid;\n    };\n  }\n);\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.service('addresses', function($http, appConfig) {\r\n\r\n    angular.extend(this, {\r\n      listWithinRadius: function(latlng, radius) {\r\n\r\n        return $http.get(appConfig.apiUrl + '/locations', {params: {latlng: latlng, radius: radius}}).then(\r\n          function(response) {\r\n            return response.data;\r\n          }\r\n        );\r\n      }\r\n\r\n    });\r\n  });\r\n}) (angular.module('festima'));\r\n\n(function(app) {\n  'use strict';\n\n  app.controller('AddressListController', function($q, $location, $rootScope, _, maps, addresses) {\n    var vm = this;\n\n    vm.buildings = [];\n\n    function findNearbyBuildings(address) {\n      var latLng;\n      var buildingsPromise;\n\n      if (address) {\n        latLng = maps.centroidToLatlng(address.geometry.centroid);\n        buildingsPromise = addresses.listWithinRadius(latLng, 1000);\n      } else {\n        buildingsPromise = addresses.listWithinRadius();\n      }\n\n      return buildingsPromise;\n    }\n\n    function positionBuildingsOnMap(buildings, map) {\n      buildings.forEach(function(building) {\n        var latLng = maps.centroidToLatlng(building.location);\n\n        var marker = DG.marker(latLng, {\n          label: building.name\n        }).addTo(map);\n\n        marker['buildingId'] = building.id;\n        marker['buildingName'] = building.name;\n\n        marker.on('dblclick', function(e) {\n          $rootScope.$apply( function(){$location.path('/building/show/' + e.target.buildingId); } );\n        });\n      })\n    }\n\n    DG.then(function() {\n      var mapPromise = maps.initMap();\n      var buildingsPromise = findNearbyBuildings();\n\n      $q.all({map: mapPromise, buildings: buildingsPromise}).then(function(results) {\n        vm.map = results.map;\n        vm.buildings = results.buildings;\n\n        positionBuildingsOnMap(results.buildings, results.map);\n      });\n    });\n\n    vm.onSelectAddress = function(item) {\n      var latLng = maps.centroidToLatlng(item.geometry.centroid);\n\n      vm.addressObject = item;\n\n      vm.map.setZoom(maps.detailedZoom);\n      vm.map.panTo(latLng);\n    };\n  });\n\n}) (angular.module('festima'));\n\n(function() {\n  'use strict';\n\n  angular\n    .module('festima')\n    .run(runBlock)\n    .run(['$rootScope', '$window', 'OAuth', function($rootScope, $window, OAuth) {\n      $rootScope.$on('oauth:error', function(event, rejection) {\n        // Ignore `invalid_grant` error - should be catched on `LoginController`.\n        if ('invalid_grant' === rejection.data.error) {\n          return;\n        }\n\n        // Refresh token when a `invalid_token` error occurs.\n        if ('invalid_token' === rejection.data.error) {\n          return OAuth.getRefreshToken();\n        }\n\n        // Redirect to `/login` with the `error_reason`.\n        return $window.location.href = '/login?error_reason=' + rejection.data.error;\n      });\n    }]);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('festima')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n\n    $stateProvider\n      .state('private',{\n        url: '',\n        abstract: true,\n        views: {\n          app: {templateUrl: 'app/layouts/private-layout.html'}\n        },\n        resolve: {\n          loggedin: function(session) { return session.checkLoggedIn(); }\n        }\n      })\n      .state(\"private.logout\", {\n        url: \"/logout\",\n        resolve: {\n          loggedout: function(session) { return session.logout(); }\n        }\n      })\n      .state(\"private.main\", {\n        url: \"/\",\n        views: {\n          'container@private': { templateUrl: \"app/main/main.html\", controller: 'MainController', controllerAs: 'main' }\n        }\n      })\n      .state(\"private.buildinglist\", {\n        url: \"/building/list\",\n        views: {\n          'container@private': {templateUrl: 'app/building/building-list.html', controller: 'BuildingListController', controllerAs: 'vm'}\n        }\n      })\n      .state(\"private.buildingshow\", {\n        url: \"/building/show/:buildingId\",\n        views: {\n          'container@private': { templateUrl: 'app/building/building-show.html', controller: 'BuildingShowController', controllerAs: 'buildingVm' }\n        }\n      })\n      .state(\"private.buildingedit\", {\n        url: \"/building/edit/:buildingId\",\n        views: {\n          'container@private': { templateUrl: 'app/building/building-edit.html', controller: 'BuildingEditController', controllerAs: 'vm' }\n        }\n      })\n      .state(\"private.buildingcreate\", {\n        url: \"/building/create\",\n        views: {\n          'container@private': { templateUrl: 'app/building/building-create.html', controller: 'BuildingCreateController', controllerAs: 'vm' }\n        }\n      })\n      .state(\"private.addresslist\", {\n        url: \"/address/list\",\n        views: {\n          'container@private': { templateUrl: 'app/address/address-list.html', controller: 'AddressListController', controllerAs: 'vm' }\n        }\n      })\n      .state(\"private.dictionarieslist\", {\n        url: \"/dictionaries/list\",\n        views: {\n          'container@private': { templateUrl: 'app/dictionary/dictionary-list.html', controller: 'DictionaryListController', controllerAs: 'vm' }\n        }\n      })\n      .state(\"private.dictionaryshow\", {\n        url: \"/dictionaries/:key\",\n        views: {\n          'container@private': { templateUrl: 'app/dictionary/dictionary-show.html', controller: 'DictionaryShowController', controllerAs: 'vm' }\n        }\n      })\n      .state(\"public\", {\n        url: '',\n        abstract: true,\n        views: {\n          app: {templateUrl: 'app/layouts/public-layout.html'}\n        }\n      })\n      .state(\"public.login\", {\n        url: \"/login\",\n        views: {\n          'container@public': {templateUrl: \"app/login/login.html\", controller: \"LoginController\", controllerAs: 'vm'}\n        },\n        resolve: {\n          skipLoggedIn: function(session) { return session.skipLoggedIn(); }\n        }\n      })\n      .state(\"public.about\", {\n        url: \"/about\",\n        views: {\n          'container@public': {templateUrl: 'app/main/about.html', controller: 'AboutController', controllerAs: 'about'}\n        }\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('festima')\r\n    .constant('malarkey', malarkey)\r\n    .constant('moment', moment)\r\n    .constant('_', window._)\r\n    .constant('appConfig', {\r\n      'apiUrl': 'http://138.201.116.95:8080/api'\r\n      // 'apiUrl': 'http://localhost:8080/api'\r\n    });\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('festima')\r\n    .config(config)\r\n    .config(['OAuthProvider', function(OAuthProvider) {\r\n      OAuthProvider.configure({\r\n        grantPath: '/oauth/token',\r\n        revokePath: '/oauth/revoke',\r\n        // baseUrl: 'http://localhost:8080',\r\n        baseUrl: 'http://138.201.116.95:8080',\r\n        clientId: 'estima-client',\r\n        options: {\r\n          secure: false\r\n        }\r\n      });\r\n    }])\r\n    .config(['OAuthTokenProvider', function(OAuthTokenProvider) {\r\n      OAuthTokenProvider.configure({\r\n        name: 'token',\r\n        options: {\r\n          secure: false\r\n        }\r\n      });\r\n    }]).config(['$httpProvider', function($httpProvider) {\r\n      $httpProvider.interceptors.push([\r\n        '$injector',\r\n        function ($injector) {\r\n          return $injector.get('AuthInterceptor');\r\n        }\r\n      ]);\r\n    }]).factory('AuthInterceptor', authInterceptor);\r\n\r\n  /** @ngInject */\r\n  function config($logProvider, toastrConfig) {\r\n    // Enable log\r\n    $logProvider.debugEnabled(true);\r\n\r\n    // Set options third-party lib\r\n    toastrConfig.allowHtml = true;\r\n    toastrConfig.timeOut = 3000;\r\n    toastrConfig.positionClass = 'toast-top-right';\r\n    toastrConfig.preventDuplicates = false;\r\n    toastrConfig.progressBar = true;\r\n  }\r\n\r\n  function authInterceptor($q, $location) {\r\n    return {\r\n      response: function (response) {\r\n        // do something on success\r\n        return response;\r\n      },\r\n      responseError: function (response) {\r\n        if (response.status === 401) {\r\n          $location.url('/login');\r\n        }\r\n        return $q.reject(response);\r\n      }\r\n    };\r\n  }\r\n\r\n})();\r\n\nangular.module(\"festima\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/building/building-create.html\",\"<div class=\\\"page-header\\\"><h1>Новый объект</h1></div><es-building-form building=\\\"vm.building\\\"><es-building-address building=\\\"vm.building\\\" on-address-selected=\\\"vm.onSelectAddress(address)\\\"></es-building-address></es-building-form><es-buildings-nearby address=\\\"vm.addressObject\\\"></es-buildings-nearby><hr><div class=\\\"panel panel-default\\\"><div class=\\\"panel-body\\\"><button class=\\\"btn btn-lg btn-success\\\" ng-click=\\\"vm.saveChanges()\\\">Создать</button> <a ng-href=\\\"#/building/list\\\" class=\\\"btn\\\">Отмена</a></div></div>\");\n$templateCache.put(\"app/building/building-edit.html\",\"<div class=\\\"page-header\\\"><h1 ng-bind=\\\"vm.building.name\\\">&nbsp;</h1></div><es-building-form building=\\\"vm.building\\\"><es-building-address building=\\\"vm.building\\\" on-address-selected=\\\"vm.onSelectAddress(address)\\\"></es-building-address></es-building-form><h2>Контакты</h2><div class=\\\"panel panel-default\\\"><div class=\\\"panel-heading\\\"><div class=\\\"row\\\"><es-add-contact on-contact-added=\\\"vm.addContact(newContact)\\\"></es-add-contact></div></div><div class=\\\"panel-body\\\"><es-building-contacts contacts=\\\"vm.contacts\\\" on-remove-contact=\\\"vm.removeContact(contact)\\\"></es-building-contacts></div></div><h2>Позиции</h2><div ng-repeat=\\\"(dealerId, dealerMap) in vm.dealersPositionsMap\\\"><es-dealer-positions positions=\\\"dealerMap.positions\\\" new-position=\\\"{building: vm.building, dealerId: dealerId}\\\" on-delete-position=\\\"vm.removeDealerPosition(dealerId, position)\\\" on-add-position=\\\"vm.addDealerPosition(dealerId, position)\\\"><h4 ng-bind=\\\"dealerMap.name\\\"></h4></es-dealer-positions></div><es-add-dealer-button on-add-dealer=\\\"vm.addDealer(dealer)\\\" on-check-added=\\\"vm.isAddedDealer(dealer)\\\"></es-add-dealer-button><hr><div class=\\\"panel panel-default\\\"><div class=\\\"panel-body\\\"><button class=\\\"btn btn-lg btn-success\\\" ng-click=\\\"vm.saveChanges()\\\">Сохранить изменения</button> <a ng-href=\\\"#/building/show/{{vm.building.id}}\\\" class=\\\"btn\\\">Отмена</a></div></div>\");\n$templateCache.put(\"app/building/building-list.html\",\"<div class=\\\"page-header\\\"><div class=\\\"btn-toolbar pull-right\\\"><button type=\\\"button\\\" class=\\\"btn btn-default\\\" uib-btn-checkbox=\\\"\\\" ng-model=\\\"vm.filtersOpen\\\"><i class=\\\"fa fa-cogs\\\"></i></button><div class=\\\"btn-group\\\"><a ng-href=\\\"#/building/create\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-plus-square\\\"></i> Добавить объект</a></div></div><h1 class=\\\"form-inline\\\">Список объектов <small ng-bind=\\\"vm.totalItems\\\"></small> <small class=\\\"pull-right\\\"><es-search on-search-changed=\\\"vm.search(q)\\\"></es-search></small></h1></div><div uib-collapse=\\\"!vm.filtersOpen\\\"><div class=\\\"well well-lg\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-6 form-inline\\\"><div class=\\\"form-group\\\"><label for=\\\"itemsNumber\\\">На странице</label><select ng-model=\\\"vm.itemsPerPage\\\" class=\\\"form-control\\\" id=\\\"itemsNumber\\\" convert-to-number=\\\"\\\" ng-change=\\\"vm.pageChanged()\\\"><option value=\\\"10\\\">10</option><option value=\\\"20\\\">20</option><option value=\\\"50\\\">50</option><option value=\\\"100\\\">100</option></select></div></div></div></div></div><table class=\\\"table table-bordered table-striped\\\"><thead><tr><th class=\\\"col-md-3\\\">Название</th><th class=\\\"col-md-4\\\">Адрес</th><th class=\\\"col-md-2\\\">Дилеры</th><th class=\\\"col-md-1\\\"><abbr title=\\\"Дата создания 1й позиции\\\">Создано</abbr></th><th class=\\\"col-md-1\\\"><abbr title=\\\"Дата обновления позиций\\\">Обновлено</abbr></th><th class=\\\"col-md-1\\\">Менеджер</th></tr></thead><tbody><tr ng-repeat=\\\"building in vm.buildings track by building.id\\\"><th scope=\\\"row\\\"><a href=\\\"#/building/show/{{::building.id}}\\\" style=\\\"font-weight: normal;\\\" ng-bind-html=\\\"building.name | highlight: vm.q\\\"></a></th><td><small ng-bind-html=\\\"building.address | highlight: vm.q\\\"></small></td><td>{{vm.getBuildingDealers(building)}}</td><td><small ng-bind=\\\"building.dateCreated | date: \\'dd.MM.yyyy HH:mm\\'\\\"></small></td><td><small ng-bind=\\\"building.lastUpdated | date : \\'dd.MM.yyyy HH:mm\\'\\\"></small></td><td ng-bind=\\\"building.author.name\\\"></td></tr></tbody></table><ul uib-pagination=\\\"\\\" total-items=\\\"vm.totalItems\\\" items-per-page=\\\"vm.itemsPerPage\\\" ng-model=\\\"vm.currentPage\\\" ng-change=\\\"vm.pageChanged()\\\"></ul>\");\n$templateCache.put(\"app/building/building-show.html\",\"<div class=\\\"page-header\\\"><div class=\\\"btn-toolbar pull-right\\\"><div class=\\\"btn-group\\\"><a href=\\\"#/building/edit/{{buildingVm.building.id}}\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-edit\\\"></i> Редактировать</a></div></div><h1 ng-bind=\\\"buildingVm.building.name\\\">&nbsp;</h1></div><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-6\\\"><div id=\\\"map\\\" style=\\\"width:500px; height:400px\\\"></div></div><div class=\\\"col-sm-12 col-md-6\\\"><address ng-bind=\\\"buildingVm.building.address\\\"></address><dl class=\\\"dl-horizontal no-margin pull-left\\\"><dt>Заказчик</dt><dd ng-bind=\\\"buildingVm.building.client.title\\\">&nbsp;</dd><dt>Проект</dt><dd ng-bind=\\\"buildingVm.building.project.title\\\">&nbsp;</dd><dt>Менеджер</dt><dd ng-bind=\\\"buildingVm.building.author.name\\\">&nbsp;</dd><dt ng-bind=\\\"contact.contact.dictionary.name\\\" ng-repeat-start=\\\"contact in buildingVm.contacts track by contact.id\\\">&nbsp;</dt><dd ng-bind=\\\"contact.contact.name\\\">&nbsp;</dd><dt>&nbsp;</dt><dd ng-bind=\\\"contact.info\\\" ng-repeat-end=\\\"\\\"></dd></dl></div></div><es-comments comments=\\\"buildingVm.comments\\\" on-add-comment=\\\"buildingVm.addComment(comment)\\\"></es-comments>\");\n$templateCache.put(\"app/address/address-list.html\",\"<div class=\\\"page-header\\\"><h1>Адреса</h1></div><es-address-input on-address-selected=\\\"vm.onSelectAddress(address)\\\"></es-address-input><br><div id=\\\"map\\\" style=\\\"width:100%; height:500px;\\\"></div><es-buildings-nearby address=\\\"vm.addressObject\\\"></es-buildings-nearby>\");\n$templateCache.put(\"app/dictionary/dictionary-list.html\",\"<div class=\\\"page-header\\\"><h1>Справочники</h1></div><table class=\\\"table table-bordered table-striped\\\"><thead><tr><th class=\\\"col-md-4\\\">Название</th><th class=\\\"col-md-8\\\"></th></tr></thead><tbody><tr ng-repeat=\\\"dictionary in vm.dictionaries\\\"><td><a href=\\\"#/dictionaries/{{::dictionary.key}}\\\" ng-bind=\\\"dictionary.name\\\"></a></td><td>hello</td></tr></tbody></table>\");\n$templateCache.put(\"app/dictionary/dictionary-show.html\",\"<div class=\\\"page-header\\\"><h1 ng-bind=\\\"vm.dictionary.name\\\"></h1></div><es-dictionary key=\\\"vm.key\\\"></es-dictionary>\");\n$templateCache.put(\"app/layouts/private-layout.html\",\"<div><acme-navbar creation-date=\\\"main.creationDate\\\"></acme-navbar></div><div ui-view=\\\"container\\\"></div>\");\n$templateCache.put(\"app/layouts/public-layout.html\",\"<div ui-view=\\\"container\\\"></div>\");\n$templateCache.put(\"app/login/login.html\",\"<div class=\\\"container\\\"><form class=\\\"form-signin\\\" name=\\\"vm.loginForm\\\" ng-submit=\\\"vm.login(vm.loginForm.$valid)\\\" novalidate=\\\"\\\"><h2 class=\\\"form-signin-heading\\\">Вход в систему</h2><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': vm.loginForm.email.$touched && vm.loginForm.email.$invalid }\\\"><label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email</label> <input type=\\\"email\\\" id=\\\"inputEmail\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" required=\\\"\\\" autofocus=\\\"\\\" ng-model=\\\"vm.email\\\" ng-click=\\\"$event.stopPropagation()\\\"><p ng-show=\\\"vm.loginForm.email.$invalid && vm.loginForm.email.$touched\\\" class=\\\"help-block\\\">Неправильный email.</p></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': vm.loginForm.password.$touched && vm.loginForm.password.$invalid }\\\"><label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Пароль</label> <input type=\\\"password\\\" id=\\\"inputPassword\\\" name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Пароль\\\" required=\\\"\\\" ng-model=\\\"vm.password\\\" ng-click=\\\"$event.stopPropagation()\\\"><div class=\\\"help-block\\\" ng-messages=\\\"vm.loginForm.password.$error\\\" ng-if=\\\"vm.loginForm.password.$invalid && vm.loginForm.password.$touched\\\"><p ng-message=\\\"minlength\\\">Your name is too short.</p><p ng-message=\\\"maxlength\\\">Your name is too long.</p><p ng-message=\\\"required\\\">Неверный пароль.</p></div></div><div class=\\\"form-group\\\"><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" value=\\\"remember-me\\\"> Запомнить меня</label></div></div><button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" ng-disabled=\\\"!vm.loginForm.$submitted && vm.loginForm.$invalid\\\">Войти</button></form></div>\");\n$templateCache.put(\"app/main/about.html\",\"<p>О системе</p>\");\n$templateCache.put(\"app/main/main.html\",\"<div class=\\\"jumbotron text-center\\\"><h1>Estima application</h1><p class=\\\"lead\\\"></p><button type=\\\"button\\\" class=\\\"btn btn-lg btn-success\\\" ng-click=\\\"main.showToastr()\\\">Уведомление</button><p></p></div><div class=\\\"row\\\"></div>\");\n$templateCache.put(\"app/components/addContact/add-contact.html\",\"<div class=\\\"col-sm-3\\\"><label class=\\\"sr-only\\\" for=\\\"contactType\\\">Тип контакта</label><select ng-model=\\\"addContactVm.newItem.contactType\\\" class=\\\"form-control\\\" id=\\\"contactType\\\"><option value=\\\"\\\" disabled=\\\"\\\" selected=\\\"\\\">Выбрать тип контакта...</option><option ng-repeat=\\\"option in addContactVm.contactTypes\\\" value=\\\"{{::option.key}}\\\">{{::option.name}}</option></select></div><div class=\\\"col-sm-3\\\"><label class=\\\"sr-only\\\" for=\\\"contactName\\\">Контакт</label><select class=\\\"form-control\\\" id=\\\"contactName\\\" ng-model=\\\"addContactVm.newItem.contactId\\\"><option value=\\\"\\\" disabled=\\\"\\\" selected=\\\"\\\">Выбрать контакт...</option><option ng-repeat=\\\"option in addContactVm.contacts\\\" value=\\\"{{::option.id}}\\\">{{::option.title}}</option></select></div><div class=\\\"col-sm-4\\\"><label class=\\\"sr-only\\\" for=\\\"contactInfo\\\">Информация</label> <textarea class=\\\"form-control\\\" id=\\\"contactInfo\\\" ng-model=\\\"addContactVm.newItem.info\\\" placeholder=\\\"Информация\\\"></textarea></div><div class=\\\"col-sm-2\\\"><button type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\" ng-click=\\\"addContactVm.addContact(addContactVm.newItem)\\\" ng-disabled=\\\"!addContactVm.newItem.contactId\\\">Добавить</button></div>\");\n$templateCache.put(\"app/components/addDealerButton/add-dealer-button.html\",\"<div class=\\\"input-group\\\"><es-dictionary-autocomplete key=\\\"dealers\\\" selected=\\\"addDealerVm.dealer\\\"></es-dictionary-autocomplete><div class=\\\"input-group-btn\\\"><button class=\\\"btn btn-primary\\\" ng-click=\\\"addDealerVm.addDealer()\\\" ng-disabled=\\\"!addDealerVm.dealer\\\">Добавить</button></div></div>\");\n$templateCache.put(\"app/components/addressInput/address-input.html\",\"<input type=\\\"text\\\" id=\\\"address\\\" ng-model=\\\"addressInputVm.asyncSelected\\\" placeholder=\\\"Адрес...\\\" class=\\\"form-control\\\" ng-model-options=\\\"{ debounce: { default: 500, blur: 100 } }\\\" uib-typeahead=\\\"address.hint.text for address in addressInputVm.getLocation($viewValue)\\\" typeahead-loading=\\\"loadingLocations\\\" typeahead-no-results=\\\"noResults\\\" typeahead-on-select=\\\"addressInputVm.onSelect($item, $model, $label)\\\"> <i ng-show=\\\"loadingLocations\\\" class=\\\"glyphicon glyphicon-refresh\\\"></i><div ng-show=\\\"noResults\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i> No Results Found</div>\");\n$templateCache.put(\"app/components/buildingAddress/building-address.html\",\"<input type=\\\"text\\\" id=\\\"address\\\" ng-model=\\\"addressVm.asyncSelected\\\" placeholder=\\\"Адрес объекта...\\\" class=\\\"form-control\\\" ng-model-options=\\\"{ debounce: { default: 500, blur: 100 } }\\\" uib-typeahead=\\\"address.hint.text for address in addressVm.getLocation($viewValue)\\\" typeahead-loading=\\\"loadingLocations\\\" typeahead-no-results=\\\"noResults\\\" typeahead-on-select=\\\"addressVm.onSelect($item, $model, $label)\\\"> <i ng-show=\\\"loadingLocations\\\" class=\\\"glyphicon glyphicon-refresh\\\"></i><div ng-show=\\\"noResults\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i> No Results Found</div><br><div id=\\\"map\\\" style=\\\"width:500px; height:400px\\\"></div>\");\n$templateCache.put(\"app/components/buildingContacts/building-contacts.html\",\"<table class=\\\"table table-striped table-condensed table-vcenter\\\"><tbody><tr ng-repeat-start=\\\"contact in buildingContactsVm.contacts | notRemoved:contact\\\" ng-repeat-end=\\\"\\\"><td class=\\\"col-md-4 text-center\\\" ng-bind=\\\"contact.contact.title\\\">&nbsp;</td><td class=\\\"col-md-6 text-center\\\" ng-bind=\\\"contact.info\\\">&nbsp;</td><td class=\\\"col-md-2 text-center\\\"><a class=\\\"btn text-danger\\\" ng-click=\\\"buildingContactsVm.removeContact(contact)\\\"><i class=\\\"fa fa-remove\\\"></i></a></td></tr></tbody></table>\");\n$templateCache.put(\"app/components/buildingForm/building-form.html\",\"<div class=\\\"well\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-6\\\"><div class=\\\"form-group\\\"><label for=\\\"name\\\">Название</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"buildingFormVm.building.name\\\" id=\\\"name\\\" placeholder=\\\"Название\\\"></div><div class=\\\"form-group\\\"><label>Заказчик</label><es-dictionary-autocomplete key=\\\"customers\\\" selected=\\\"buildingFormVm.building.client\\\"></es-dictionary-autocomplete></div><div class=\\\"form-group\\\"><label>Проектная организация</label><es-dictionary-autocomplete key=\\\"designers\\\" selected=\\\"buildingFormVm.building.project\\\"></es-dictionary-autocomplete></div><div class=\\\"form-group\\\"><label for=\\\"description\\\">Примечание</label> <textarea class=\\\"form-control\\\" rows=\\\"5\\\" ng-model=\\\"buildingFormVm.building.description\\\" id=\\\"description\\\" placeholder=\\\"Примечание\\\"></textarea></div></div><div class=\\\"col-sm-12 col-md-6\\\"><div class=\\\"form-group\\\"><label for=\\\"address\\\">Адрес</label><ng-transclude></ng-transclude></div></div></div></div>\");\n$templateCache.put(\"app/components/buildingsNearby/buildings-nearby.html\",\"<div ng-if=\\\"vm.buildings.length > 0\\\"><h2>Найдены объекты в радиусе 1 км</h2><div class=\\\"row\\\"></div><ul><li ng-repeat=\\\"building in vm.buildings\\\"><a href=\\\"#/building/show/{{::building.id}}\\\">{{building.name}} ({{building.address}})</a></li></ul></div><div ng-if=\\\"vm.buildings.length == 0\\\"><h2>Ничего не найдено в радиусе 1 км</h2></div>\");\n$templateCache.put(\"app/components/comment/comment.html\",\"<div class=\\\"well\\\"><div class=\\\"media\\\"><div class=\\\"media-body\\\"><h4 class=\\\"media-heading\\\">{{::commentVm.comment.author.name}} <small ng-bind=\\\"commentVm.comment.dateCreated | date: \\'dd.MM.yyyy HH:mm\\'\\\"></small></h4>{{::commentVm.comment.text}}</div></div></div>\");\n$templateCache.put(\"app/components/comments/comments.html\",\"<h2>Комментарии <small ng-bind=\\\"commentsVm.comments.length\\\"></small></h2><div class=\\\"well\\\"><h4>Новый комментарий:</h4><form role=\\\"form\\\"><div class=\\\"form-group\\\"><textarea class=\\\"form-control\\\" rows=\\\"3\\\" ng-model=\\\"commentsVm.newComment.text\\\"></textarea></div><button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"commentsVm.addNewComment()\\\">Добавить</button></form></div><hr><div ng-repeat=\\\"comment in commentsVm.comments\\\"><es-comment comment=\\\"comment\\\"></es-comment></div>\");\n$templateCache.put(\"app/components/dealerPositions/dealer-positions.html\",\"<div class=\\\"panel panel-default\\\"><div class=\\\"panel-heading\\\"><ng-transclude></ng-transclude></div><div class=\\\"panel-body\\\"><table class=\\\"table table-striped table-condensed table-vcenter\\\"><thead><tr><th class=\\\"col-md-2 text-center\\\">Контакт</th><th class=\\\"col-md-1 text-center\\\">Тип</th><th class=\\\"col-md-2 text-center\\\">Спецификация</th><th class=\\\"col-md-1 text-center\\\">Цена</th><th class=\\\"col-md-1 text-center\\\">Сделка</th><th class=\\\"col-md-1 text-center\\\">Статус</th><th class=\\\"col-md-1 text-center\\\">Отгрузка</th><th class=\\\"col-md-2 text-center\\\"></th></tr></thead><tbody><tr ng-form=\\\"\\\" class=\\\"table-bordered\\\"><td class=\\\"col-md-2\\\"><input class=\\\"col-md-12\\\" type=\\\"text\\\" ng-model=\\\"positionsVm.inputPosition.contactName\\\"></td><td class=\\\"col-md-1\\\"><input class=\\\"col-md-12\\\" type=\\\"text\\\" ng-model=\\\"positionsVm.inputPosition.type\\\"></td><td class=\\\"col-md-2\\\"><input class=\\\"col-md-12\\\" type=\\\"text\\\" ng-model=\\\"positionsVm.inputPosition.spec\\\"></td><td class=\\\"col-md-1\\\"><input class=\\\"col-md-12\\\" type=\\\"text\\\" ng-model=\\\"positionsVm.inputPosition.grossPrice\\\"></td><td class=\\\"col-md-1\\\"><input class=\\\"col-md-12\\\" type=\\\"text\\\" ng-model=\\\"positionsVm.inputPosition.total\\\"></td><td class=\\\"col-md-1\\\"><input class=\\\"col-md-12\\\" type=\\\"text\\\" ng-model=\\\"positionsVm.inputPosition.status\\\"></td><td class=\\\"col-md-1\\\"><input class=\\\"col-md-12\\\" type=\\\"text\\\" ng-model=\\\"positionsVm.inputPosition.dateShipped\\\"></td><td class=\\\"col-md-2\\\"><input class=\\\"col-md-12 btn btn-success\\\" type=\\\"submit\\\" value=\\\"Добавить\\\" ng-click=\\\"positionsVm.addNewPosition()\\\"></td></tr><tr ng-repeat-start=\\\"position in positionsVm.positions | filter:positionsVm.activePosition\\\" ng-repeat-end=\\\"\\\"><td class=\\\"col-md-2 text-center\\\" ng-bind=\\\"position.contactName\\\">&nbsp;</td><td class=\\\"col-md-1 text-center\\\" ng-bind=\\\"position.type\\\">&nbsp;</td><td class=\\\"col-md-2 text-center\\\" ng-bind=\\\"position.spec\\\">&nbsp;</td><td class=\\\"col-md-1 text-center\\\" ng-bind=\\\"position.grossPrice\\\">&nbsp;</td><td class=\\\"col-md-1 text-center\\\" ng-bind=\\\"position.total\\\">&nbsp;</td><td class=\\\"col-md-1 text-center\\\" ng-bind=\\\"position.status\\\">&nbsp;</td><td class=\\\"col-md-1 text-center\\\" ng-bind=\\\"position.dateShipped\\\">&nbsp;</td><td class=\\\"col-md-2 text-center\\\"><messages-button position=\\\"position\\\"></messages-button><a class=\\\"btn text-warning\\\"><i class=\\\"fa fa-pencil\\\"></i></a> <a class=\\\"btn text-danger\\\" ng-click=\\\"positionsVm.removePosition(position)\\\"><i class=\\\"fa fa-remove\\\"></i></a></td></tr></tbody></table></div></div>\");\n$templateCache.put(\"app/components/dictionary/dictionary.html\",\"<div class=\\\"container-fluid\\\"><div class=\\\"panel panel-default\\\"><div class=\\\"panel-body\\\"><form class=\\\"form-inline\\\"><div class=\\\"form-group\\\"><label class=\\\"sr-only\\\" for=\\\"title\\\">Название</label> <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" ng-model=\\\"dictionaryVm.newItem.title\\\" placeholder=\\\"Название\\\"></div><div class=\\\"form-group\\\"><label class=\\\"sr-only\\\" for=\\\"contactName\\\">Контактное лицо</label> <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contactName\\\" ng-model=\\\"dictionaryVm.newItem.contactName\\\" placeholder=\\\"Контактное лицо\\\"></div><div class=\\\"form-group\\\"><label class=\\\"sr-only\\\" for=\\\"contactPosition\\\">Должность</label> <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contactPosition\\\" ng-model=\\\"dictionaryVm.newItem.contactPosition\\\" placeholder=\\\"Должность\\\"></div><div class=\\\"form-group\\\"><label class=\\\"sr-only\\\" for=\\\"phone\\\">Телефон</label> <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone\\\" ng-model=\\\"dictionaryVm.newItem.phone\\\" placeholder=\\\"Телефон\\\"></div><button type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\" ng-click=\\\"dictionaryVm.add(dictionaryVm.newItem)\\\">Добавить</button></form></div></div><table class=\\\"table table-bordered table-striped\\\"><thead><tr><th class=\\\"col-md-3\\\">Название</th><th class=\\\"col-md-3\\\">Контактное лицо</th><th class=\\\"col-md-3\\\">Должность</th><th class=\\\"col-md-3\\\">Телефон</th></tr></thead><tbody><tr ng-repeat=\\\"item in dictionaryVm.items\\\"><td class=\\\"col-md-3\\\" ng-bind=\\\"item.title\\\"></td><td class=\\\"col-md-3\\\" ng-bind=\\\"item.contactName\\\"></td><td class=\\\"col-md-3\\\" ng-bind=\\\"item.contactPosition\\\"></td><td class=\\\"col-md-3\\\" ng-bind=\\\"item.phone\\\"></td></tr></tbody></table><ul uib-pagination=\\\"\\\" total-items=\\\"dictionaryVm.totalItems\\\" items-per-page=\\\"dictionaryVm.itemsPerPage\\\" ng-model=\\\"dictionaryVm.currentPage\\\" ng-change=\\\"dictionaryVm.pageChanged()\\\"></ul></div>\");\n$templateCache.put(\"app/components/dictionaryAutocomplete/dictionary-autocomplete.html\",\"<ui-select ng-model=\\\"vm.selected\\\" theme=\\\"bootstrap\\\" ng-disabled=\\\"false\\\" reset-search-input=\\\"true\\\"><ui-select-match placeholder=\\\"Выбрать...\\\">{{$select.selected.title}}</ui-select-match><ui-select-choices repeat=\\\"item in vm.items track by $index\\\" refresh=\\\"vm.refreshItems($select.search)\\\" refresh-delay=\\\"0\\\"><div ng-bind-html=\\\"vm.trustAsHtml((item.title | highlight: $select.search))\\\"></div></ui-select-choices></ui-select>\");\n$templateCache.put(\"app/components/messagesButton/messages-button.html\",\"<button class=\\\"btn btn-default\\\" ng-click=\\\"messagesButtonVm.openMessages()\\\"><span class=\\\"fa fa-comments\\\"></span></button>\");\n$templateCache.put(\"app/components/messagesButton/messages-modal.html\",\"<div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" ng-click=\\\"messagesModalVm.cancel()\\\">&times;</button><h4 class=\\\"modal-title\\\">Заметки по позиции</h4></div><div class=\\\"modal-body\\\"><div class=\\\"form-group\\\"><div class=\\\"input-group\\\"><textarea class=\\\"form-control\\\" row=\\\"3\\\" placeholder=\\\"Новое сообщение\\\" ng-model=\\\"messagesModalVm.newMessage.text\\\"></textarea> <span class=\\\"input-group-addon btn btn-primary input-lg\\\" ng-click=\\\"messagesModalVm.addNewMessage()\\\">Добавить</span></div></div><div ng-repeat=\\\"message in messagesModalVm.messages | orderBy:\\'dateCreated\\':true\\\" class=\\\"media\\\"><div class=\\\"media-left\\\"></div><div class=\\\"media-body\\\"><h4 class=\\\"media-heading\\\"><span ng-bind=\\\"message.author.name\\\"></span> <small>{{::message.dateCreated | date: \\'dd.MM.yyyy HH:mm\\'}}</small></h4>{{::message.text}}</div></div></div><div class=\\\"modal-footer\\\"><button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" ng-click=\\\"messagesModalVm.cancel()\\\">Close</button> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" ng-click=\\\"messagesModalVm.ok()\\\">OK</button></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-static-top navbar-inverse\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><a class=\\\"navbar-brand\\\" href=\\\"#/\\\">Estima</a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-6\\\"><ul class=\\\"nav navbar-nav\\\"><li><a href=\\\"#/\\\" class=\\\"glyphicon glyphicon-home\\\"></a></li><li><a ng-href=\\\"#/building/list\\\">Объекты</a></li><li><a ng-href=\\\"#/address/list\\\">Адреса</a></li><li><a ng-href=\\\"#/dictionaries/list\\\">Справочники</a></li><li><a ng-href=\\\"#/about\\\">О системе</a></li></ul><ul class=\\\"nav navbar-nav navbar-right\\\"><li class=\\\"dropdown\\\" uib-dropdown=\\\"\\\"><a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" uib-dropdown-toggle=\\\"\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span ng-bind=\\\"vm.user.name\\\"></span> <span class=\\\"caret\\\"></span></a><ul class=\\\"dropdown-menu\\\" uib-dropdown-menu=\\\"\\\"><li><a href=\\\"#\\\">Личный кабинет</a></li><li role=\\\"separator\\\" class=\\\"divider\\\"></li><li><a href=\\\"#/logout\\\">Выход</a></li></ul></li></ul><span class=\\\"nav navbar-nav navbar-right\\\" style=\\\"padding-top: 10px;\\\"><spinner name=\\\"authSpinner\\\" img-src=\\\"assets/images/ajax-loader.gif\\\"></spinner></span></div></div></nav>\");\n$templateCache.put(\"app/components/search/search.html\",\"<input type=\\\"text\\\" placeholder=\\\"Поиск...\\\" class=\\\"form-control\\\" style=\\\"vertical-align: bottom;\\\" ng-model=\\\"searchVm.q\\\" ng-model-options=\\\"{ debounce: 1000 }\\\">\");}]);"],"sourceRoot":"/source/"}