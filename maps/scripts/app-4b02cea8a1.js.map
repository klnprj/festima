{"version":3,"sources":["scripts/app-4b02cea8a1.js"],"names":["angular","module","factory","$http","$q","appConfig","User","cachedPromises","usersManager","_pool","_retrieveInstance","id","data","instance","this","setData","_search","getUser","isUndefined","get","apiUrl","then","response","loadAllUsers","deferred","defer","scope","success","itemsArray","items","forEach","itemData","item","push","resolve","error","reject","promise","setUser","prototype","extend","save","post","delete","update","put","Message","messagesManager","_load","author","getMessage","loadAllMessages","positionId","params","length","setMessage","service","self","undefined","dgis","detailedZoom","overviewZoom","initMap","latLng","zoom","DG","map","center","geoclicker","showPhotos","showBooklet","suggestions","q","ajax","url","key","output","region_id","type","result","console","log","getById","fields","searchAddress","point","lng","lat","version","Wkt","toPoints","centroid","searchCoords","getMarker","marker","centroidToLatlng","wkt","latLngToWkt","search","app","saveContact","contact","building","resp","webDevTec","getTec","title","description","logo","SearchController","vm","Object","defineProperty","_q","set","value","onSearchChanged","component","templateUrl","bindings","controllerAs","controller","acmeNavbar","NavbarController","moment","session","profile","user","relativeDate","creationDate","fromNow","$inject","directive","restrict","bindToController","$scope","$uibModalInstance","position","messages","onNewMessage","ok","close","cancel","dismiss","addNewMessage","newMessage","$uibModal","$log","openMessages","modalInstance","open","animation","size","addMessage","selectedItem","info","Date","_message","msg","message","acmeMalarkey","malarkey","linkFunc","el","attr","watcher","typist","typeSpeed","deleteSpeed","pauseDelay","loop","postfix","addClass","extraValues","pause","$watch","contributors","contributor","login","$on","MalarkeyController","githubContributor","activate","getContributors","template","link","limit","getContributorsComplete","getContributorsFailed","toJson","apiHost","DictionaryAutocompleteLink","element","attrs","name","DictionaryAutocompleteController","$sce","dictionaries","trustAsHtml","refreshItems","itemsByKey","selected","DictionaryComponentController","newItem","currentPage","itemsPerPage","add","addItem","pageChanged","count","countItemsByKey","all","totalItems","DealerPositionsController","types","statuses","addNewPosition","newPosition","copy","inputPosition","onAddPosition","dealerId","removePosition","onDeletePosition","dealer","activePosition","removed","positions","transclude","CommentsController","newComment","addNewComment","onAddComment","comment","text","comments","CommentController","BuildingsNearbyController","maps","addresses","toastr","findNearbyBuildings","address","geometry","listWithinRadius","buildings","_","isEmpty","_address","newVal","BuildingFormController","dealers","buildingPositions","dealerList","_dealers","buildingDealersMap","dealersMap","loadPositions","buildingId","list1","i","savePositions","dealerMap","create1","index","e","indexOf","splice","addDealerPosition","removeDealerPosition","loadDealers","list","refreshDealers","addDealer","keys","BuildingContactsController","removeContact","onRemoveContact","contacts","setSelected","asyncSelected","latLng0","isDefined","location","addTo","on","latlng","removeLayer","attributes","buildingname","bindPopup","locationFullName","full_name","number","onAddressSelected","addLayer","panTo","getLocation","onSelect","model","label","hint","setZoom","AddressInputController","onCheckAdded","onAddDealer","findAllByQuery","AddContactController","initNewContact","_contactType","newValue","getContacts","getContactTypes","contactTypes","addContact","newContact","typeName","find","contactType","contactName","contactId","onContactAdded","MainController","$timeout","getWebDevTec","classAnimation","showToastr","awesomeThings","awesomeThing","rank","Math","random","$state","$rootScope","$cookies","OAuth","OAuthToken","loadCurrentUser","userId","currentUserPromise","credentials","options","getAccessToken","logout","remove","go","getUserId","isAuthenticated","checkLoggedIn","skipLoggedIn","spinnerService","username","email","password","loginForm","$setPristine","res","err","$setValidity","$stateParams","loadByKey","dictionary","listAll","offset","max","loadItem","UsersService","listAllByBuilding","createPosition","positionData","filter","mapAll","listByIds","ids","createComment","commentData","Building","buildingsManager","getBuilding","loadAllBuildings","setBuilding","authorId","Buildings","BuildingDealer","buildingDealersManager","unsavedId","min","_unsaved","unsaved","Number","getBuildingDealer","loadAllBuildingDealers","setBuildingDealer","getDealersPositionsMap","dealerPositionsMap","mapOfDealers","saveDealerPositions","positionsList","savedPosition","loadComments","addComment","users","loadUsers","usersList","loadBuildings","total","filtersOpen","getBuildingDealers","d","join","require","ngModel","$parsers","val","parseInt","$formatters","$location","buildingDealersService","updateBuildingContacts","contactList","promises","when","mapOfDealersPositions","dealersPositionsMap","dealerPositions","isAddedDealer","String","saveChanges","path","onSelectAddress","addressObject","radius","buildingsPromise","positionBuildingsOnMap","$apply","target","mapPromise","results","runBlock","debug","run","$window","event","toState","toParams","fromState","fromParams","preventDefault","rejection","getRefreshToken","href","routerConfig","$stateProvider","$urlRouterProvider","loadBuilding","state","abstract","views","loggedin","loggedout","container@private","container@public","otherwise","config","constant","window","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","authInterceptor","responseError","status","OAuthProvider","configure","grantPath","revokePath","baseUrl","clientId","secure","OAuthTokenProvider","$httpProvider","interceptors","$injector","$templateCache"],"mappings":"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","file":"scripts/app-4b02cea8a1.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('festima', ['ngMessages', 'ngAnimate', 'ngRoute', 'ui.router', 'ngAnimate', 'ngSanitize', 'ui.bootstrap', 'toastr', 'ui.select',\r\n      'angular-oauth2', 'angularSpinners']);\r\n\r\n})();\r\n\nangular.module('festima')\n  .factory('usersManager', ['$http', '$q', 'appConfig', 'User', function ($http, $q, appConfig, User) {\n    var cachedPromises = {};\n    var usersManager = {\n      _pool: {},\n      _retrieveInstance: function (id, data) {\n        var instance = this._pool[id];\n\n        if (instance) {\n          instance.setData(data);\n        } else {\n          instance = new User(data);\n          this._pool[id] = instance;\n        }\n\n        return instance;\n      },\n\n      _search: function (id) {\n        return this._pool[id];\n      },\n\n      getUser: function (id) {\n        if (angular.isUndefined(cachedPromises[id])) {\n          cachedPromises[id] = $http.get(appConfig.apiUrl + '/users/' + id).then(function(response) {\n              return response.data;\n            })\n        }\n\n        return cachedPromises[id];\n      },\n\n      loadAllUsers: function () {\n        var deferred = $q.defer();\n        var scope = this;\n        $http.get(appConfig.apiUrl + '/users')\n          .success(function (itemsArray) {\n            var items = [];\n            itemsArray.forEach(function (itemData) {\n              var item = scope._retrieveInstance(itemData.id, itemData);\n              items.push(item);\n            });\n\n            deferred.resolve(items);\n          })\n          .error(function () {\n            deferred.reject();\n          });\n        return deferred.promise;\n      },\n\n      setUser: function (data) {\n        var scope = this;\n        var item = this._search(data.id);\n        if (item) {\n          item.setData(data);\n        } else {\n          item = scope._retrieveInstance(data);\n        }\n        return item;\n      }\n    };\n\n    return usersManager;\n  }]);\n\nangular.module('festima')\n  .factory('User', ['$http', 'appConfig', function ($http, appConfig) {\n      function User(data) {\n        if (data) {\n          this.setData(data);\n        }\n        // some init\n      };\n\n      User.prototype = {\n        setData: function (data) {\n          angular.extend(this, data);\n        },\n        save: function () {\n          return $http.post(appConfig.apiUrl + '/users', this);\n        },\n        delete: function () {\n          $http.delete(appConfig.apiUrl + '/users/' + this.id);\n        },\n        update: function () {\n          $http.put(appConfig.apiUrl + '/users/' + this.id, this);\n        },\n      };\n      return User;\n    }]\n  );\n\nangular.module('festima')\n  .factory('messagesManager', ['$http', '$q', 'Message', 'usersManager', 'appConfig', function ($http, $q, Message, usersManager, appConfig) {\n    var messagesManager = {\n      _pool: {},\n      _retrieveInstance: function (id, data) {\n        var instance = this._pool[id];\n\n        if (instance) {\n          instance.setData(data);\n        } else {\n          instance = new Message(data);\n          this._pool[id] = instance;\n        }\n\n        return instance;\n      },\n      _search: function (id) {\n        return this._pool[id];\n      },\n      _load: function (id, deferred) {\n        var scope = this;\n\n        $http.get(appConfig.apiUrl + '/messages/' + id)\n          .success(function (data) {\n            var itemData = data;\n            var item;\n\n            usersManager.getUser(itemData.author.id).then(function(data) {\n              // delete itemData.authorId;\n              itemData.author = data;\n              item = scope._retrieveInstance(itemData.id, itemData);\n              deferred.resolve(item);\n            });\n          })\n          .error(function () {\n            deferred.reject();\n          });\n      },\n\n      getMessage: function (id) {\n        var deferred = $q.defer();\n        var item = this._search(id);\n        if (item) {\n          deferred.resolve(item);\n        } else {\n          this._load(id, deferred);\n        }\n        return deferred.promise;\n      },\n\n      loadAllMessages: function (positionId) {\n        var deferred = $q.defer();\n        var scope = this;\n        $http.get(appConfig.apiUrl + '/messages', {params: {positionId: positionId}})\n          .success(function (itemsArray) {\n            var items = [];\n            var item;\n\n            if (itemsArray.length == 0) {\n              deferred.resolve([]);\n              return;\n            }\n\n            itemsArray.forEach(function (itemData) {\n              usersManager.getUser(itemData.author.id).then(function(data) {\n                // delete itemData.authorId;\n                itemData.author = data;\n                item = scope._retrieveInstance(itemData.id, itemData);\n                items.push(item);\n              }).then(function() {\n                deferred.resolve(items);\n              });\n            });\n          })\n          .error(function () {\n            deferred.reject();\n          });\n        return deferred.promise;\n      },\n\n      setMessage: function (data) {\n        var scope = this;\n        var item = this._search(data.id);\n        if (item) {\n          item.setData(data);\n        } else {\n          item = scope._retrieveInstance(data);\n        }\n        return item;\n      }\n    };\n\n    return messagesManager;\n  }]);\n\nangular.module('festima')\n  .service('messages', function($http) {\n    angular.extend(this, {\n      // list: function(positionId) {\n        // return $http.get('http://localhost:3000/api/messages', {params: {positionId: positionId}});\n      // }\n    });\n  }\n);\n\nangular.module('festima')\n  .factory('Message', ['$http', '$q', 'appConfig', function ($http, $q, appConfig) {\n      function Message(data) {\n        if (data) {\n          this.setData(data);\n        }\n        // some init\n      };\n\n      Message.prototype = {\n        setData: function (data) {\n          angular.extend(this, data);\n        },\n        save: function () {\n          var deferred = $q.defer();\n          var self = this;\n\n          if (this.id === undefined) {\n            $http.post(appConfig.apiUrl + '/messages', this).then(\n              function(response) {\n                angular.extend(self, response.data);\n                deferred.resolve(self.id)\n              },\n              function(response) {\n                deferred.reject();\n              }\n            );\n          } else {\n            this.update();\n            deferred.resolve(this.id);\n          }\n\n          return deferred.promise;\n        },\n        delete: function () {\n          $http.delete(appConfig.apiUrl + '/messages/' + this.id);\n        },\n        update: function () {\n          $http.put(appConfig.apiUrl + '/messages/' + this.id, this);\n        },\n      };\n      return Message;\n    }]\n  );\n\n'use strict';\r\n\r\n(function() {\r\n  angular.module('festima')\r\n    .service('maps', function($q) {\r\n      var dgis;\r\n\r\n      angular.extend(this, {\r\n        dgis: dgis,\r\n\r\n        detailedZoom: 16,\r\n        overviewZoom: 9,\r\n\r\n        initMap: function (latLng) {\r\n          var deferred = $q.defer();\r\n          var zoom = this.detailedZoom;\r\n\r\n          if (angular.isUndefined(latLng)) {\r\n            latLng = [55.752142, 37.617067];\r\n            zoom = this.overviewZoom;\r\n          }\r\n\r\n          DG.then(function () {\r\n            dgis = DG;\r\n            var map = dgis.map('map', {\r\n              center: latLng,\r\n              zoom: zoom,\r\n              geoclicker: true,\r\n              showPhotos: false,\r\n              showBooklet: false\r\n            });\r\n\r\n            deferred.resolve(map);\r\n          }, function() {\r\n            deferred.reject();\r\n          });\r\n\r\n          return deferred.promise;\r\n        },\r\n\r\n        suggestions: function(q) {\r\n          var deferred = $q.defer();\r\n\r\n          dgis.ajax({\r\n            url: 'http://catalog.api.2gis.ru/2.0/suggest/list',\r\n            data: {\r\n              key: 'ruczoy1743',\r\n              output: 'json',\r\n              region_id: 32,\r\n              q: q\r\n            },\r\n            type: 'GET',\r\n            success: function(data) {\r\n              deferred.resolve(data.result.items);\r\n            },\r\n            error: function(error) {\r\n              console.log(error);\r\n              deferred.reject();\r\n            }\r\n          });\r\n\r\n          return deferred.promise;\r\n        },\r\n\r\n        getById: function(id) {\r\n          var deferred = $q.defer();\r\n\r\n          dgis.ajax({\r\n            url: 'http://catalog.api.2gis.ru/2.0/geo/get',\r\n            data: {\r\n              key: 'ruczoy1743',\r\n              id: id,\r\n              fields: 'items.geometry.centroid'\r\n            },\r\n            type: 'GET',\r\n            success: function(data) {\r\n              deferred.resolve(data.result.items[0]);\r\n            },\r\n            error: function(error) {\r\n              console.log(error);\r\n              deferred.reject();\r\n            }\r\n          });\r\n\r\n          return deferred.promise;\r\n        },\r\n\r\n        searchAddress: function (q) {\r\n          var point, lng, lat;\r\n          var deferred = $q.defer();\r\n\r\n          dgis.ajax({\r\n            url: 'http://catalog.api.2gis.ru/geo/search',\r\n            data: {\r\n              key: 'ruczoy1743',\r\n              version: 1.3,\r\n              q: q\r\n            },\r\n            type: 'GET',\r\n            success: function (data) {\r\n              // считываем строку в WKT-формате и возвращаем объект Point\r\n              point = dgis.Wkt.toPoints(data.result[0].centroid);\r\n\r\n              // извлекаем координаты для маркера\r\n              lng = point[0];\r\n              lat = point[1];\r\n\r\n              deferred.resolve([lat, lng]);\r\n            },\r\n            error: function (error) {\r\n              console.log(error);\r\n              deferred.reject();\r\n            }\r\n          });\r\n\r\n          return deferred.promise;\r\n        },\r\n\r\n        searchCoords: function (latLng) {\r\n          var deferred = $q.defer();\r\n\r\n          dgis.ajax({\r\n            url: 'http://catalog.api.2gis.ru/geo/search',\r\n            data: {\r\n              key: 'ruczoy1743',\r\n              version: 1.3,\r\n              q: latLng[1] + ',' + latLng[0]\r\n            },\r\n            success: function (data) {\r\n\r\n              deferred.resolve(data.result[0]);\r\n            },\r\n            error: function (error) {\r\n              console.log(error);\r\n              deferred.reject();\r\n            }\r\n          });\r\n\r\n          return deferred.promise;\r\n        },\r\n\r\n        getMarker: function(latLng) {\r\n          return dgis.marker(latLng);\r\n        },\r\n\r\n        centroidToLatlng: function(wkt) {\r\n          var point = DG.Wkt.toPoints(wkt);\r\n\r\n          return [point[1], point[0]];\r\n        },\r\n\r\n        latLngToWkt: function(latLng) {\r\n          return \"POINT(\" + latLng[1] + \" \" + latLng[0] + \")\";\r\n        },\r\n\r\n        search: function(q) {\r\n          var deferred = $q.defer();\r\n\r\n          dgis.ajax({\r\n            url: 'http://catalog.api.2gis.ru/2.0/geo/search',\r\n\r\n            data: {\r\n              key: 'ruewin2963',\r\n              q: q,\r\n              region_id: 32,\r\n              fields: 'hash,search_attributes,items.address,items.adm_div,items.geometry.centroid,items.geometry.selection,items.geometry.style,items.floors,items.group'\r\n            },\r\n            success: function (data) {\r\n\r\n              deferred.resolve(data.result.items);\r\n            },\r\n            error: function (error) {\r\n              console.log(error);\r\n              deferred.reject();\r\n            }\r\n          });\r\n\r\n          return deferred.promise;\r\n        }\r\n      });\r\n    }\r\n  );\r\n})();\r\n\n(function (app) {\n  'use strict';\n\n  app.service('contacts', ['$http', 'appConfig', function ($http, appConfig) {\n\n    angular.extend(this, {\n      saveContact: function (contact) {\n        return $http.post(appConfig.apiUrl + '/buildings/' + contact.building.id + '/contacts', contact).then(function (resp) {\n          return resp.data;\n        });\n      },\n\n      delete: function(contact) {\n        return $http.delete(appConfig.apiUrl + '/buildings/' + contact.building.id + '/contacts/' + contact.id).then(function(resp) {\n          return resp.data;\n        });\n      }\n    })\n  }]);\n\n}(angular.module('festima')));\n\n(function() {\n  'use strict';\n\n  angular\n      .module('festima')\n      .service('webDevTec', webDevTec);\n\n  /** @ngInject */\n  function webDevTec() {\n    var data = [\n      {\n        'title': 'AngularJS',\n        'url': 'https://angularjs.org/',\n        'description': 'HTML enhanced for web apps!',\n        'logo': 'angular.png'\n      },\n      {\n        'title': 'BrowserSync',\n        'url': 'http://browsersync.io/',\n        'description': 'Time-saving synchronised browser testing.',\n        'logo': 'browsersync.png'\n      },\n      {\n        'title': 'GulpJS',\n        'url': 'http://gulpjs.com/',\n        'description': 'The streaming build system.',\n        'logo': 'gulp.png'\n      },\n      {\n        'title': 'Jasmine',\n        'url': 'http://jasmine.github.io/',\n        'description': 'Behavior-Driven JavaScript.',\n        'logo': 'jasmine.png'\n      },\n      {\n        'title': 'Karma',\n        'url': 'http://karma-runner.github.io/',\n        'description': 'Spectacular Test Runner for JavaScript.',\n        'logo': 'karma.png'\n      },\n      {\n        'title': 'Protractor',\n        'url': 'https://github.com/angular/protractor',\n        'description': 'End to end test framework for AngularJS applications built on top of WebDriverJS.',\n        'logo': 'protractor.png'\n      },\n      {\n        'title': 'Bootstrap',\n        'url': 'http://getbootstrap.com/',\n        'description': 'Bootstrap is the most popular HTML, CSS, and JS framework for developing responsive, mobile first projects on the web.',\n        'logo': 'bootstrap.png'\n      },\n      {\n        'title': 'Angular UI Bootstrap',\n        'url': 'http://angular-ui.github.io/bootstrap/',\n        'description': 'Bootstrap components written in pure AngularJS by the AngularUI Team.',\n        'logo': 'ui-bootstrap.png'\n      }\n    ];\n\n    this.getTec = getTec;\n\n    function getTec() {\n      return data;\n    }\n  }\n\n})();\n\n(function(app) {\n  'use strict';\n\n  app.component('esSearch', {\n    templateUrl: 'app/components/search/search.html',\n    bindings: {\n      onSearchChanged: '&'\n    },\n    controllerAs: 'searchVm',\n    controller: SearchController\n  });\n\n  function SearchController() {\n    var vm = this;\n\n    var q = vm.q;\n    Object.defineProperty(this, 'q', {\n      get: function() {\n        return this._q;\n      },\n      set: function(value) {\n        this._q = value;\n        vm.onSearchChanged({q: value});\n      }\n    })\n  }\n\n}(angular.module('festima')));\n\n(function() {\n  'use strict';\n\n  angular\n    .module('festima')\n    .directive('acmeNavbar', acmeNavbar);\n\n  /** @ngInject */\n  function acmeNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      scope: {\n          creationDate: '='\n      },\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController(moment, session) {\n      var vm = this;\n\n      session.profile().then(function(user) {\n        vm.user = user;\n      });\n\n      // \"vm.creation\" is avaible by directive option \"bindToController: true\"\n      vm.relativeDate = moment(vm.creationDate).fromNow();\n\n\n    }\n  }\n\n})();\n\nangular.module('festima')\n  .controller('MessagesModalController', function ($scope, $uibModalInstance, position, messages, onNewMessage) {\n    var vm = this;\n\n    vm.messages = messages;\n    vm.onNewMessage = onNewMessage;\n\n    vm.ok = function () {\n      // $uibModalInstance.close($scope.selected.item);\n      $uibModalInstance.close(position);\n    };\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss('cancel');\n    };\n\n    vm.addNewMessage = function() {\n      vm.onNewMessage(vm.newMessage);\n      vm.newMessage = {};\n    };\n  }\n);\n\nangular.module('festima')\r\n  .controller('MessagesButtonController', function($uibModal, $log, moment, Message, messagesManager, session) {\r\n    var vm = this;\r\n\r\n    vm.openMessages = function () {\r\n      // var _messages;\r\n      var modalInstance;\r\n\r\n      messagesManager.loadAllMessages(vm.position.id).then(function(data) {\r\n        vm.messages = data;\r\n\r\n        modalInstance = $uibModal.open({\r\n          animation: true,\r\n          templateUrl: 'app/components/messagesButton/messages-modal.html',\r\n          controller: 'MessagesModalController',\r\n          controllerAs: 'messagesModalVm',\r\n          size: 'lg',\r\n          resolve: {\r\n            position: function () {\r\n              return vm.position;\r\n            },\r\n            messages: function() {\r\n              return vm.messages;\r\n            },\r\n            onNewMessage: function() {\r\n              return vm.addMessage;\r\n            }\r\n          }\r\n        });\r\n\r\n        modalInstance.result.then(function (selectedItem) {\r\n          // $scope.selected = selectedItem;\r\n        }, function () {\r\n          $log.info('Modal dismissed at: ' + new Date());\r\n        });\r\n      });\r\n    };\r\n\r\n    vm.addMessage = function(_message) {\r\n      var msg = new Message(angular.extend(_message, {positionId: vm.position.id}));\r\n\r\n      msg.save().then(function(id) {\r\n        // messagesManager.loadAllMessages(vm.position.id).then(function(data) {\r\n        //   angular.copy(data, vm.messages);\r\n        // });\r\n        messagesManager.getMessage(id).then(function(message) {\r\n          vm.messages.push(message);\r\n        });\r\n      });\r\n    };\r\n  }\r\n);\r\n\nangular.module('festima').component('messagesButton', {\n  templateUrl: 'app/components/messagesButton/messages-button.html',\n  bindings: {\n    position: '<'\n  },\n  controller: 'MessagesButtonController',\n  controllerAs: 'messagesButtonVm'\n});\n\n(function() {\n  'use strict';\n\n  angular\n    .module('festima')\n    .directive('acmeMalarkey', acmeMalarkey);\n\n  /** @ngInject */\n  function acmeMalarkey(malarkey) {\n    var directive = {\n      restrict: 'E',\n      scope: {\n        extraValues: '='\n      },\n      template: '&nbsp;',\n      link: linkFunc,\n      controller: MalarkeyController,\n      controllerAs: 'vm'\n    };\n\n    return directive;\n\n    function linkFunc(scope, el, attr, vm) {\n      var watcher;\n      var typist = malarkey(el[0], {\n        typeSpeed: 40,\n        deleteSpeed: 40,\n        pauseDelay: 800,\n        loop: true,\n        postfix: ' '\n      });\n\n      el.addClass('acme-malarkey');\n\n      angular.forEach(scope.extraValues, function(value) {\n        typist.type(value).pause().delete();\n      });\n\n      watcher = scope.$watch('vm.contributors', function() {\n        angular.forEach(vm.contributors, function(contributor) {\n          typist.type(contributor.login).pause().delete();\n        });\n      });\n\n      scope.$on('$destroy', function () {\n        watcher();\n      });\n    }\n\n    /** @ngInject */\n    function MalarkeyController($log, githubContributor) {\n      var vm = this;\n\n      vm.contributors = [];\n\n      activate();\n\n      function activate() {\n        return getContributors().then(function() {\n          $log.info('Activated Contributors View');\n        });\n      }\n\n      function getContributors() {\n        return githubContributor.getContributors(10).then(function(data) {\n          vm.contributors = data;\n\n          return vm.contributors;\n        });\n      }\n    }\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('festima')\n    .factory('githubContributor', githubContributor);\n\n  /** @ngInject */\n  function githubContributor($log, $http) {\n    var apiHost = 'https://api.github.com/repos/Swiip/generator-gulp-angular';\n\n    var service = {\n      apiHost: apiHost,\n      getContributors: getContributors\n    };\n\n    return service;\n\n    function getContributors(limit) {\n      if (!limit) {\n        limit = 30;\n      }\n\n      return $http.get(apiHost + '/contributors?per_page=' + limit)\n        .then(getContributorsComplete)\n        .catch(getContributorsFailed);\n\n      function getContributorsComplete(response) {\n        return response.data;\n      }\n\n      function getContributorsFailed(error) {\n        $log.error('XHR Failed for getContributors.\\n' + angular.toJson(error.data, true));\n      }\n    }\n  }\n})();\n\n(function(app) {\n  'use strict';\n\n  app.component('esDictionaryAutocomplete', {\n    templateUrl: 'app/components/dictionaryAutocomplete/dictionary-autocomplete.html',\n    bindings: {\n      key: '@',\n      selected: '='\n    },\n    controller: DictionaryAutocompleteController,\n    controllerAs: 'vm'\n  });\n\n  /** @ngInject */\n  function DictionaryAutocompleteLink(scope, element, attrs, controller) {\n    controller.key = attrs[this.name];\n  }\n\n  /** @ngInject */\n  function DictionaryAutocompleteController($sce, dictionaries) {\n    var vm = this;\n\n    vm.items = [];\n\n    vm.trustAsHtml = function(value) {\n      return $sce.trustAsHtml(value);\n    };\n\n    vm.refreshItems = function(q) {\n      dictionaries.itemsByKey(vm.key, undefined, undefined, q).then(function(items) {\n        vm.items = items;\n      });\n    };\n\n    vm.refreshItems();\n  }\n\n} (angular.module('festima')));\n\n(function(app) {\n\n  app.component('esDictionary', {\n    templateUrl: 'app/components/dictionary/dictionary.html',\n    bindings: {\n      // dictionary: '<',\n      key: '<'\n    },\n    controllerAs: 'dictionaryVm',\n    controller: DictionaryComponentController\n  });\n\n  function DictionaryComponentController($q, dictionaries) {\n    var vm = this;\n\n    vm.items = [];\n    vm.newItem = {};\n    vm.currentPage = 1;\n    vm.itemsPerPage = 10;\n\n    vm.add = function(item) {\n      dictionaries.addItem(vm.key, item).then(function(item) {\n        vm.newItem = {};\n        vm.pageChanged();  // update items\n      });\n    };\n\n    vm.pageChanged = function() {\n      var items = dictionaries.itemsByKey(vm.key, (vm.currentPage - 1) * vm.itemsPerPage, vm.itemsPerPage);\n      var count = dictionaries.countItemsByKey(vm.key);\n\n      $q.all({items: items, count: count}).then(function(result) {\n        vm.items = result.items;\n        vm.totalItems = result.count;\n      });\n    };\n\n    vm.pageChanged();\n  }\n\n} (angular.module('festima')));\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.component('esDealerPositions', {\r\n    templateUrl: 'app/components/dealerPositions/dealer-positions.html',\r\n    bindings: {\r\n      positions: '<',\r\n      newPosition: '<',\r\n      onAddPosition: '&',\r\n      onDeletePosition: '&'\r\n    },\r\n    controller: DealerPositionsController,\r\n    controllerAs: 'positionsVm',\r\n    transclude: true\r\n  });\r\n\r\n  /** @ngInject */\r\n  function DealerPositionsController() {\r\n    var vm = this;\r\n\r\n    vm.types = ['фасады', 'интерьеры'];\r\n    vm.statuses = ['на согласовании', 'утвержден', 'отгружен','не согласован'];\r\n    // vm.statuses = [\r\n    //   { code: 'PRESALE', label: 'на согласовании' },\r\n    //   { code: 'APPROVED', label: 'утвержден' },\r\n    //   { code: 'SHIPPED', label: 'отгружен' },\r\n    //   { code: 'REJECTED', label: 'не согласован' }\r\n    // ];\r\n\r\n    angular.extend(vm, {\r\n\r\n      addNewPosition: function() {\r\n        var newPosition = angular.copy(vm.newPosition);\r\n        angular.extend(newPosition, vm.inputPosition);\r\n        vm.inputPosition = {};\r\n        vm.onAddPosition({dealerId: newPosition.dealerId, position: newPosition});\r\n      },\r\n\r\n      removePosition: function(position) {\r\n        vm.onDeletePosition({dealerId: position.dealer.id, position: position});\r\n      },\r\n\r\n      activePosition: function(item) {\r\n        return item.removed === undefined;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n}(angular.module('festima')));\r\n\n(function(app) {\n  'use strict';\n\n  app.component('esComments', {\n    templateUrl: 'app/components/comments/comments.html',\n    bindings: {\n      comments: '<',\n      onAddComment: '&'\n    },\n    controllerAs: 'commentsVm',\n    controller: CommentsController\n  });\n\n  function CommentsController() {\n    var vm = this;\n    vm.newComment = {};\n\n    vm.addNewComment = function() {\n      vm.onAddComment({comment: vm.newComment.text});\n      vm.newComment = {};\n    }\n  }\n\n}(angular.module('festima')));\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.component('esComment', {\r\n    templateUrl: 'app/components/comment/comment.html',\r\n    bindings: {\r\n      comment: '<'\r\n    },\r\n    controllerAs: 'commentVm',\r\n    controller: CommentController\r\n  });\r\n\r\n  function CommentController() {\r\n\r\n  }\r\n\r\n}(angular.module('festima')));\r\n\n(function(app){\r\n  'use strict';\r\n\r\n  app.component('esBuildingsNearby', {\r\n    templateUrl: 'app/components/buildingsNearby/buildings-nearby.html',\r\n    bindings: {\r\n      address: '<'\r\n    },\r\n    controllerAs: 'vm',\r\n    controller: BuildingsNearbyController\r\n  });\r\n\r\n  function BuildingsNearbyController(maps, addresses, toastr) {\r\n    var vm = this;\r\n\r\n    var findNearbyBuildings = function(address) {\r\n      var latLng;\r\n\r\n      if (address) {\r\n        latLng = maps.centroidToLatlng(address.geometry.centroid);\r\n        addresses.listWithinRadius(latLng, 1000).then(\r\n          function(buildings) {\r\n            if (!_.isEmpty(buildings)) {\r\n              toastr.error('Найдены объекты в радиусе 1 км!');\r\n            }\r\n            vm.buildings = buildings;\r\n          }\r\n        );\r\n      }\r\n    };\r\n\r\n    Object.defineProperty(vm, 'address', {\r\n      get: function() {\r\n        return vm._address;\r\n      },\r\n      set: function(newVal) {\r\n        vm._address = newVal;\r\n        findNearbyBuildings(newVal);\r\n      }\r\n    });\r\n  }\r\n\r\n}(angular.module('festima')));\r\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.component('esBuildingForm', {\r\n    templateUrl: 'app/components/buildingForm/building-form.html',\r\n    bindings: {\r\n      building: '<'\r\n    },\r\n    controller: BuildingFormController,\r\n    controllerAs: 'buildingFormVm',\r\n    transclude: true\r\n  });\r\n\r\n  function BuildingFormController() {\r\n    var vm = this;\r\n  }\r\n\r\n}(angular.module('festima')));\r\n\n'use strict';\n\nangular.module('festima')\n  .service('buildingDealersService1', function (dealers, positions) {\n      var buildingDealersMap = {};  // map dealer name and positions to their ids\n      var dealersMap = {};          // map dealers to their ids\n      var buildingPositions;\n      var dealerList;\n      var _dealers;\n\n      angular.extend(this, {\n        buildingDealersMap: buildingDealersMap,\n\n        loadPositions: function (buildingId) {\n          positions.list1(buildingId).then(function (response) {\n            buildingPositions = response.data;\n\n            var dealerId;\n            for (var i = 0; i < buildingPositions.length; i++) {\n              dealerId = buildingPositions[i].dealerId;\n\n              if (buildingDealersMap[dealerId] === undefined) {\n                buildingDealersMap[dealerId] = {name: dealersMap[dealerId].name, positions: []};\n              }\n\n              buildingDealersMap[dealerId].positions.push(buildingPositions[i]);\n            }\n          }, function (response) {\n            console.log(\"couldn't load positions\");\n          });\n        },\n\n        savePositions: function () {\n          var dealerMap;\n          var position;\n          // save changes in dealers positions\n          for (var dealerId in buildingDealersMap) {\n            dealerMap = buildingDealersMap[dealerId];\n\n            for (var i = 0; i < dealerMap.positions.length; i++) {\n              position = dealerMap.positions[i];\n\n              if (position.buildingId === undefined) {\n                position.buildingId = position.building.id;\n                delete position['building'];\n              }\n\n              if (position.id === undefined) {\n                positions.create1(position).then(function (resp) {\n                  position.id = resp.data.id;\n                  console.log('Saved position ' + position.id);\n                });\n              }\n\n              if (position.removed === true) {\n                positions.delete(position.id).then(function (resp) {\n                  var index = dealerMap.positions.map(function (e) {\n                    return e.id;\n                  }).indexOf(position.id);\n                  dealerMap.positions.splice(index, 1);\n                });\n              }\n            }\n          }\n        },\n\n        addDealerPosition: function (dealerId, position) {\n          buildingDealersMap[dealerId].positions.push(position);\n        },\n\n        removeDealerPosition: function (dealerId, position) {\n          var dealerMap = buildingDealersMap[dealerId];\n\n          if (position.id === undefined) {\n            var index = dealerMap.positions.indexOf(position);\n            if (index !== -1) {\n              dealerMap.positions.splice(index, 1);\n            }\n          } else {\n            position.removed = true;\n          }\n        },\n\n        dealers: _dealers,\n\n        loadDealers: function () {\n          dealers.list().then(function (resp) {\n            dealerList = resp.data;\n\n            var dealer;\n            // todo: If dealers not loaded yet?\n            for (var i = 0; i < dealerList.length; i++) {\n              dealer = dealerList[i];\n              if (dealersMap[dealer.id] === undefined) {\n                dealersMap[dealer.id] = dealer;\n              }\n            }\n          })\n        },\n\n        refreshDealers: function (q) {\n          dealers.list().then(function (resp) {\n            _dealers = resp.data;\n            // angular.copy(_dealers, resp.data);\n\n            var dealer;\n            for (var i = 0; i < _dealers.length; i++) {\n              dealer = _dealers[i];\n              if (dealersMap[dealer.id] === undefined) {\n                dealersMap[dealer.id] = dealer;\n              }\n            }\n          })\n        },\n        \n        addDealer: function(dealer) {\n          var index = Object.keys(buildingDealersMap).indexOf(dealer.id);\n\n          if (index === -1) {\n            buildingDealersMap[dealer.id] = {name: dealer.name, positions: []};\n          }\n        }\n      });\n    }\n  );\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.component('esBuildingContacts', {\r\n    templateUrl: 'app/components/buildingContacts/building-contacts.html',\r\n    bindings: {\r\n      contacts: '<',\r\n      onRemoveContact: '&'\r\n    },\r\n    controllerAs: 'buildingContactsVm',\r\n    controller: BuildingContactsController\r\n  });\r\n\r\n  function BuildingContactsController() {\r\n    var vm = this;\r\n\r\n    vm.removeContact = function(contact) {\r\n      vm.onRemoveContact({contact: contact});\r\n    };\r\n  }\r\n\r\n}(angular.module('festima')));\r\n\nangular.module('festima')\r\n  .controller('BuildingAddressController', function(maps) {\r\n    var vm = this;\r\n\r\n    var latLng0;\r\n\r\n    if (angular.isDefined(vm.building)) {\r\n      setSelected(vm.building.address);\r\n    }\r\n\r\n    function setSelected(address) {\r\n      vm.asyncSelected = address;\r\n    }\r\n\r\n    DG.then(function() {\r\n\r\n      if (angular.isDefined(vm.building) && angular.isDefined(vm.building.location)) {\r\n        latLng0 = maps.centroidToLatlng(vm.building.location);\r\n      }\r\n\r\n      maps.initMap(latLng0).then(function(map) {\r\n        vm.map = map;\r\n\r\n        if (angular.isDefined(latLng0)) {\r\n          vm.marker = maps.getMarker(latLng0);\r\n          vm.marker.addTo(vm.map);\r\n        }\r\n\r\n        vm.map.on('click', function (e) {\r\n          var latLng = [e.latlng.lat, e.latlng.lng];\r\n          console.log(latLng);\r\n\r\n          maps.searchCoords(latLng).then(function (location) {\r\n            vm.location = location;\r\n            vm.address = location.name;\r\n\r\n            if (typeof vm.marker !== 'undefined') {\r\n              vm.map.removeLayer(vm.marker);\r\n            }\r\n\r\n            vm.marker = maps.getMarker(latLng);\r\n            var text = location.name + '.<br />';\r\n\r\n            text += location.attributes.buildingname;\r\n            vm.marker.bindPopup(text);\r\n            vm.marker.addTo(vm.map);\r\n\r\n            var locationFullName = location.name;\r\n\r\n            var item = {geometry: {}};\r\n            item.full_name = locationFullName;\r\n            item.geometry.centroid = location.centroid;\r\n\r\n            if (_.isEmpty(location.attributes.number)) {\r\n              console.log('No building number!');\r\n              item.geometry.centroid = maps.latLngToWkt(latLng);\r\n            }\r\n\r\n            setSelected(locationFullName);\r\n            vm.onAddressSelected({address: item});\r\n          });\r\n        });\r\n      });\r\n    });\r\n\r\n    vm.searchAddress = function(q) {\r\n      maps.searchAddress(q).then(function(latLng){\r\n\r\n        if (typeof vm.marker !== 'undefined') {\r\n          vm.map.removeLayer(vm.marker);\r\n        }\r\n\r\n        // создаем и добавляем маркер на карту\r\n        vm.marker = maps.getMarker(latLng);\r\n        vm.map.addLayer(vm.marker);\r\n\r\n        // центрируем карту в координаты маркера\r\n        vm.map.panTo(latLng);\r\n      });\r\n    };\r\n\r\n    vm.getLocation = function(q) {\r\n      return maps.suggestions(q).then(function(items){\r\n        return items.map(function(item){\r\n          return item;\r\n        });\r\n      });\r\n    };\r\n\r\n    vm.onSelect = function(itemData, model, label) {\r\n      maps.search(itemData.hint.text).then(function(items) {\r\n        var item = items[0];\r\n\r\n        if (typeof vm.marker !== 'undefined') {\r\n          vm.map.removeLayer(vm.marker);\r\n        }\r\n\r\n        var latLng = maps.centroidToLatlng(item.geometry.centroid);\r\n\r\n        // создаем и добавляем маркер на карту\r\n        vm.marker = maps.getMarker(latLng);\r\n        vm.map.addLayer(vm.marker);\r\n\r\n        // центрируем карту в координаты маркера\r\n        vm.map.setZoom(maps.detailedZoom);\r\n        vm.map.panTo(latLng);\r\n\r\n        setSelected(item.full_name);\r\n        vm.onAddressSelected({address: item});\r\n      });\r\n    };\r\n  }\r\n);\r\n\nangular.module('festima')\n  .component('esBuildingAddress', {\n    templateUrl: 'app/components/buildingAddress/building-address.html',\n    bindings: {\n      building: '<',\n      onAddressSelected: '&'\n    },\n    controllerAs: 'addressVm',\n    controller: 'BuildingAddressController'\n  }\n);\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.component('esAddressInput', {\r\n    templateUrl: 'app/components/addressInput/address-input.html',\r\n    bindings: {\r\n      onAddressSelected: '&'\r\n    },\r\n    controllerAs: 'addressInputVm',\r\n    controller: AddressInputController\r\n  });\r\n\r\n  function AddressInputController(maps) {\r\n    var vm = this;\r\n\r\n    vm.getLocation = function(q) {\r\n      return maps.suggestions(q).then(function(items){\r\n        return items.map(function(item){\r\n          return item;\r\n        });\r\n      });\r\n    };\r\n\r\n    vm.onSelect = function(itemData, model, label) {\r\n      maps.search(itemData.hint.text).then(function(items) {\r\n        var item = items[0];\r\n\r\n        vm.onAddressSelected({address: item});\r\n      });\r\n    };\r\n  }\r\n\r\n}(angular.module('festima')));\r\n\nangular.module('festima')\n  .controller('AddDealerButtonController', function(dealers){\n    var vm = this;\n\n    vm.addDealer = function() {\n      if ( !vm.onCheckAdded({dealer: vm.dealer})) {\n        vm.onAddDealer({dealer: vm.dealer});\n      }\n\n      vm.dealer = undefined;\n    };\n\n    vm.refreshDealers = function (q) {\n      dealers.findAllByQuery().then(function (dealers) {\n        vm.dealers = dealers;\n      })\n    };\n\n  }\n);\n\nangular.module('festima').component('esAddDealerButton', {\n  templateUrl: 'app/components/addDealerButton/add-dealer-button.html',\n  bindings: {\n    onAddDealer: '&',\n    onCheckAdded: '&'\n  },\n  controller: 'AddDealerButtonController',\n  controllerAs: 'addDealerVm'\n});\n\n(function(app) {\n  'use strict';\n\n  app.component('esAddContact', {\n    templateUrl: 'app/components/addContact/add-contact.html',\n    bindings: {\n      onContactAdded: '&'\n    },\n    controllerAs: 'addContactVm',\n    controller: AddContactController\n  });\n\n  function AddContactController(appConfig, $http) {\n    var vm = this;\n\n    function initNewContact() {\n      vm.newItem = {};\n      vm.contacts = [];\n\n      Object.defineProperty(vm.newItem, 'contactType', {\n        get: function() {\n          return vm.newItem._contactType;\n        },\n        set: function(newValue) {\n          vm.newItem._contactType = newValue;\n          getContacts(newValue).then(function(contacts) {\n            vm.contacts = contacts;\n          });\n        }\n      });\n    }\n\n    function getContactTypes() {\n      return $http.get(appConfig.apiUrl + '/dictionaries').then(function(response) {\n        return response.data;\n      })\n    }\n\n    function getContacts(key) {\n      return $http.get(appConfig.apiUrl + '/dictionaries/' + key + '/items').then(function(response) {\n        return response.data;\n      });\n    }\n\n    initNewContact();\n\n    getContactTypes().then(function(contactTypes) {\n      vm.contactTypes = contactTypes;\n    });\n\n    vm.addContact = function(newContact) {\n      newContact.typeName = _.find(vm.contactTypes, function(type) { return type.key == newContact.contactType; }).name;\n      newContact.contactName = _.find(vm.contacts, function(contact) { return contact.id == newContact.contactId; }).title;\n      vm.onContactAdded({newContact: newContact});\n      initNewContact();\n    };\n  }\n\n}(angular.module('festima')));\n\n(function() {\n  'use strict';\n\n  angular\n    .module('festima')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($timeout, webDevTec, toastr) {\n    var vm = this;\n\n    vm.awesomeThings = [];\n    vm.classAnimation = '';\n    vm.creationDate = 1457814815376;\n    vm.showToastr = showToastr;\n\n    activate();\n\n    function activate() {\n      getWebDevTec();\n      $timeout(function() {\n        vm.classAnimation = 'rubberBand';\n      }, 4000);\n    }\n\n    function showToastr() {\n      toastr.info('Уведомление...');\n      vm.classAnimation = '';\n    }\n\n    function getWebDevTec() {\n      vm.awesomeThings = webDevTec.getTec();\n\n      angular.forEach(vm.awesomeThings, function(awesomeThing) {\n        awesomeThing.rank = Math.random();\n      });\n    }\n  }\n})();\n\n'use strict';\n\n/**\n * @ngdoc function\n * @name festimaApp.controller:AboutController\n * @description\n * # AboutController\n * Controller of the festimaApp\n */\nangular.module('festima')\n  .controller('AboutController', function () {\n\n  });\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.service('session', function($http, $log, $q, $state, $rootScope, $timeout, $cookies, appConfig, OAuth, OAuthToken) {\r\n    var currentUserPromise;\r\n    var userId;\r\n\r\n    function loadCurrentUser() {\r\n      return $http.get(appConfig.apiUrl + '/users/profile').then(function(response) {\r\n        var user = response.data;\r\n\r\n        userId = user.id;\r\n        return user;\r\n      });\r\n    }\r\n\r\n    // $rootScope.$on('$stateChangeError', function () {\r\n    //   $state.go('public.login');\r\n    // });\r\n\r\n    angular.extend(this, {\r\n      login: function(credentials) {\r\n        var options = {};\r\n\r\n        angular.extend(credentials, {scope: 'read'});\r\n\r\n        return OAuth.getAccessToken(credentials, options).then(function(response) {\r\n          currentUserPromise = loadCurrentUser();\r\n        }).catch(function(e) {\r\n          $log.error('Auth error: ', e);\r\n          return $q.reject(e);\r\n        });\r\n      },\r\n\r\n      logout: function() {\r\n        // OAuth.revokeToken();\r\n        $cookies.remove('token');\r\n        return $timeout(function () {\r\n          $state.go('public.login');\r\n        });\r\n      },\r\n\r\n      getUserId: function() {\r\n        return userId;\r\n      },\r\n\r\n      profile: function() {\r\n        if (!currentUserPromise) {\r\n          currentUserPromise = loadCurrentUser();\r\n        }\r\n        return currentUserPromise;\r\n      },\r\n\r\n      isAuthenticated: function() {\r\n        return OAuth.isAuthenticated();\r\n      },\r\n\r\n      checkLoggedIn: function() {\r\n        var deferred = $q.defer();\r\n\r\n        if (this.isAuthenticated()) {\r\n          deferred.resolve();\r\n        } else {\r\n          $timeout(function () {\r\n            $state.go('public.login');\r\n          });\r\n          deferred.reject();\r\n        }\r\n\r\n        return deferred.promise;\r\n      },\r\n\r\n      skipLoggedIn: function() {\r\n        var deferred = $q.defer();\r\n\r\n        if (this.isAuthenticated()) {\r\n          deferred.reject();\r\n        } else {\r\n          deferred.resolve();\r\n        }\r\n\r\n        return deferred.promise;\r\n      }\r\n    });\r\n  });\r\n\r\n} (angular.module('festima')));\r\n\n(function(app) {\n  'use strict';\n\n  app.controller('LoginController', function($http, $state, toastr, appConfig, OAuth, OAuthToken, spinnerService, session) {\n    var vm = this;\n\n    vm.login = function() {\n      var credentials = {username: vm.email, password: vm.password};\n\n      vm.loginForm.$setPristine();\n      // spinnerService.show(\"authSpinner\");\n\n      session.login(credentials).then(function(res) {\n        $state.go('private.main');\n      }).catch(function(err) {\n        toastr.error(\"Неверная комбинация email/пароль!\");\n\n        vm.loginForm.password.$setValidity(\"required\", false);\n        vm.password = '';\n      }).finally(function() {\n        // spinnerService.hide('authSpinner');\n      });\n    };\n\n    vm.logout = function() {\n      session.logout();\n    };\n  });\n\n\n} (angular.module('festima')));\n\n(function(app) {\n  'use strict';\n\n  app.controller('DictionaryShowController', function($stateParams, dictionaries) {\n    var vm = this;\n\n    console.log(\"State params: \", $stateParams.key);\n    vm.key = $stateParams.key;\n    dictionaries.loadByKey($stateParams.key).then(function(dictionary) {\n      vm.dictionary = dictionary;\n    });\n  });\n\n} (angular.module('festima')));\n\n(function(app) {\n  'use strict';\n\n  app.service('dictionaries', function($q, $http, appConfig) {\n\n    angular.extend(this, {\n      listAll: function() {\n        return $http.get(appConfig.apiUrl + '/dictionaries').then(function(response) {\n          return response.data;\n        });\n      },\n\n      loadByKey: function(key) {\n        return $http.get(appConfig.apiUrl + '/dictionaries/' + key).then(function(response) {\n          return response.data;\n        });\n      },\n\n      itemsByKey: function(key, offset, max, q) {\n        return $http.get(appConfig.apiUrl + '/dictionaries/' + key + '/items', {params: {offset: offset, max: max, q: q}}).then(function(response) {\n          return response.data;\n        });\n      },\n\n      countItemsByKey: function(key) {\n        return $http.get(appConfig.apiUrl + '/dictionaries/' + key + '/count').then(function(response) {\n          return response.data;\n        });\n      },\n\n      addItem: function(key, item) {\n        return $http.post(appConfig.apiUrl + '/dictionaries/' + key + '/items', {data: item}).then(function(response) {\n          return response.data;\n        });\n      },\n\n      loadItem: function(id) {\n        return $http.get(appConfig.apiUrl + '/dictionaries/items/' + id).then(function(response) {\n          return response.data;\n        });\n      }\n    });\n  });\n\n} (angular.module('festima')));\n\n(function(app) {\n  'use strict';\n\n  app.controller('DictionaryListController', function(dictionaries) {\n    var vm = this;\n\n    dictionaries.listAll().then(function(dictionaries) {\n      vm.dictionaries = dictionaries;\n    });\n  });\n\n} (angular.module('festima')));\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.service('users', UsersService);\r\n\r\n  function UsersService($http, appConfig) {\r\n    angular.extend(this, {\r\n      list: function() {\r\n        return $http.get(appConfig.apiUrl + '/users').then(function(response) {\r\n          return response.data;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}(angular.module('festima')));\r\n\n'use strict';\n\nangular.module('festima')\n  .service('positions', function($http, appConfig) {\n    angular.extend(this, {\n      listAllByBuilding: function(buildingId) {\n        return $http.get(appConfig.apiUrl + '/positions', {params: {buildingId: buildingId}});\n      },\n      createPosition: function(positionData) {\n        return $http.post(appConfig.apiUrl + '/positions', positionData).then(function(resp) { return resp.data; });\n      },\n      delete: function(positionId) {\n        return $http.delete(appConfig.apiUrl + '/positions/' + positionId);\n      }\n    });\n  }\n);\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.filter('notRemoved', function () {\r\n    return function (items) {\r\n      return _.filter(items, function(item) { return item.removed === undefined; })\r\n    };\r\n  });\r\n\r\n}(angular.module('festima')));\r\n\n'use strict';\n\nangular.module('festima')\n  .service('dealers', function($http, appConfig) {\n    angular.extend(this, {\n\n      findAllByQuery: function(q) {\n        return $http.get(appConfig.apiUrl + '/dictionaries/dealers/items', {params: {q: q}}).then(function(resp) { return resp.data; });\n      },\n\n      listAll: function() {\n        return $http.get(appConfig.apiUrl + '/dictionaries/dealers/items', {params: {max: 500}}).then(function(response) { return response.data; });\n      },\n\n      mapAll: function() {\n        return this.listAll().then(function(dealerList) {\n          var dealersMap = {};\n          var dealer;\n\n          for (var i = 0; i < dealerList.length; i++) {\n            dealer = dealerList[i];\n            if (angular.isUndefined(dealersMap[dealer.id])) {\n              dealersMap[dealer.id] = dealer;\n            }\n          }\n\n          return dealersMap;\n        });\n      },\n\n      listByIds: function(ids) {\n        var params = '?';\n\n        for(var i=0; i<ids.length; i++) {\n          params += '&id=' + ids[i];\n        }\n\n        return $http.get(appConfig.apiUrl + '/dictionaries/dealers/items' + params);\n      }\n    });\n});\n\n(function(app) {\n  'use strict';\n\n  app.service('comments', ['$http', 'appConfig', function($http, appConfig) {\n    angular.extend(this, {\n      listAllByBuilding: function(buildingId) {\n        return $http.get(appConfig.apiUrl + '/buildings/' + buildingId + '/comments').then(function(response) {\n          return response.data;\n        });\n      },\n\n      createComment: function(buildingId, commentData) {\n        return $http.post(appConfig.apiUrl + '/buildings/' + buildingId + '/comments', commentData).then(function(response) {\n          return response.data;\n        });\n      }\n    });\n  }]);\n\n} (angular.module('festima')));\n\nangular.module('festima')\n  .factory('buildingsManager', ['$http', '$q', 'appConfig', 'Building', 'usersManager', 'dictionaries', function($http, $q, appConfig, Building, usersManager, dictionaries) {\n  var buildingsManager = {\n    _pool: {},\n    _retrieveInstance: function(id, data) {\n      var instance = this._pool[id];\n\n      if (instance) {\n        instance.setData(data);\n      } else {\n        instance = new Building(data);\n        this._pool[id] = instance;\n      }\n\n      return instance;\n    },\n    _search: function(id) {\n      return this._pool[id];\n    },\n    _load: function(id, deferred) {\n      var scope = this;\n\n      $http.get(appConfig.apiUrl + '/buildings/' + id)\n        .success(function(data) {\n          var itemData = data;\n          var item = scope._retrieveInstance(itemData.id, itemData);\n\n          deferred.resolve(item);\n        })\n        .error(function() {\n          deferred.reject();\n        });\n    },\n\n    getBuilding: function(id) {\n      var deferred = $q.defer();\n      var item = this._search(id);\n      if (item) {\n        deferred.resolve(item);\n      } else {\n        if (id === undefined) {\n          deferred.resolve(this._retrieveInstance(null));\n        } else {\n          this._load(id, deferred);\n        }\n      }\n      return deferred.promise;\n    },\n\n    loadAllBuildings: function() {\n      var deferred = $q.defer();\n      var scope = this;\n      $http.get(appConfig.apiUrl + '/buildings')\n        .success(function(itemsArray) {\n          var items = [];\n          var item;\n\n            if (itemsArray.length == 0) {\n              deferred.resolve([]);\n              return;\n            }\n\n            itemsArray.forEach(function (itemData) {\n              item = scope._retrieveInstance(itemData.id, itemData);\n              items.push(item);\n              deferred.resolve(items);\n            });\n        })\n        .error(function() {\n          deferred.reject();\n        });\n      return deferred.promise;\n    },\n\n    setBuilding: function(data) {\n      var scope = this;\n      var item = this._search(data.id);\n      if (item) {\n        item.setData(data);\n      } else {\n        item = scope._retrieveInstance(data);\n      }\n      return item;\n    }\n  };\n\n  return buildingsManager;\n}]);\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.service('buildings', ['$http', 'appConfig', function($http, appConfig) {\r\n    angular.extend(this, {\r\n      list: function(offset, limit, q, authorId) {\r\n        return $http.get(appConfig.apiUrl + '/buildings', {params: {offset: offset, max: limit, q: q, authorId: authorId}}).then(function(resp) {\r\n          return resp.data;\r\n        });\r\n      },\r\n\r\n      get: function(id) {\r\n        return $http.get(appConfig.apiUrl + '/buildings/' + id).then(function(response) {\r\n          return response.data;\r\n        });\r\n      },\r\n\r\n      update: function(building) {\r\n        building.contacts = []; // do not resave\r\n        return $http.put(appConfig.apiUrl + '/buildings/' + building.id, building).then(function(response) {\r\n          return response.data;\r\n        });\r\n      }\r\n    });\r\n  }]);\r\n\r\n}(angular.module('festima')));\r\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.factory('Buildings', ['$http', 'appConfig', function($http, appConfig) {\r\n    function Buildings(offset, limit) {\r\n      this.offset = offset;\r\n      this.limit = limit;\r\n    }\r\n\r\n    // Buildings.prototype = {\r\n    //   list: function() {\r\n    //     return $http.get(appConfig.apiUrl + '/buildings', {params: {offset: this.offset, limit: this.limit}}).then(function(resp) {\r\n    //       return resp.data;\r\n    //     });\r\n    //   }\r\n    // };\r\n\r\n    return Buildings;\r\n  }]);\r\n\r\n}(angular.module('festima')));\r\n\nangular.module('festima')\n  .factory('buildingDealersManager', ['$http', '$q', 'BuildingDealer', 'dealers', function ($http, $q, BuildingDealer, dealers) {\n\n    var buildingDealersManager = {\n      _pool: {},\n      _retrieveInstance: function (id, data) {\n        var instance = this._pool[id];\n\n        if (instance) {\n          instance.setData(data);\n        } else {\n          instance = new BuildingDealer(data);\n          if (id) {\n            this._pool[id] = instance;\n          } else {\n            var unsavedId = Math.min(-1, Math.min(Object.keys(this._pool)));\n            instance.id = unsavedId;\n            this._pool[unsavedId] = instance;\n          }\n\n        }\n\n        return instance;\n      },\n      _unsaved: function() {\n        var unsaved = [];\n        var scope = this;\n\n        Object.keys(this._pool).forEach(function(id) {\n          if (Number(id) < 0) {\n            unsaved.push(scope._pool[id]);\n          }\n        });\n\n        return unsaved;\n      },\n      _search: function (id) {\n        return this._pool[id];\n      },\n      _load: function (id, deferred) {\n        var scope = this;\n\n        $http.get('http://localhost:3000/api/buildingDealers/' + id)\n          .success(function (data) {\n            var item = scope._retrieveInstance(data.id, data);\n\n            $http.get('http://localhost:3000/api/dealers/' + data.dealerId).then(\n              function (response) {\n                item.dealer = response.data;\n              }\n            );\n\n            deferred.resolve(item);\n          })\n          .error(function () {\n            deferred.reject();\n          });\n      },\n\n      getBuildingDealer: function (id) {\n        var deferred = $q.defer();\n        var item = this._search(id);\n        if (item) {\n          deferred.resolve(item);\n        } else {\n          this._load(id, deferred);\n        }\n        return deferred.promise;\n      },\n      loadAllBuildingDealers: function (id) {\n        var deferred = $q.defer();\n        var scope = this;\n        $http.get('http://localhost:3000/api/buildingDealers', {params: {buildingId: id}})\n          .success(function (itemsArray) {\n            var items = [];\n            var map = {};\n            itemsArray.forEach(function (itemData) {\n              var item = scope._retrieveInstance(itemData.id, itemData);\n              items.push(item);\n              map[item.dealerId] = item;\n            });\n\n            return dealers.listByIds(Object.keys(map)).then(\n              function (response) {\n                var list = response.data;\n\n                list.forEach(function (item) {\n                  map[item.id].dealer = item;\n                });\n\n                deferred.resolve(items);\n              }\n            )\n          })\n          .error(function () {\n            deferred.reject();\n          });\n        return deferred.promise;\n      },\n      setBuildingDealer: function (data) {\n        var scope = this;\n        var item = this._search(data.id);\n        if (item) {\n          item.setData(data);\n        } else {\n          item = scope._retrieveInstance(null, data);\n        }\n        return item;\n      }\n    };\n\n    return buildingDealersManager;\n  }]);\n\n'use strict';\n\nangular.module('festima')\n  .service('buildingDealersService', function (dealers, positions) {\n\n      angular.extend(this, {\n\n        getDealersPositionsMap: function(buildingId) {\n          return positions.listAllByBuilding(buildingId).then(function(response) {\n            var dealerPositionsMap = {};\n            var buildingPositions = response.data;\n\n            return dealers.mapAll().then(function(mapOfDealers) {\n\n              var dealerId;\n              for (var i = 0; i < buildingPositions.length; i++) {\n                dealerId = buildingPositions[i].dealer.id;\n\n                if (angular.isUndefined(dealerPositionsMap[dealerId])) {\n                  dealerPositionsMap[dealerId] = {name: mapOfDealers[dealerId].title, positions: []};\n                }\n\n                dealerPositionsMap[dealerId].positions.push(buildingPositions[i]);\n              }\n\n              return dealerPositionsMap;\n            });\n          })\n        },\n\n        saveDealerPositions: function(dealerId, positionsList) {\n          var position;\n\n          for (var i = 0; i < positionsList.length; i++) {\n            position = positionsList[i];\n\n            if (position.removed === true) {\n              positions.delete(position.id).then(function () {\n                var index = positionsList.map(function (e) {\n                  return e.id;\n                }).indexOf(position.id);\n                positionsList.splice(index, 1);\n              });\n            }\n\n            if (angular.isUndefined(position.buildingId)) {\n              position.buildingId = position.building.id;\n              delete position['building'];\n            }\n\n            if (angular.isUndefined(position.id)) {\n              positions.createPosition(position).then(function (savedPosition) {\n                position.id = savedPosition.id;\n                console.log('Saved position ' + position.id);\n              });\n            }\n\n          }\n\n          // return changedPositions;\n        },\n\n      });\n    }\n  );\n\nangular.module('festima').factory('BuildingDealer', ['$http', function($http) {\n  function BuildingDealer(data) {\n    if (data) {\n      this.setData(data);\n    }\n    // Some other initializations related to book\n  };\n  BuildingDealer.prototype = {\n    setData: function(data) {\n      angular.extend(this, data);\n    },\n    save: function() {\n      if (this.id === undefined) {\n        $http.post('http://localhost:3000/api/buildingDealers', this);\n        $http.get('http://localhost:3000/api/buildingDealers').then(\n          function(response) {\n            angular.extend(this, response.data);\n          }\n        )\n      } else {\n        this.update();\n      }\n    },\n    delete: function() {\n      $http.delete('http://localhost:3000/api/buildingDealers/' + id);\n    },\n    update: function() {\n      $http.put('http://localhost:3000/api/buildingDealers/' + id, this);\n    },\n    // getImageUrl: function(width, height) {\n    //   return 'our/image/service/' + this.book.id + '/width/height';\n    // },\n    // isAvailable: function() {\n    //   if (!this.book.stores || this.book.stores.length === 0) {\n    //     return false;\n    //   }\n    //   return this.book.stores.some(function(store) {\n    //     return store.quantity > 0;\n    //   });\n    // }\n  };\n  return BuildingDealer;\n}]);\n\n'use strict';\n\nangular.module('festima')\n  .controller('BuildingShowController', function ($stateParams, toastr, buildingsManager, buildings, maps, comments, contacts) {\n    var id = $stateParams.buildingId;\n    var vm = this;\n\n    vm.contacts = [];\n    vm.comments = [];\n    loadComments();\n\n    function loadComments() {\n      comments.listAllByBuilding(id).then(function(comments) {\n        vm.comments = comments;\n      });\n    }\n\n    function addNewComment(text) {\n      comments.createComment(id, {text: text}).then(function(newComment) {\n        toastr.success('Комментарий добавлен.');\n        loadComments();\n      });\n    }\n\n    vm.addComment = addNewComment;\n\n    buildings.get(id).then(function (building) {\n      vm.building = building;\n      vm.contacts = vm.building.contacts;\n\n      DG.then(function () {\n          var map, point, lat, lng, marker;\n\n          var latLng = maps.centroidToLatlng(vm.building.location);\n          lat = latLng[0];\n          lng = latLng[1];\n\n          map = DG.map('map', {\n            center: latLng,\n            zoom: 16\n          });\n\n          DG.marker(latLng).addTo(map).bindPopup('Вы кликнули по мне!');\n\n\n\n          // DG.ajax({\n          //   url: 'http://catalog.api.2gis.ru/geo/search',\n          //   data: {\n          //     key: 'ruczoy1743',\n          //     version: 1.3,\n          //     q: 'Москва, Красная площадь, 2'\n          //   },\n          //   type: 'GET',\n          //   success: function(data) {\n          //     if (typeof marker !== 'undefined') {\n          //       map.removeLayer(marker);\n          //     }\n          //\n          //     // считываем строку в WKT-формате и возвращаем объект Point\n          //     point = DG.Wkt.toPoints(data.result[0].centroid);\n          //\n          //     // извлекаем координаты для маркера\n          //     lng = point[0];\n          //     lat = point[1];\n          //\n          //     // создаем и добавляем маркер на карту\n          //     marker = DG.marker([lat, lng]);\n          //     map.addLayer(marker);\n          //\n          //     // центрируем карту в координаты маркера\n          //     map.panTo([lat, lng]);\n          //   },\n          //   error: function(error) {\n          //     console.log(error);\n          //   }\n          // });\n        });\n      }\n    );\n  }\n);\n\nangular.module('festima').factory('Building', ['$http', 'appConfig', function($http, appConfig) {\n\n  function Building(data) {\n    if (data) {\n      this.setData(data);\n    }\n    // some init\n  };\n  Building.prototype = {\n    setData: function(data) {\n      angular.extend(this, data);\n    },\n    save: function() {\n      return $http.post(appConfig.apiUrl + '/buildings', this).then(function(resp) {\n        return resp.data;\n      });\n    },\n    delete: function() {\n      $http.delete(appConfig.apiUrl + '/buildings/' + this.id);\n    },\n    update: function() {\n      return $http.put(appConfig.apiUrl + '/buildings/' + this.id, this);\n    },\n  };\n  return Building;\n}]);\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.controller('BuildingListController', function ($scope, buildings, users) {\r\n    var vm = this;\r\n\r\n    vm.filtersOpen = false;\r\n\r\n    vm.buildings = [];\r\n    vm.users = [];\r\n    vm.currentPage = 1;\r\n    vm.itemsPerPage = 10;\r\n    vm.filter = {};\r\n\r\n    function loadUsers() {\r\n      users.list().then(function(usersList) {\r\n        vm.users = usersList;\r\n      });\r\n    }\r\n\r\n    function loadBuildings(q) {\r\n      buildings.list((vm.currentPage - 1) * vm.itemsPerPage, vm.itemsPerPage, q, vm.filter.authorId).then(function(result) {\r\n        vm.buildings = result.items;\r\n        vm.totalItems = result.total;\r\n      });\r\n    }\r\n\r\n    loadUsers();\r\n\r\n    vm.pageChanged = function() {\r\n      loadBuildings();\r\n    };\r\n\r\n    vm.search = function(q) {\r\n      vm.q = q;\r\n      console.log(\"Searched for: \", q);\r\n      loadBuildings(q);\r\n    };\r\n\r\n    vm.getBuildingDealers = function(building) {\r\n      return building.dealers.map(function(d) {return d.title;}).join(', ');\r\n    };\r\n\r\n    vm.pageChanged();\r\n  });\r\n\r\n  app.directive('convertToNumber', function() {\r\n    return {\r\n      require: 'ngModel',\r\n      link: function(scope, element, attrs, ngModel) {\r\n        ngModel.$parsers.push(function(val) {\r\n          return parseInt(val, 10);\r\n        });\r\n        ngModel.$formatters.push(function(val) {\r\n          return '' + val;\r\n        });\r\n      }\r\n    };\r\n  });\r\n\r\n}(angular.module('festima')));\r\n\r\n\n'use strict';\r\n\r\nangular.module('festima')\r\n  .controller('BuildingEditController', function ($stateParams, $location, $q, toastr, buildingsManager, buildings, buildingDealersService, contacts) {\r\n    var vm = this;\r\n\r\n    vm.buildingId = $stateParams.buildingId;\r\n\r\n    buildings.get(vm.buildingId).then(\r\n      function (building) {\r\n        vm.building = building;\r\n        vm.contacts = vm.building.contacts;\r\n      },\r\n      function () {\r\n        toastr.info('Объект не найден');\r\n        $location.url('/building/list');\r\n      }\r\n    );\r\n\r\n    buildingDealersService.getDealersPositionsMap(vm.buildingId).then(function (mapOfDealersPositions) {\r\n      vm.dealersPositionsMap = mapOfDealersPositions;\r\n    });\r\n\r\n    vm.addDealerPosition = function (dealerId, position) {\r\n      vm.dealersPositionsMap[dealerId].positions.push(position);\r\n    };\r\n\r\n    vm.removeDealerPosition = function (dealerId, position) {\r\n      var dealerPositions = vm.dealersPositionsMap[dealerId].positions;\r\n\r\n      if (position.id === undefined) {\r\n        var index = dealerPositions.indexOf(position);\r\n        if (index !== -1) {\r\n          dealerPositions.splice(index, 1);\r\n        }\r\n      } else {\r\n        position.removed = true;\r\n      }\r\n    };\r\n\r\n    vm.addDealer = function (dealer) {\r\n      if (!vm.isAddedDealer(dealer)) {\r\n        vm.dealersPositionsMap[dealer.id] = {name: dealer.title, positions: []};\r\n      }\r\n    };\r\n\r\n    vm.isAddedDealer = function (dealer) {\r\n      var index = Object.keys(vm.dealersPositionsMap).indexOf(String(dealer.id));\r\n\r\n      return index >= 0;\r\n    };\r\n\r\n    vm.saveChanges = function () {\r\n      $q.all([buildings.update(vm.building), updateBuildingContacts(vm.contacts)]).then(function(response) {\r\n        $location.path('/building/show/' + vm.building.id);\r\n      });\r\n\r\n      for (var dealerId in vm.dealersPositionsMap) {\r\n        buildingDealersService.saveDealerPositions(dealerId, vm.dealersPositionsMap[dealerId].positions);\r\n      }\r\n    };\r\n\r\n    vm.onSelectAddress = function(address) {\r\n      vm.building.address = address.full_name;\r\n      vm.building.location = address.geometry.centroid;\r\n    };\r\n\r\n    vm.contacts = [];\r\n\r\n    function addContact(newContact) {\r\n      vm.contacts.push({contact: {title: newContact.contactName, dictionary: {name: newContact.typeName}}, info: newContact.info, building: {id: vm.buildingId}, contactId: newContact.contactId});\r\n    }\r\n\r\n    function removeContact(contact) {\r\n      if (contact.id === undefined) {\r\n        var index = vm.contacts.indexOf(contact);\r\n        if (index !== -1) {\r\n          vm.contacts.splice(index, 1);\r\n        }\r\n      } else {\r\n        contact.removed = true;\r\n      }\r\n    }\r\n\r\n    vm.addContact = addContact;\r\n    vm.removeContact = removeContact;\r\n\r\n    function updateBuildingContacts(contactList) {\r\n      var contact;\r\n      var promises = [];\r\n\r\n      if (_.isEmpty(contactList)) {\r\n        return $q.when(null);\r\n      }\r\n\r\n      for(var i=0; i<contactList.length; i++) {\r\n        contact = contactList[i];\r\n\r\n        if (contact.removed === true) {\r\n          promises.push(contacts.delete(contact));\r\n        }\r\n\r\n        if (contact.id === undefined) {\r\n          promises.push(contacts.saveContact(contact));\r\n        }\r\n      }\r\n\r\n      return $q.all(promises);\r\n    }\r\n  }\r\n);\r\n\n'use strict';\n\nangular.module('festima')\n  .controller('BuildingCreateController', function($location, Building, toastr) {\n    var vm = this;\n\n    vm.building = new Building();\n\n    vm.saveChanges = function () {\n      vm.building.save().then(function (building) {\n        vm.buildingId = building.id;\n        vm.building = building;\n        $location.path('/building/show/' + vm.building.id);\n      });\n\n      toastr.success('Новый объект \"' + vm.building.name + '\" добавлен!');\n    };\n\n    vm.onSelectAddress = function(address) {\n      vm.addressObject = address;\n      vm.building.address = address.full_name;\n      vm.building.location = address.geometry.centroid;\n    };\n  }\n);\n\n(function(app) {\r\n  'use strict';\r\n\r\n  app.service('addresses', function($http, appConfig) {\r\n\r\n    angular.extend(this, {\r\n      listWithinRadius: function(latlng, radius) {\r\n\r\n        return $http.get(appConfig.apiUrl + '/locations', {params: {latlng: latlng, radius: radius}}).then(\r\n          function(response) {\r\n            return response.data;\r\n          }\r\n        );\r\n      }\r\n\r\n    });\r\n  });\r\n}) (angular.module('festima'));\r\n\n(function(app) {\n  'use strict';\n\n  app.controller('AddressListController', function($q, $location, $rootScope, _, maps, addresses) {\n    var vm = this;\n\n    vm.buildings = [];\n\n    function findNearbyBuildings(address) {\n      var latLng;\n      var buildingsPromise;\n\n      if (address) {\n        latLng = maps.centroidToLatlng(address.geometry.centroid);\n        buildingsPromise = addresses.listWithinRadius(latLng, 1000);\n      } else {\n        buildingsPromise = addresses.listWithinRadius();\n      }\n\n      return buildingsPromise;\n    }\n\n    function positionBuildingsOnMap(buildings, map) {\n      buildings.forEach(function(building) {\n        var latLng = maps.centroidToLatlng(building.location);\n\n        var marker = DG.marker(latLng, {\n          label: building.name\n        }).addTo(map);\n\n        marker['buildingId'] = building.id;\n        marker['buildingName'] = building.name;\n\n        marker.on('dblclick', function(e) {\n          $rootScope.$apply( function(){$location.path('/building/show/' + e.target.buildingId); } );\n        });\n      })\n    }\n\n    DG.then(function() {\n      var mapPromise = maps.initMap();\n      var buildingsPromise = findNearbyBuildings();\n\n      $q.all({map: mapPromise, buildings: buildingsPromise}).then(function(results) {\n        vm.map = results.map;\n        vm.buildings = results.buildings;\n\n        positionBuildingsOnMap(results.buildings, results.map);\n      });\n    });\n\n    vm.onSelectAddress = function(item) {\n      var latLng = maps.centroidToLatlng(item.geometry.centroid);\n\n      vm.addressObject = item;\n\n      vm.map.setZoom(maps.detailedZoom);\n      vm.map.panTo(latLng);\n    };\n  });\n\n}) (angular.module('festima'));\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('festima')\r\n    .run(runBlock)\r\n    .run(['$rootScope', '$window', '$state', 'OAuth', 'toastr', function($rootScope, $window, $state, OAuth, toastr) {\r\n      $rootScope.$on('$stateChangeError', function(event, toState, toParams, fromState, fromParams, error) {\r\n        event.preventDefault();\r\n        toastr.error('Объект не найден');\r\n        $state.go('private.buildinglist');\r\n      });\r\n\r\n      $rootScope.$on('oauth:error', function(event, rejection) {\r\n        // Ignore `invalid_grant` error - should be catched on `LoginController`.\r\n        if ('invalid_grant' === rejection.data.error) {\r\n          return;\r\n        }\r\n\r\n        // Refresh token when a `invalid_token` error occurs.\r\n        if ('invalid_token' === rejection.data.error) {\r\n          return OAuth.getRefreshToken();\r\n        }\r\n\r\n        // Redirect to `/login` with the `error_reason`.\r\n        return $window.location.href = '/login?error_reason=' + rejection.data.error;\r\n      });\r\n    }]);\r\n\r\n  /** @ngInject */\r\n  function runBlock($log) {\r\n\r\n    $log.debug('runBlock end');\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('festima')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider, $urlRouterProvider) {\r\n\r\n    $stateProvider\r\n      .state('private',{\r\n        url: '',\r\n        abstract: true,\r\n        views: {\r\n          app: {templateUrl: 'app/layouts/private-layout.html'}\r\n        },\r\n        resolve: {\r\n          loggedin: function(session) { return session.checkLoggedIn(); }\r\n        }\r\n      })\r\n      .state(\"private.logout\", {\r\n        url: \"/logout\",\r\n        resolve: {\r\n          loggedout: function(session) { return session.logout(); }\r\n        }\r\n      })\r\n      .state(\"private.main\", {\r\n        url: \"/\",\r\n        views: {\r\n          'container@private': { templateUrl: \"app/main/main.html\", controller: 'MainController', controllerAs: 'main' }\r\n        }\r\n      })\r\n      .state(\"private.buildinglist\", {\r\n        url: \"/building/list\",\r\n        views: {\r\n          'container@private': {templateUrl: 'app/building/building-list.html', controller: 'BuildingListController', controllerAs: 'vm'}\r\n        }\r\n      })\r\n      .state(\"private.buildingshow\", {\r\n        url: \"/building/show/:buildingId\",\r\n        views: {\r\n          'container@private': { templateUrl: 'app/building/building-show.html', controller: 'BuildingShowController', controllerAs: 'buildingVm' }\r\n        },\r\n        resolve: {\r\n          building: loadBuilding\r\n        },\r\n      })\r\n      .state(\"private.buildingedit\", {\r\n        url: \"/building/edit/:buildingId\",\r\n        views: {\r\n          'container@private': { templateUrl: 'app/building/building-edit.html', controller: 'BuildingEditController', controllerAs: 'vm' }\r\n        },\r\n        resolve: {\r\n          building: loadBuilding\r\n        }\r\n      })\r\n      .state(\"private.buildingcreate\", {\r\n        url: \"/building/create\",\r\n        views: {\r\n          'container@private': { templateUrl: 'app/building/building-create.html', controller: 'BuildingCreateController', controllerAs: 'vm' }\r\n        }\r\n      })\r\n      .state(\"private.addresslist\", {\r\n        url: \"/address/list\",\r\n        views: {\r\n          'container@private': { templateUrl: 'app/address/address-list.html', controller: 'AddressListController', controllerAs: 'vm' }\r\n        }\r\n      })\r\n      .state(\"private.dictionarieslist\", {\r\n        url: \"/dictionaries/list\",\r\n        views: {\r\n          'container@private': { templateUrl: 'app/dictionary/dictionary-list.html', controller: 'DictionaryListController', controllerAs: 'vm' }\r\n        }\r\n      })\r\n      .state(\"private.dictionaryshow\", {\r\n        url: \"/dictionaries/:key\",\r\n        views: {\r\n          'container@private': { templateUrl: 'app/dictionary/dictionary-show.html', controller: 'DictionaryShowController', controllerAs: 'vm' }\r\n        }\r\n      })\r\n      .state(\"public\", {\r\n        url: '',\r\n        abstract: true,\r\n        views: {\r\n          app: {templateUrl: 'app/layouts/public-layout.html'}\r\n        }\r\n      })\r\n      .state(\"public.login\", {\r\n        url: \"/login\",\r\n        views: {\r\n          'container@public': {templateUrl: \"app/login/login.html\", controller: \"LoginController\", controllerAs: 'vm'}\r\n        },\r\n        resolve: {\r\n          skipLoggedIn: function(session) { return session.skipLoggedIn(); }\r\n        }\r\n      })\r\n      .state(\"public.about\", {\r\n        url: \"/about\",\r\n        views: {\r\n          'container@public': {templateUrl: 'app/main/about.html', controller: 'AboutController', controllerAs: 'about'}\r\n        }\r\n      });\r\n\r\n    function loadBuilding(buildings, $stateParams, $state, $rootScope, toastr) {\r\n      // $rootScope.$on('$stateChangeError', function(event, toState, toParams, fromState, fromParams, error) {\r\n      //   event.preventDefault();\r\n      //   toastr.error('Объект не найден');\r\n      //   $state.go('private.buildinglist');\r\n      // });\r\n      return buildings.get($stateParams.buildingId);\r\n    }\r\n\r\n    $urlRouterProvider.otherwise('/');\r\n  }\r\n\r\n})();\r\n\n/* global malarkey:false, moment:false */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('festima')\r\n    .constant('malarkey', malarkey)\r\n    .constant('moment', moment)\r\n    .constant('_', window._)\r\n    .constant('appConfig', {\r\n      'apiUrl': 'http://138.201.116.95:8080/api'\r\n      // 'apiUrl': 'http://localhost:8080/api'\r\n    });\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('festima')\r\n    .config(config)\r\n    .config(['OAuthProvider', function(OAuthProvider) {\r\n      OAuthProvider.configure({\r\n        grantPath: '/oauth/token',\r\n        revokePath: '/oauth/revoke',\r\n        // baseUrl: 'http://localhost:8080',\r\n        baseUrl: 'http://138.201.116.95:8080',\r\n        clientId: 'estima-client',\r\n        options: {\r\n          secure: false\r\n        }\r\n      });\r\n    }])\r\n    .config(['OAuthTokenProvider', function(OAuthTokenProvider) {\r\n      OAuthTokenProvider.configure({\r\n        name: 'token',\r\n        options: {\r\n          secure: false\r\n        }\r\n      });\r\n    }]).config(['$httpProvider', function($httpProvider) {\r\n      $httpProvider.interceptors.push([\r\n        '$injector',\r\n        function ($injector) {\r\n          return $injector.get('AuthInterceptor');\r\n        }\r\n      ]);\r\n    }]).factory('AuthInterceptor', authInterceptor);\r\n\r\n  /** @ngInject */\r\n  function config($logProvider, toastrConfig) {\r\n    // Enable log\r\n    $logProvider.debugEnabled(true);\r\n\r\n    // Set options third-party lib\r\n    toastrConfig.allowHtml = true;\r\n    toastrConfig.timeOut = 3000;\r\n    toastrConfig.positionClass = 'toast-top-right';\r\n    toastrConfig.preventDuplicates = false;\r\n    toastrConfig.progressBar = true;\r\n  }\r\n\r\n  function authInterceptor($q, $location) {\r\n    return {\r\n      response: function (response) {\r\n        // do something on success\r\n        return response;\r\n      },\r\n      responseError: function (response) {\r\n        if (response.status === 401) {\r\n          $location.url('/login');\r\n        }\r\n        return $q.reject(response);\r\n      }\r\n    };\r\n  }\r\n\r\n})();\r\n\nangular.module(\"festima\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/address/address-list.html\",\"<div class=\\\"page-header\\\"><h1>Адреса</h1></div><es-address-input on-address-selected=\\\"vm.onSelectAddress(address)\\\"></es-address-input><br><div id=\\\"map\\\" style=\\\"width:100%; height:500px;\\\"></div><es-buildings-nearby address=\\\"vm.addressObject\\\"></es-buildings-nearby>\");\n$templateCache.put(\"app/building/building-create.html\",\"<div class=\\\"page-header\\\"><h1>Новый объект</h1></div><es-building-form building=\\\"vm.building\\\"><es-building-address building=\\\"vm.building\\\" on-address-selected=\\\"vm.onSelectAddress(address)\\\"></es-building-address></es-building-form><es-buildings-nearby address=\\\"vm.addressObject\\\"></es-buildings-nearby><hr><div class=\\\"panel panel-default\\\"><div class=\\\"panel-body\\\"><button class=\\\"btn btn-lg btn-success\\\" ng-click=\\\"vm.saveChanges()\\\">Создать</button> <a ng-href=\\\"#/building/list\\\" class=\\\"btn\\\">Отмена</a></div></div>\");\n$templateCache.put(\"app/building/building-edit.html\",\"<div class=\\\"page-header\\\"><h1 ng-bind=\\\"vm.building.name\\\">&nbsp;</h1></div><es-building-form building=\\\"vm.building\\\"><es-building-address building=\\\"vm.building\\\" on-address-selected=\\\"vm.onSelectAddress(address)\\\"></es-building-address></es-building-form><h2>Контакты</h2><div class=\\\"panel panel-default\\\"><div class=\\\"panel-heading\\\"><div class=\\\"row\\\"><es-add-contact on-contact-added=\\\"vm.addContact(newContact)\\\"></es-add-contact></div></div><div class=\\\"panel-body\\\"><es-building-contacts contacts=\\\"vm.contacts\\\" on-remove-contact=\\\"vm.removeContact(contact)\\\"></es-building-contacts></div></div><h2>Позиции</h2><div ng-repeat=\\\"(dealerId, dealerMap) in vm.dealersPositionsMap\\\"><es-dealer-positions positions=\\\"dealerMap.positions\\\" new-position=\\\"{building: vm.building, dealerId: dealerId}\\\" on-delete-position=\\\"vm.removeDealerPosition(dealerId, position)\\\" on-add-position=\\\"vm.addDealerPosition(dealerId, position)\\\"><h4 ng-bind=\\\"dealerMap.name\\\"></h4></es-dealer-positions></div><es-add-dealer-button on-add-dealer=\\\"vm.addDealer(dealer)\\\" on-check-added=\\\"vm.isAddedDealer(dealer)\\\"></es-add-dealer-button><hr><div class=\\\"panel panel-default\\\"><div class=\\\"panel-body\\\"><button class=\\\"btn btn-lg btn-success\\\" ng-click=\\\"vm.saveChanges()\\\">Сохранить изменения</button> <a ng-href=\\\"#/building/show/{{vm.building.id}}\\\" class=\\\"btn\\\">Отмена</a></div></div>\");\n$templateCache.put(\"app/building/building-list.html\",\"<div class=\\\"page-header\\\"><div class=\\\"btn-toolbar pull-right\\\"><button type=\\\"button\\\" class=\\\"btn btn-default\\\" uib-btn-checkbox=\\\"\\\" ng-model=\\\"vm.filtersOpen\\\"><i class=\\\"fa fa-cogs\\\"></i></button><div class=\\\"btn-group\\\"><a ng-href=\\\"#/building/create\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-plus-square\\\"></i> Добавить объект</a></div></div><h1 class=\\\"form-inline\\\">Список объектов <small ng-bind=\\\"vm.totalItems\\\"></small> <small class=\\\"pull-right\\\"><es-search on-search-changed=\\\"vm.search(q)\\\"></es-search></small></h1></div><div uib-collapse=\\\"!vm.filtersOpen\\\"><div class=\\\"well well-lg\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-6 form-inline\\\"><div class=\\\"form-group\\\"><label for=\\\"itemsNumber\\\">На странице</label><select ng-model=\\\"vm.itemsPerPage\\\" class=\\\"form-control\\\" id=\\\"itemsNumber\\\" convert-to-number=\\\"\\\" ng-change=\\\"vm.pageChanged()\\\"><option value=\\\"10\\\">10</option><option value=\\\"20\\\">20</option><option value=\\\"50\\\">50</option><option value=\\\"100\\\">100</option></select></div></div><div class=\\\"col-sm-12 col-md-6 form-inline\\\"><div class=\\\"form-group\\\"><label for=\\\"managerFilter\\\">Менеджер</label><select id=\\\"managerFilter\\\" class=\\\"form-control\\\" ng-model=\\\"vm.filter.authorId\\\" ng-change=\\\"vm.pageChanged()\\\" ng-options=\\\"user.id as user.name for user in vm.users track by user.id\\\"><option value=\\\"\\\">-</option></select></div></div></div></div></div><table class=\\\"table table-bordered table-striped\\\"><thead><tr><th class=\\\"col-md-3\\\">Название</th><th class=\\\"col-md-4\\\">Адрес</th><th class=\\\"col-md-2\\\">Дилеры</th><th class=\\\"col-md-1\\\"><abbr title=\\\"Дата создания 1й позиции\\\">Создано</abbr></th><th class=\\\"col-md-1\\\"><abbr title=\\\"Дата обновления позиций\\\">Обновлено</abbr></th><th class=\\\"col-md-1\\\">Менеджер</th></tr></thead><tbody><tr ng-repeat=\\\"building in vm.buildings track by building.id\\\"><th scope=\\\"row\\\"><a href=\\\"#/building/show/{{::building.id}}\\\" style=\\\"font-weight: normal;\\\" ng-bind-html=\\\"building.name | highlight: vm.q\\\"></a></th><td><small ng-bind-html=\\\"building.address | highlight: vm.q\\\"></small></td><td>{{vm.getBuildingDealers(building)}}</td><td><small ng-bind=\\\"building.dateCreated | date: \\'dd.MM.yyyy HH:mm\\'\\\"></small></td><td><small ng-bind=\\\"building.lastUpdated | date : \\'dd.MM.yyyy HH:mm\\'\\\"></small></td><td ng-bind=\\\"building.author.name\\\"></td></tr></tbody></table><ul uib-pagination=\\\"\\\" total-items=\\\"vm.totalItems\\\" items-per-page=\\\"vm.itemsPerPage\\\" ng-model=\\\"vm.currentPage\\\" ng-change=\\\"vm.pageChanged()\\\"></ul>\");\n$templateCache.put(\"app/building/building-show.html\",\"<div class=\\\"page-header\\\"><div class=\\\"btn-toolbar pull-right\\\"><div class=\\\"btn-group\\\"><a href=\\\"#/building/edit/{{buildingVm.building.id}}\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-edit\\\"></i> Редактировать</a></div></div><h1 ng-bind=\\\"buildingVm.building.name\\\">&nbsp;</h1></div><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-6\\\"><div id=\\\"map\\\" style=\\\"width:500px; height:400px\\\"></div></div><div class=\\\"col-sm-12 col-md-6\\\"><address ng-bind=\\\"buildingVm.building.address\\\"></address><dl class=\\\"dl-horizontal no-margin pull-left\\\"><dt>Заказчик</dt><dd ng-bind=\\\"buildingVm.building.client.title\\\">&nbsp;</dd><dt>Проект</dt><dd ng-bind=\\\"buildingVm.building.project.title\\\">&nbsp;</dd><dt>Менеджер</dt><dd ng-bind=\\\"buildingVm.building.author.name\\\">&nbsp;</dd><dt ng-bind=\\\"contact.contact.dictionary.name\\\" ng-repeat-start=\\\"contact in buildingVm.contacts track by contact.id\\\">&nbsp;</dt><dd ng-bind=\\\"contact.contact.name\\\">&nbsp;</dd><dt>&nbsp;</dt><dd ng-bind=\\\"contact.info\\\" ng-repeat-end=\\\"\\\"></dd></dl></div></div><es-comments comments=\\\"buildingVm.comments\\\" on-add-comment=\\\"buildingVm.addComment(comment)\\\"></es-comments>\");\n$templateCache.put(\"app/dictionary/dictionary-list.html\",\"<div class=\\\"page-header\\\"><h1>Справочники</h1></div><table class=\\\"table table-bordered table-striped\\\"><thead><tr><th class=\\\"col-md-4\\\">Название</th><th class=\\\"col-md-8\\\"></th></tr></thead><tbody><tr ng-repeat=\\\"dictionary in vm.dictionaries\\\"><td><a href=\\\"#/dictionaries/{{::dictionary.key}}\\\" ng-bind=\\\"dictionary.name\\\"></a></td><td>hello</td></tr></tbody></table>\");\n$templateCache.put(\"app/dictionary/dictionary-show.html\",\"<div class=\\\"page-header\\\"><h1 ng-bind=\\\"vm.dictionary.name\\\"></h1></div><es-dictionary key=\\\"vm.key\\\"></es-dictionary>\");\n$templateCache.put(\"app/layouts/private-layout.html\",\"<div><acme-navbar creation-date=\\\"main.creationDate\\\"></acme-navbar></div><div ui-view=\\\"container\\\"></div>\");\n$templateCache.put(\"app/layouts/public-layout.html\",\"<div ui-view=\\\"container\\\"></div>\");\n$templateCache.put(\"app/login/login.html\",\"<div class=\\\"container\\\"><form class=\\\"form-signin\\\" name=\\\"vm.loginForm\\\" ng-submit=\\\"vm.login(vm.loginForm.$valid)\\\" novalidate=\\\"\\\"><h2 class=\\\"form-signin-heading\\\">Вход в систему</h2><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': vm.loginForm.email.$touched && vm.loginForm.email.$invalid }\\\"><label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email</label> <input type=\\\"email\\\" id=\\\"inputEmail\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" required=\\\"\\\" autofocus=\\\"\\\" ng-model=\\\"vm.email\\\" ng-click=\\\"$event.stopPropagation()\\\"><p ng-show=\\\"vm.loginForm.email.$invalid && vm.loginForm.email.$touched\\\" class=\\\"help-block\\\">Неправильный email.</p></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error\\': vm.loginForm.password.$touched && vm.loginForm.password.$invalid }\\\"><label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Пароль</label> <input type=\\\"password\\\" id=\\\"inputPassword\\\" name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Пароль\\\" required=\\\"\\\" ng-model=\\\"vm.password\\\" ng-click=\\\"$event.stopPropagation()\\\"><div class=\\\"help-block\\\" ng-messages=\\\"vm.loginForm.password.$error\\\" ng-if=\\\"vm.loginForm.password.$invalid && vm.loginForm.password.$touched\\\"><p ng-message=\\\"minlength\\\">Your name is too short.</p><p ng-message=\\\"maxlength\\\">Your name is too long.</p><p ng-message=\\\"required\\\">Неверный пароль.</p></div></div><div class=\\\"form-group\\\"><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" value=\\\"remember-me\\\"> Запомнить меня</label></div></div><button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" ng-disabled=\\\"!vm.loginForm.$submitted && vm.loginForm.$invalid\\\">Войти</button></form></div>\");\n$templateCache.put(\"app/main/about.html\",\"<p>О системе</p>\");\n$templateCache.put(\"app/main/main.html\",\"<div class=\\\"jumbotron text-center\\\"><h1>Estima application</h1><p class=\\\"lead\\\"></p><button type=\\\"button\\\" class=\\\"btn btn-lg btn-success\\\" ng-click=\\\"main.showToastr()\\\">Уведомление</button><p></p></div><div class=\\\"row\\\"></div>\");\n$templateCache.put(\"app/components/addContact/add-contact.html\",\"<div class=\\\"col-sm-3\\\"><label class=\\\"sr-only\\\" for=\\\"contactType\\\">Тип контакта</label><select ng-model=\\\"addContactVm.newItem.contactType\\\" class=\\\"form-control\\\" id=\\\"contactType\\\"><option value=\\\"\\\" disabled=\\\"\\\" selected=\\\"\\\">Выбрать тип контакта...</option><option ng-repeat=\\\"option in addContactVm.contactTypes\\\" value=\\\"{{::option.key}}\\\">{{::option.name}}</option></select></div><div class=\\\"col-sm-3\\\"><label class=\\\"sr-only\\\" for=\\\"contactName\\\">Контакт</label><select class=\\\"form-control\\\" id=\\\"contactName\\\" ng-model=\\\"addContactVm.newItem.contactId\\\"><option value=\\\"\\\" disabled=\\\"\\\" selected=\\\"\\\">Выбрать контакт...</option><option ng-repeat=\\\"option in addContactVm.contacts\\\" value=\\\"{{::option.id}}\\\">{{::option.title}}</option></select></div><div class=\\\"col-sm-4\\\"><label class=\\\"sr-only\\\" for=\\\"contactInfo\\\">Информация</label> <textarea class=\\\"form-control\\\" id=\\\"contactInfo\\\" ng-model=\\\"addContactVm.newItem.info\\\" placeholder=\\\"Информация\\\"></textarea></div><div class=\\\"col-sm-2\\\"><button type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\" ng-click=\\\"addContactVm.addContact(addContactVm.newItem)\\\" ng-disabled=\\\"!addContactVm.newItem.contactId\\\">Добавить</button></div>\");\n$templateCache.put(\"app/components/addDealerButton/add-dealer-button.html\",\"<div class=\\\"input-group\\\"><es-dictionary-autocomplete key=\\\"dealers\\\" selected=\\\"addDealerVm.dealer\\\"></es-dictionary-autocomplete><div class=\\\"input-group-btn\\\"><button class=\\\"btn btn-primary\\\" ng-click=\\\"addDealerVm.addDealer()\\\" ng-disabled=\\\"!addDealerVm.dealer\\\">Добавить</button></div></div>\");\n$templateCache.put(\"app/components/addressInput/address-input.html\",\"<input type=\\\"text\\\" id=\\\"address\\\" ng-model=\\\"addressInputVm.asyncSelected\\\" placeholder=\\\"Адрес...\\\" class=\\\"form-control\\\" ng-model-options=\\\"{ debounce: { default: 500, blur: 100 } }\\\" uib-typeahead=\\\"address.hint.text for address in addressInputVm.getLocation($viewValue)\\\" typeahead-loading=\\\"loadingLocations\\\" typeahead-no-results=\\\"noResults\\\" typeahead-on-select=\\\"addressInputVm.onSelect($item, $model, $label)\\\"> <i ng-show=\\\"loadingLocations\\\" class=\\\"glyphicon glyphicon-refresh\\\"></i><div ng-show=\\\"noResults\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i> No Results Found</div>\");\n$templateCache.put(\"app/components/buildingAddress/building-address.html\",\"<input type=\\\"text\\\" id=\\\"address\\\" ng-model=\\\"addressVm.asyncSelected\\\" placeholder=\\\"Адрес объекта...\\\" class=\\\"form-control\\\" ng-model-options=\\\"{ debounce: { default: 500, blur: 100 } }\\\" uib-typeahead=\\\"address.hint.text for address in addressVm.getLocation($viewValue)\\\" typeahead-loading=\\\"loadingLocations\\\" typeahead-no-results=\\\"noResults\\\" typeahead-on-select=\\\"addressVm.onSelect($item, $model, $label)\\\"> <i ng-show=\\\"loadingLocations\\\" class=\\\"glyphicon glyphicon-refresh\\\"></i><div ng-show=\\\"noResults\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i> No Results Found</div><br><div id=\\\"map\\\" style=\\\"width:500px; height:400px\\\"></div>\");\n$templateCache.put(\"app/components/buildingContacts/building-contacts.html\",\"<table class=\\\"table table-striped table-condensed table-vcenter\\\"><tbody><tr ng-repeat-start=\\\"contact in buildingContactsVm.contacts | notRemoved:contact\\\" ng-repeat-end=\\\"\\\"><td class=\\\"col-md-3 text-center\\\" ng-bind=\\\"contact.contact.dictionary.name\\\">&nbsp;</td><td class=\\\"col-md-3 text-center\\\" ng-bind=\\\"contact.contact.title\\\">&nbsp;</td><td class=\\\"col-md-4 text-center\\\" ng-bind=\\\"contact.info\\\">&nbsp;</td><td class=\\\"col-md-2 text-center\\\"><a class=\\\"btn text-danger\\\" ng-click=\\\"buildingContactsVm.removeContact(contact)\\\"><i class=\\\"fa fa-remove\\\"></i></a></td></tr></tbody></table>\");\n$templateCache.put(\"app/components/buildingForm/building-form.html\",\"<div class=\\\"well\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-6\\\"><div class=\\\"form-group\\\"><label for=\\\"name\\\">Название</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"buildingFormVm.building.name\\\" id=\\\"name\\\" placeholder=\\\"Название\\\"></div><div class=\\\"form-group\\\"><label>Заказчик</label><es-dictionary-autocomplete key=\\\"customers\\\" selected=\\\"buildingFormVm.building.client\\\"></es-dictionary-autocomplete></div><div class=\\\"form-group\\\"><label>Проектная организация</label><es-dictionary-autocomplete key=\\\"designers\\\" selected=\\\"buildingFormVm.building.project\\\"></es-dictionary-autocomplete></div><div class=\\\"form-group\\\"><label for=\\\"description\\\">Примечание</label> <textarea class=\\\"form-control\\\" rows=\\\"5\\\" ng-model=\\\"buildingFormVm.building.description\\\" id=\\\"description\\\" placeholder=\\\"Примечание\\\"></textarea></div></div><div class=\\\"col-sm-12 col-md-6\\\"><div class=\\\"form-group\\\"><label for=\\\"address\\\">Адрес</label><ng-transclude></ng-transclude></div></div></div></div>\");\n$templateCache.put(\"app/components/buildingsNearby/buildings-nearby.html\",\"<div ng-if=\\\"vm.buildings.length > 0\\\"><h2>Найдены объекты в радиусе 1 км</h2><div class=\\\"row\\\"></div><ul><li ng-repeat=\\\"building in vm.buildings\\\"><a href=\\\"#/building/show/{{::building.id}}\\\">{{building.name}} ({{building.address}})</a></li></ul></div><div ng-if=\\\"vm.buildings.length == 0\\\"><h2>Ничего не найдено в радиусе 1 км</h2></div>\");\n$templateCache.put(\"app/components/comment/comment.html\",\"<div class=\\\"well\\\"><div class=\\\"media\\\"><div class=\\\"media-body\\\"><h4 class=\\\"media-heading\\\">{{::commentVm.comment.author.name}} <small ng-bind=\\\"commentVm.comment.dateCreated | date: \\'dd.MM.yyyy HH:mm\\'\\\"></small></h4>{{::commentVm.comment.text}}</div></div></div>\");\n$templateCache.put(\"app/components/comments/comments.html\",\"<h2>Комментарии <small ng-bind=\\\"commentsVm.comments.length\\\"></small></h2><div class=\\\"well\\\"><h4>Новый комментарий:</h4><form role=\\\"form\\\"><div class=\\\"form-group\\\"><textarea class=\\\"form-control\\\" rows=\\\"3\\\" ng-model=\\\"commentsVm.newComment.text\\\"></textarea></div><button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"commentsVm.addNewComment()\\\">Добавить</button></form></div><hr><div ng-repeat=\\\"comment in commentsVm.comments\\\"><es-comment comment=\\\"comment\\\"></es-comment></div>\");\n$templateCache.put(\"app/components/dealerPositions/dealer-positions.html\",\"<div class=\\\"panel panel-default\\\"><div class=\\\"panel-heading\\\"><ng-transclude></ng-transclude><table class=\\\"table table-condensed table-vcenter table-noborder\\\"><thead><tr class=\\\"tr-noborder\\\"><th class=\\\"col-md-2 text-center\\\">Контакт</th><th class=\\\"col-md-1 text-center\\\">Тип</th><th class=\\\"col-md-2 text-center\\\">Спецификация</th><th class=\\\"col-md-1 text-center\\\">Количество</th><th class=\\\"col-md-1 text-center\\\"><abbr title=\\\"Цена на объекте\\\">Цена 1</abbr></th><th class=\\\"col-md-1 text-center\\\"><abbr title=\\\"Цена входящая для дилера\\\">Цена 2</abbr></th><th class=\\\"col-md-1 text-center\\\">Сумма</th><th class=\\\"col-md-1 text-center\\\">Статус</th><th class=\\\"col-md-1 text-center\\\">Отгрузка</th><th class=\\\"col-md-1 text-center\\\"></th></tr></thead><tbody><tr ng-form=\\\"\\\"><td class=\\\"col-md-2\\\"><input class=\\\"form-control\\\" type=\\\"text\\\" ng-model=\\\"positionsVm.inputPosition.contactName\\\"></td><td class=\\\"col-md-1\\\"><select class=\\\"form-control\\\" ng-model=\\\"positionsVm.inputPosition.type\\\" ng-options=\\\"type as type for type in positionsVm.types\\\"></select></td><td class=\\\"col-md-2\\\"><input class=\\\"form-control\\\" type=\\\"text\\\" ng-model=\\\"positionsVm.inputPosition.spec\\\"></td><td class=\\\"col-sm-1\\\"><input type=\\\"number\\\" class=\\\"form-control\\\" ng-model=\\\"positionsVm.inputPosition.quantity\\\"></td><td class=\\\"col-md-1\\\"><input class=\\\"form-control\\\" type=\\\"number\\\" ng-model=\\\"positionsVm.inputPosition.grossPrice\\\"></td><td class=\\\"col-md-1\\\"><input class=\\\"form-control\\\" type=\\\"number\\\" ng-model=\\\"positionsVm.inputPosition.dealerPrice\\\"></td><td class=\\\"col-md-1\\\"><span class=\\\"form-control\\\" disabled=\\\"\\\" ng-bind=\\\"(positionsVm.inputPosition.dealerPrice * positionsVm.inputPosition.quantity) || \\'?\\'\\\"></span></td><td class=\\\"col-md-1\\\"><select class=\\\"form-control\\\" ng-model=\\\"positionsVm.inputPosition.status\\\" ng-options=\\\"status as status for status in positionsVm.statuses\\\"></select></td><td class=\\\"col-md-1\\\"></td><td class=\\\"col-md-1\\\"><input class=\\\"form-control btn btn-success\\\" type=\\\"submit\\\" value=\\\"Добавить\\\" ng-click=\\\"positionsVm.addNewPosition()\\\"></td></tr></tbody></table></div><div class=\\\"panel-body\\\"><table class=\\\"table table-striped table-condensed table-vcenter\\\"><tbody><tr ng-repeat-start=\\\"position in positionsVm.positions | filter:positionsVm.activePosition\\\" ng-repeat-end=\\\"\\\"><td class=\\\"col-md-2 text-center\\\" ng-bind=\\\"position.contactName\\\">&nbsp;</td><td class=\\\"col-md-1 text-center\\\" ng-bind=\\\"position.type\\\">&nbsp;</td><td class=\\\"col-md-2 text-center\\\" ng-bind=\\\"position.spec\\\">&nbsp;</td><td class=\\\"col-md-1 text-center\\\" ng-bind=\\\"position.quantity\\\">&nbsp;</td><td class=\\\"col-md-1 text-center\\\" ng-bind=\\\"position.grossPrice\\\">&nbsp;</td><td class=\\\"col-md-1 text-center\\\" ng-bind=\\\"position.dealerPrice\\\">&nbsp;</td><td class=\\\"col-md-1 text-center\\\" ng-bind=\\\"(position.dealerPrice * position.quantity) || \\'?\\'\\\">&nbsp;</td><td class=\\\"col-md-1 text-center\\\" ng-bind=\\\"position.status\\\">&nbsp;</td><td class=\\\"col-md-1 text-center\\\" ng-bind=\\\"position.dateShipped\\\">&nbsp;</td><td class=\\\"col-md-1 text-center\\\"><a class=\\\"btn text-warning\\\"><i class=\\\"fa fa-pencil\\\"></i></a> <a class=\\\"btn text-danger\\\" ng-click=\\\"positionsVm.removePosition(position)\\\"><i class=\\\"fa fa-remove\\\"></i></a></td></tr></tbody></table></div></div>\");\n$templateCache.put(\"app/components/dictionary/dictionary.html\",\"<div class=\\\"container-fluid\\\"><div class=\\\"panel panel-default\\\"><div class=\\\"panel-body\\\"><form class=\\\"form-inline\\\"><div class=\\\"form-group\\\"><label class=\\\"sr-only\\\" for=\\\"title\\\">Название</label> <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" ng-model=\\\"dictionaryVm.newItem.title\\\" placeholder=\\\"Название\\\"></div><div class=\\\"form-group\\\"><label class=\\\"sr-only\\\" for=\\\"contactName\\\">Контактное лицо</label> <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contactName\\\" ng-model=\\\"dictionaryVm.newItem.contactName\\\" placeholder=\\\"Контактное лицо\\\"></div><div class=\\\"form-group\\\"><label class=\\\"sr-only\\\" for=\\\"contactPosition\\\">Должность</label> <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contactPosition\\\" ng-model=\\\"dictionaryVm.newItem.contactPosition\\\" placeholder=\\\"Должность\\\"></div><div class=\\\"form-group\\\"><label class=\\\"sr-only\\\" for=\\\"phone\\\">Телефон</label> <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone\\\" ng-model=\\\"dictionaryVm.newItem.phone\\\" placeholder=\\\"Телефон\\\"></div><button type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\" ng-click=\\\"dictionaryVm.add(dictionaryVm.newItem)\\\">Добавить</button></form></div></div><table class=\\\"table table-bordered table-striped\\\"><thead><tr><th class=\\\"col-md-3\\\">Название</th><th class=\\\"col-md-3\\\">Контактное лицо</th><th class=\\\"col-md-3\\\">Должность</th><th class=\\\"col-md-3\\\">Телефон</th></tr></thead><tbody><tr ng-repeat=\\\"item in dictionaryVm.items\\\"><td class=\\\"col-md-3\\\" ng-bind=\\\"item.title\\\"></td><td class=\\\"col-md-3\\\" ng-bind=\\\"item.contactName\\\"></td><td class=\\\"col-md-3\\\" ng-bind=\\\"item.contactPosition\\\"></td><td class=\\\"col-md-3\\\" ng-bind=\\\"item.phone\\\"></td></tr></tbody></table><ul uib-pagination=\\\"\\\" total-items=\\\"dictionaryVm.totalItems\\\" items-per-page=\\\"dictionaryVm.itemsPerPage\\\" ng-model=\\\"dictionaryVm.currentPage\\\" ng-change=\\\"dictionaryVm.pageChanged()\\\"></ul></div>\");\n$templateCache.put(\"app/components/dictionaryAutocomplete/dictionary-autocomplete.html\",\"<ui-select ng-model=\\\"vm.selected\\\" theme=\\\"bootstrap\\\" ng-disabled=\\\"false\\\" reset-search-input=\\\"true\\\"><ui-select-match placeholder=\\\"Выбрать...\\\">{{$select.selected.title}}</ui-select-match><ui-select-choices repeat=\\\"item in vm.items track by $index\\\" refresh=\\\"vm.refreshItems($select.search)\\\" refresh-delay=\\\"0\\\"><div ng-bind-html=\\\"vm.trustAsHtml((item.title | highlight: $select.search))\\\"></div></ui-select-choices></ui-select>\");\n$templateCache.put(\"app/components/messagesButton/messages-button.html\",\"<button class=\\\"btn btn-default\\\" ng-click=\\\"messagesButtonVm.openMessages()\\\"><span class=\\\"fa fa-comments\\\"></span></button>\");\n$templateCache.put(\"app/components/messagesButton/messages-modal.html\",\"<div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" ng-click=\\\"messagesModalVm.cancel()\\\">&times;</button><h4 class=\\\"modal-title\\\">Заметки по позиции</h4></div><div class=\\\"modal-body\\\"><div class=\\\"form-group\\\"><div class=\\\"input-group\\\"><textarea class=\\\"form-control\\\" row=\\\"3\\\" placeholder=\\\"Новое сообщение\\\" ng-model=\\\"messagesModalVm.newMessage.text\\\"></textarea> <span class=\\\"input-group-addon btn btn-primary input-lg\\\" ng-click=\\\"messagesModalVm.addNewMessage()\\\">Добавить</span></div></div><div ng-repeat=\\\"message in messagesModalVm.messages | orderBy:\\'dateCreated\\':true\\\" class=\\\"media\\\"><div class=\\\"media-left\\\"></div><div class=\\\"media-body\\\"><h4 class=\\\"media-heading\\\"><span ng-bind=\\\"message.author.name\\\"></span> <small>{{::message.dateCreated | date: \\'dd.MM.yyyy HH:mm\\'}}</small></h4>{{::message.text}}</div></div></div><div class=\\\"modal-footer\\\"><button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" ng-click=\\\"messagesModalVm.cancel()\\\">Close</button> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" ng-click=\\\"messagesModalVm.ok()\\\">OK</button></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-static-top navbar-inverse\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><a class=\\\"navbar-brand\\\" href=\\\"#/\\\">Estima</a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-6\\\"><ul class=\\\"nav navbar-nav\\\"><li><a href=\\\"#/\\\" class=\\\"glyphicon glyphicon-home\\\"></a></li><li><a ng-href=\\\"#/building/list\\\">Объекты</a></li><li><a ng-href=\\\"#/address/list\\\">Адреса</a></li><li><a ng-href=\\\"#/dictionaries/list\\\">Справочники</a></li><li><a ng-href=\\\"#/about\\\">О системе</a></li></ul><ul class=\\\"nav navbar-nav navbar-right\\\"><li class=\\\"dropdown\\\" uib-dropdown=\\\"\\\"><a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" uib-dropdown-toggle=\\\"\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span ng-bind=\\\"vm.user.name\\\"></span> <span class=\\\"caret\\\"></span></a><ul class=\\\"dropdown-menu\\\" uib-dropdown-menu=\\\"\\\"><li><a href=\\\"#\\\">Личный кабинет</a></li><li role=\\\"separator\\\" class=\\\"divider\\\"></li><li><a href=\\\"#/logout\\\">Выход</a></li></ul></li></ul><span class=\\\"nav navbar-nav navbar-right\\\" style=\\\"padding-top: 10px;\\\"><spinner name=\\\"authSpinner\\\" img-src=\\\"assets/images/ajax-loader.gif\\\"></spinner></span></div></div></nav>\");\n$templateCache.put(\"app/components/search/search.html\",\"<input type=\\\"text\\\" placeholder=\\\"Поиск...\\\" class=\\\"form-control\\\" style=\\\"vertical-align: bottom;\\\" ng-model=\\\"searchVm.q\\\" ng-model-options=\\\"{ debounce: 1000 }\\\">\");}]);"],"sourceRoot":"/source/"}